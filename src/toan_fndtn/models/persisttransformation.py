"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .storagelevel import StorageLevel
import pydantic
from pydantic.functional_validators import AfterValidator
from toan_fndtn.types import BaseModel
from toan_fndtn.utils import validate_const
from typing import Literal
from typing_extensions import Annotated, TypedDict


class PersistTransformationTypedDict(TypedDict):
    r"""Persist transformation that saves data to storage."""

    input: str
    output: str
    storage_level: StorageLevel
    r"""Storage level."""
    transform: Literal["persist"]


class PersistTransformation(BaseModel):
    r"""Persist transformation that saves data to storage."""

    input: str

    output: str

    storage_level: StorageLevel
    r"""Storage level."""

    TRANSFORM: Annotated[
        Annotated[Literal["persist"], AfterValidator(validate_const("persist"))],
        pydantic.Field(alias="transform"),
    ] = "persist"
