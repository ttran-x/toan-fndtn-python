"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from pydantic import model_serializer
from toan_fndtn.types import BaseModel, Nullable, UNSET_SENTINEL
from typing import Any, Dict
from typing_extensions import TypedDict


class OrchestratorWorkflowTypedDict(TypedDict):
    identifier: str
    data_product_identifier: str
    name: str
    run_type: str
    config: Nullable[Dict[str, Any]]
    status: str
    created_by: Nullable[str]
    created_at: datetime
    updated_at: Nullable[datetime]
    started_at: Nullable[datetime]
    completed_at: Nullable[datetime]
    error_message: Nullable[str]


class OrchestratorWorkflow(BaseModel):
    identifier: str

    data_product_identifier: str

    name: str

    run_type: str

    config: Nullable[Dict[str, Any]]

    status: str

    created_by: Nullable[str]

    created_at: datetime

    updated_at: Nullable[datetime]

    started_at: Nullable[datetime]

    completed_at: Nullable[datetime]

    error_message: Nullable[str]

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = []
        nullable_fields = [
            "config",
            "created_by",
            "updated_at",
            "started_at",
            "completed_at",
            "error_message",
        ]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
