"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .deduplicationkeep import DeduplicationKeep
import pydantic
from pydantic.functional_validators import AfterValidator
from toan_fndtn.types import BaseModel
from toan_fndtn.utils import validate_const
from typing import List, Literal
from typing_extensions import Annotated, TypedDict


class DeduplicateKeepTransformationTypedDict(TypedDict):
    r"""Deduplicate keep transformation."""

    input: str
    output: str
    key_columns: List[str]
    order_column: str
    keep: DeduplicationKeep
    r"""Deduplication keep."""
    transform: Literal["deduplicate_with_keep"]


class DeduplicateKeepTransformation(BaseModel):
    r"""Deduplicate keep transformation."""

    input: str

    output: str

    key_columns: List[str]

    order_column: str

    keep: DeduplicationKeep
    r"""Deduplication keep."""

    TRANSFORM: Annotated[
        Annotated[
            Literal["deduplicate_with_keep"],
            AfterValidator(validate_const("deduplicate_with_keep")),
        ],
        pydantic.Field(alias="transform"),
    ] = "deduplicate_with_keep"
