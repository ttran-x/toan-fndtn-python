"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .databasedatasourceconnectiondetails import (
    DatabaseDataSourceConnectionDetails,
    DatabaseDataSourceConnectionDetailsTypedDict,
)
from .s3datasourceconnectiondetails import (
    S3DataSourceConnectionDetails,
    S3DataSourceConnectionDetailsTypedDict,
)
from .syntheticdatasourceconnectiondetails import (
    SyntheticDataSourceConnectionDetails,
    SyntheticDataSourceConnectionDetailsTypedDict,
)
from pydantic import Discriminator, Tag
from toan_fndtn.types import BaseModel
from toan_fndtn.utils import get_discriminator
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


UpdateDataSourceConnectionConnectionTypedDict = TypeAliasType(
    "UpdateDataSourceConnectionConnectionTypedDict",
    Union[
        SyntheticDataSourceConnectionDetailsTypedDict,
        S3DataSourceConnectionDetailsTypedDict,
        DatabaseDataSourceConnectionDetailsTypedDict,
    ],
)


UpdateDataSourceConnectionConnection = Annotated[
    Union[
        Annotated[DatabaseDataSourceConnectionDetails, Tag("database")],
        Annotated[S3DataSourceConnectionDetails, Tag("s3")],
        Annotated[SyntheticDataSourceConnectionDetails, Tag("synthetic")],
    ],
    Discriminator(lambda m: get_discriminator(m, "connection_type", "connection_type")),
]


class UpdateDataSourceConnectionTypedDict(TypedDict):
    r"""Update data source connection."""

    connection: UpdateDataSourceConnectionConnectionTypedDict


class UpdateDataSourceConnection(BaseModel):
    r"""Update data source connection."""

    connection: UpdateDataSourceConnectionConnection
