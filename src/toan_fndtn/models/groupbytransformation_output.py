"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from pydantic.functional_validators import AfterValidator
from toan_fndtn.types import BaseModel
from toan_fndtn.utils import validate_const
from typing import List, Literal
from typing_extensions import Annotated, TypedDict


class GroupByTransformationOutputAggregationsTypedDict(TypedDict):
    pass


class GroupByTransformationOutputAggregations(BaseModel):
    pass


class GroupByTransformationOutputTypedDict(TypedDict):
    r"""Group by transformation."""

    input: str
    output: str
    group_columns: List[str]
    aggregations: GroupByTransformationOutputAggregationsTypedDict
    transform: Literal["group_by"]


class GroupByTransformationOutput(BaseModel):
    r"""Group by transformation."""

    input: str

    output: str

    group_columns: List[str]

    aggregations: GroupByTransformationOutputAggregations

    TRANSFORM: Annotated[
        Annotated[Literal["group_by"], AfterValidator(validate_const("group_by"))],
        pydantic.Field(alias="transform"),
    ] = "group_by"
