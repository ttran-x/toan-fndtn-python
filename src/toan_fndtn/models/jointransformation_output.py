"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .joincondition import JoinCondition, JoinConditionTypedDict
from .joinoperation import JoinOperation
import pydantic
from pydantic.functional_validators import AfterValidator
from toan_fndtn.types import BaseModel
from toan_fndtn.utils import validate_const
from typing import List, Literal
from typing_extensions import Annotated, TypedDict


class JoinTransformationOutputTypedDict(TypedDict):
    r"""Join transformation."""

    input: str
    output: str
    other: str
    join: JoinOperation
    r"""Join operation."""
    conditions: List[JoinConditionTypedDict]
    transform: Literal["join"]


class JoinTransformationOutput(BaseModel):
    r"""Join transformation."""

    input: str

    output: str

    other: str

    join: JoinOperation
    r"""Join operation."""

    conditions: List[JoinCondition]

    TRANSFORM: Annotated[
        Annotated[Literal["join"], AfterValidator(validate_const("join"))],
        pydantic.Field(alias="transform"),
    ] = "join"
