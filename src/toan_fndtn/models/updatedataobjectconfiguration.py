"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .connectorparquetparams import (
    ConnectorParquetParams,
    ConnectorParquetParamsTypedDict,
)
from .csvparams import CSVParams, CSVParamsTypedDict
from .dataproductparams import DataProductParams, DataProductParamsTypedDict
from .queryparams import QueryParams, QueryParamsTypedDict
from .syntheticparams import SyntheticParams, SyntheticParamsTypedDict
from .tableparams import TableParams, TableParamsTypedDict
from pydantic import Discriminator, Tag
from toan_fndtn.types import BaseModel
from toan_fndtn.utils import get_discriminator
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


UpdateDataObjectConfigurationConfigurationTypedDict = TypeAliasType(
    "UpdateDataObjectConfigurationConfigurationTypedDict",
    Union[
        TableParamsTypedDict,
        QueryParamsTypedDict,
        ConnectorParquetParamsTypedDict,
        SyntheticParamsTypedDict,
        DataProductParamsTypedDict,
        CSVParamsTypedDict,
    ],
)


UpdateDataObjectConfigurationConfiguration = Annotated[
    Union[
        Annotated[CSVParams, Tag("csv")],
        Annotated[DataProductParams, Tag("data_product")],
        Annotated[ConnectorParquetParams, Tag("parquet")],
        Annotated[QueryParams, Tag("query")],
        Annotated[SyntheticParams, Tag("synthetic")],
        Annotated[TableParams, Tag("table")],
    ],
    Discriminator(
        lambda m: get_discriminator(m, "data_object_type", "data_object_type")
    ),
]


class UpdateDataObjectConfigurationTypedDict(TypedDict):
    r"""Update data object configuration."""

    configuration: UpdateDataObjectConfigurationConfigurationTypedDict


class UpdateDataObjectConfiguration(BaseModel):
    r"""Update data object configuration."""

    configuration: UpdateDataObjectConfigurationConfiguration
