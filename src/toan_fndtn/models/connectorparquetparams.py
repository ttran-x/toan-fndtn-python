"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .dataobjectmode import DataObjectMode
import pydantic
from pydantic.functional_validators import AfterValidator
from toan_fndtn.types import BaseModel
from toan_fndtn.utils import validate_const
from typing import Literal, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ConnectorParquetParamsTypedDict(TypedDict):
    r"""Connector parquet params."""

    data_object_type: Literal["parquet"]
    mode: NotRequired[DataObjectMode]
    r"""DataObject mode."""


class ConnectorParquetParams(BaseModel):
    r"""Connector parquet params."""

    DATA_OBJECT_TYPE: Annotated[
        Annotated[Literal["parquet"], AfterValidator(validate_const("parquet"))],
        pydantic.Field(alias="data_object_type"),
    ] = "parquet"

    mode: Optional[DataObjectMode] = None
    r"""DataObject mode."""
