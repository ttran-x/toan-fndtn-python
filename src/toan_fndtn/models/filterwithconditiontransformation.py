"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from pydantic.functional_validators import AfterValidator
from toan_fndtn.types import BaseModel
from toan_fndtn.utils import validate_const
from typing import Literal
from typing_extensions import Annotated, TypedDict


class FilterWithConditionTransformationTypedDict(TypedDict):
    r"""Filter with condition transformation."""

    input: str
    output: str
    condition: str
    transform: Literal["filter_with_condition"]


class FilterWithConditionTransformation(BaseModel):
    r"""Filter with condition transformation."""

    input: str

    output: str

    condition: str

    TRANSFORM: Annotated[
        Annotated[
            Literal["filter_with_condition"],
            AfterValidator(validate_const("filter_with_condition")),
        ],
        pydantic.Field(alias="transform"),
    ] = "filter_with_condition"
