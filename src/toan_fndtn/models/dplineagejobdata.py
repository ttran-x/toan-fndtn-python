"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .dplineagejobdataio import DPLineageJobDataIO, DPLineageJobDataIOTypedDict
from datetime import datetime
from pydantic import model_serializer
from toan_fndtn.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from typing import List
from typing_extensions import NotRequired, TypedDict


class DPLineageJobDataTypedDict(TypedDict):
    r"""DP lineage job data."""

    uuid: str
    type: str
    engine: str
    created_at: datetime
    updated_at: datetime
    name: str
    action_name: str
    current_version_uuid: str
    inputs: List[DPLineageJobDataIOTypedDict]
    outputs: List[DPLineageJobDataIOTypedDict]
    engine_version: NotRequired[Nullable[str]]
    description: NotRequired[Nullable[str]]


class DPLineageJobData(BaseModel):
    r"""DP lineage job data."""

    uuid: str

    type: str

    engine: str

    created_at: datetime

    updated_at: datetime

    name: str

    action_name: str

    current_version_uuid: str

    inputs: List[DPLineageJobDataIO]

    outputs: List[DPLineageJobDataIO]

    engine_version: OptionalNullable[str] = UNSET

    description: OptionalNullable[str] = UNSET

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["engine_version", "description"]
        nullable_fields = ["engine_version", "description"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
