"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .maskrule import MaskRule, MaskRuleTypedDict
import pydantic
from pydantic.functional_validators import AfterValidator
from toan_fndtn.types import BaseModel
from toan_fndtn.utils import validate_const
from typing import List, Literal
from typing_extensions import Annotated, TypedDict


class MaskValuesTransformationOutputTypedDict(TypedDict):
    r"""MaskValuesTransformation model."""

    input: str
    output: str
    rules: List[MaskRuleTypedDict]
    transform: Literal["mask_values"]


class MaskValuesTransformationOutput(BaseModel):
    r"""MaskValuesTransformation model."""

    input: str

    output: str

    rules: List[MaskRule]

    TRANSFORM: Annotated[
        Annotated[
            Literal["mask_values"], AfterValidator(validate_const("mask_values"))
        ],
        pydantic.Field(alias="transform"),
    ] = "mask_values"
