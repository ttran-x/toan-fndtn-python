"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .connectionsecret import ConnectionSecret, ConnectionSecretTypedDict
import pydantic
from pydantic.functional_validators import AfterValidator
from toan_fndtn.types import BaseModel
from toan_fndtn.utils import validate_const
from typing import Literal, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


URLTypedDict = TypeAliasType("URLTypedDict", Union[ConnectionSecretTypedDict, str])


URL = TypeAliasType("URL", Union[ConnectionSecret, str])


class S3DataSourceConnectionDetailsTypedDict(TypedDict):
    r"""S3 data source connection details."""

    url: URLTypedDict
    access_key: ConnectionSecretTypedDict
    r"""Connection secret."""
    access_secret: ConnectionSecretTypedDict
    r"""Connection secret."""
    connection_type: Literal["s3"]


class S3DataSourceConnectionDetails(BaseModel):
    r"""S3 data source connection details."""

    url: URL

    access_key: ConnectionSecret
    r"""Connection secret."""

    access_secret: ConnectionSecret
    r"""Connection secret."""

    CONNECTION_TYPE: Annotated[
        Annotated[Literal["s3"], AfterValidator(validate_const("s3"))],
        pydantic.Field(alias="connection_type"),
    ] = "s3"
