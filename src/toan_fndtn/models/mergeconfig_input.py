"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .mergeconditionaction_input import (
    MergeConditionActionInput,
    MergeConditionActionInputTypedDict,
)
from .mergeoperatorexpressionkeys import (
    MergeOperatorExpressionKeys,
    MergeOperatorExpressionKeysTypedDict,
)
import pydantic
from pydantic.functional_validators import AfterValidator
from toan_fndtn.types import BaseModel
from toan_fndtn.utils import validate_const
from typing import List, Literal
from typing_extensions import Annotated, TypedDict


class MergeConfigInputTypedDict(TypedDict):
    r"""Merge configuration."""

    keys: List[MergeOperatorExpressionKeysTypedDict]
    matched_conditions: List[MergeConditionActionInputTypedDict]
    not_matched_conditions: List[MergeConditionActionInputTypedDict]
    mode: Literal["merge"]


class MergeConfigInput(BaseModel):
    r"""Merge configuration."""

    keys: List[MergeOperatorExpressionKeys]

    matched_conditions: List[MergeConditionActionInput]

    not_matched_conditions: List[MergeConditionActionInput]

    MODE: Annotated[
        Annotated[Literal["merge"], AfterValidator(validate_const("merge"))],
        pydantic.Field(alias="mode"),
    ] = "merge"
