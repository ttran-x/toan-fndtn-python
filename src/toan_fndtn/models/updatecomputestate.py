"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .killjob import KillJob, KillJobTypedDict
from .removeschedule import RemoveSchedule, RemoveScheduleTypedDict
from .reschedule import Reschedule, RescheduleTypedDict
from .schedule import Schedule, ScheduleTypedDict
from pydantic import Discriminator, Tag
from toan_fndtn.types import BaseModel
from toan_fndtn.utils import get_discriminator
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


StateTypedDict = TypeAliasType(
    "StateTypedDict",
    Union[
        KillJobTypedDict,
        RemoveScheduleTypedDict,
        ScheduleTypedDict,
        RescheduleTypedDict,
    ],
)


State = Annotated[
    Union[
        Annotated[KillJob, Tag("kill_job")],
        Annotated[RemoveSchedule, Tag("remove_schedule")],
        Annotated[Reschedule, Tag("reschedule")],
        Annotated[Schedule, Tag("schedule")],
    ],
    Discriminator(lambda m: get_discriminator(m, "state", "state")),
]


class UpdateComputeStateTypedDict(TypedDict):
    r"""Update compute state."""

    state: StateTypedDict


class UpdateComputeState(BaseModel):
    r"""Update compute state."""

    state: State
