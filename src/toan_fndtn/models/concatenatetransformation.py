"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from pydantic.functional_validators import AfterValidator
from toan_fndtn.types import BaseModel
from toan_fndtn.utils import validate_const
from typing import List, Literal, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ConcatenateTransformationTypedDict(TypedDict):
    r"""ConcatenateTransformation model."""

    input: str
    output: str
    columns: List[str]
    alias: str
    transform: Literal["concatenate"]
    separator: NotRequired[str]


class ConcatenateTransformation(BaseModel):
    r"""ConcatenateTransformation model."""

    input: str

    output: str

    columns: List[str]

    alias: str

    TRANSFORM: Annotated[
        Annotated[
            Literal["concatenate"], AfterValidator(validate_const("concatenate"))
        ],
        pydantic.Field(alias="transform"),
    ] = "concatenate"

    separator: Optional[str] = ","
