openapi: "3.1.0"
info:
  title: "FNDTN Backend"
  description: "Foundation API schema"
  version: "3.0.1"
paths:
  "/api/data/application/list":
    get:
      tags:
        - "Application"
      summary: "Get list of element 'application'"
      description: "Get list of applications.\n\nArgs:\n-----\n    context: CurrentContext\n    has_child: bool | None\n    has_parent: bool | None\n    browse_filter: BrowseFilter\n    token: TokenData\n\nReturns:\n--------\n    application.ApplicationEntityList:  application.ApplicationEntityList"
      operationId: "get_entities_api_data_application_list_get"
      parameters:
        - name: "has_child"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Has Child"
        - name: "has_parent"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Has Parent"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApplicationEntityList"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:application:browse"
      x-iam-resource-0: "urn:meshx:backend:data:root:application:*"
  "/api/data/application/list/query":
    get:
      tags:
        - "Application"
      summary: "Get list of element 'application' with details on parent `data_product` user can consume"
      description: "Get list of applications with details on data products linked to them that can be queried by the user.\n\nArgs:\n-----\n    request: fastapi.Request\n    context: CurrentContext\n    browse_filter: BrowseFilter\n    data_product_filter: BrowseFilter\n    access_validator: AccessValidator\n    token: TokenData\n\nReturns:\n--------\n    application.ApplicationForQueryList:  application.ApplicationForQueryList"
      operationId: "get_entities_for_query_api_data_application_list_query_get"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApplicationForQueryList"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:application:browse"
      x-iam-resource-0: "urn:meshx:backend:data:root:application:*"
  "/api/data/application":
    get:
      tags:
        - "Application"
      summary: "Get specific element 'application' by identifier"
      description: "Get specific application entity by identifier.\n\nArgs:\n-----\n    identifier: identifier\n    db_session: db_session\n    _token: _token\n\nReturns:\n--------\n    application.ApplicationResponse: returns application.ApplicationResponse"
      operationId: "get_entity_api_data_application_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApplicationResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:application:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:application:{identifier}"
    put:
      tags:
        - "Application"
      summary: "Update specific element 'application' by identifier"
      description: "Update specific application entity by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    emitter: ApplicationEvent\n    data: common.UpdateEntityRequest\n    token: TokenData\n\nReturns:\n-------\n    application.ApplicationEntity: returns application.ApplicationEntity"
      operationId: "update_entity_api_data_application_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateApplicationRequest"}
            examples:
              "basic":
                summary: "Application"
                value: {"entity": {"name": "Application example", "entity_type": "application", "label": "APP", "description": "Updated application", "purpose": "Updated application purpose", "accountable_person": {"email": "updated.example@foundation.internal", "full_name": "Updated Example Foundation"}, "business_impact": "Updated application business impact"}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApplicationEntity"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:application:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:application:{identifier}"
    post:
      tags:
        - "Application"
      summary: "Create a new 'application' element."
      description: "Create a new application entity.\n\nArgs:\n-----\n    context: CurrentContext\n    emitter: ApplicationEvent\n    data: CreateApplicationRequest\n    token: TokenData\n\nReturns:\n--------\n     application.ApplicationEntity: returns application.ApplicationEntity"
      operationId: "create_entity_api_data_application_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateApplicationRequest"}
            examples:
              "basic":
                summary: "Application"
                value: {"entity": {"name": "Application example", "entity_type": "application", "label": "APP", "description": "Example application", "purpose": "Application purpose", "accountable_person": {"email": "example@foundation.internal", "full_name": "Example Foundation"}, "business_impact": "Application business impact"}, "entity_info": {"owner": "owner@example.com", "contact_ids": ["Application contact"], "links": ["example.com"]}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApplicationEntity"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:application:create"
      x-iam-resource-0: "urn:meshx:backend:data:root:application"
    delete:
      tags:
        - "Application"
      summary: "Delete specific element 'application' by identifier"
      description: "Delete specific application entity by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    emitter: ApplicationEvent\n    token: TokenData\n\nReturns:\n--------\n    common.OK: returns common.OK"
      operationId: "delete_entity_api_data_application_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:application:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:application:{identifier}"
  "/api/data/application/info":
    get:
      tags:
        - "Application"
      summary: "Get specific entity 'application' info by identifier"
      description: "Get specific entity application info by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    _token: TokenData\n\nReturns:\n--------\n    common.EntityInfo: common.EntityInfo"
      operationId: "get_entity_info_api_data_application_info_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityInfo"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:application:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:application:{identifier}"
    put:
      tags:
        - "Application"
      summary: "Update specific entity 'application' info by identifier"
      description: "Update specific entity application info by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    data: common.EntityInfo\n    context: CurrentContext\n    emitter: ApplicationEvent\n    token: TokenData\n\nReturns:\n--------\n    common.EntityInfo: common.EntityInfo"
      operationId: "update_entity_info_api_data_application_info_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/EntityInfo"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityInfo"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:application:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:application:{identifier}"
  "/api/data/application/link":
    get:
      tags:
        - "Application"
      summary: "Get specific entity 'application' links by identifier"
      description: "Get specific entity application links by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    _token: TokenData\n\nReturns:\n--------\n    common.EntityLinks: common.EntityLinks"
      operationId: "get_entity_links_api_data_application_link_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityLinks"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:application:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:application:{identifier}"
  "/api/data/classification/list":
    get:
      tags:
        - "Classification"
      summary: "Get list of classifications"
      description: "Get all classifications.\n\nReturns:\n-------\n    List of all classifications."
      operationId: "get_classifications_api_data_classification_list_get"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ClassificationListResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
  "/api/data/classification/name":
    get:
      tags:
        - "Classification"
      summary: "Get specific classification by name"
      description: "Get a specific classification by name.\n\nArgs:\n----\n    name: Classification name.\n    context: CurrentContext\n    _token: Authentication token\n\nReturns:\n-------\n    The classification details."
      operationId: "get_classification_by_name_api_data_classification_name_get"
      parameters:
        - name: "name"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Name"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Classification"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
    put:
      tags:
        - "Classification"
      summary: "Update a classification by name"
      description: "Update a classification by name.\n\nArgs:\n----\n    name: Classification name.\n    context: CurrentContext\n    data: The updated classification data\n    _token: Authentication token\n\nReturns:\n-------\n    The updated classification details."
      operationId: "update_classification_by_name_api_data_classification_name_put"
      parameters:
        - name: "name"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Name"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateClassificationRequest"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Classification"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
    delete:
      tags:
        - "Classification"
      summary: "Delete a classification by name"
      description: "Delete a classification by name.\n\nArgs:\n----\n    name: Classification name.\n\nReturns:\n-------\n    Empty response with 204 status."
      operationId: "delete_classification_by_name_api_data_classification_name_delete"
      parameters:
        - name: "name"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Name"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "204":
          description: "Successful Response"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
  "/api/data/classification":
    get:
      tags:
        - "Classification"
      summary: "Get specific classification by ID"
      description: "Get a specific classification by ID.\n\nArgs:\n----\n    classification_id: Classification ID.\n    context: CurrentContext\n    _token: Authentication token\n\nReturns:\n-------\n    The classification details."
      operationId: "get_classification_api_data_classification_get"
      parameters:
        - name: "classification_id"
          in: "query"
          required: true
          schema:
            type: "integer"
            title: "Classification Id"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Classification"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
    put:
      tags:
        - "Classification"
      summary: "Update a classification by ID"
      description: "Update a classification.\n\nArgs:\n----\n    classification_id: Classification ID.\n    context: CurrentContext\n    data: The updated classification data\n    _token: Authentication token\n\nReturns:\n-------\n    The updated classification details."
      operationId: "update_classification_api_data_classification_put"
      parameters:
        - name: "classification_id"
          in: "query"
          required: true
          schema:
            type: "integer"
            title: "Classification Id"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateClassificationRequest"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Classification"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
    post:
      tags:
        - "Classification"
      summary: "Create a new classification"
      description: "Create a new classification.\n\nReturns:\n-------\n    The created classification details."
      operationId: "create_classification_api_data_classification_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateClassificationRequest"}
        required: true
      responses:
        "201":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Classification"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
    delete:
      tags:
        - "Classification"
      summary: "Delete a classification by ID"
      description: "Delete a classification.\n\nArgs:\n----\n    classification_id: Classification ID.\n\nReturns:\n-------\n    Empty response with 204 status."
      operationId: "delete_classification_api_data_classification_delete"
      parameters:
        - name: "classification_id"
          in: "query"
          required: true
          schema:
            type: "integer"
            title: "Classification Id"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "204":
          description: "Successful Response"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
  "/api/data/data_system/list":
    get:
      tags:
        - "Data System"
      summary: "Get list of element 'data_system'"
      description: "Get list of data systems.\n\nArgs:\n-----\n    context: CurrentContext\n    has_child: bool | None\n    has_parent: bool | None\n    browse_filter: BrowseFilter\n    token: TokenData\n\nReturns:\n--------\n    data_system.DataSystemEntityList:  data_system.DataSystemEntityList"
      operationId: "get_entities_api_data_data_system_list_get"
      parameters:
        - name: "has_child"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Has Child"
        - name: "has_parent"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Has Parent"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataSystemEntityList"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_system:browse"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_system:*"
  "/api/data/data_system/list/query":
    get:
      tags:
        - "Data System"
      summary: "Get list of element 'data_system' with details on parent `product` user can consume"
      description: "Get list of data systems with details that can be queried by the user.\n\nArgs:\n-----\n    request: fastapi.Request\n    context: CurrentContext\n    browse_filter: BrowseFilter\n    access_validator: AccessValidator\n    token: TokenData\n\nReturns:\n--------\n    data_system.DataSystemForQueryList:  data_system.DataSystemForQueryList"
      operationId: "get_entities_for_query_api_data_data_system_list_query_get"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataSystemForQueryList"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_system:browse"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_system:*"
  "/api/data/data_system":
    get:
      tags:
        - "Data System"
      summary: "Get specific element 'data_system' by identifier"
      description: "Get specific data system entity by identifier.\n\nArgs:\n-----\n    identifier: identifier\n    db_session: db_session\n    _token: _token\n\nReturns:\n--------\n    data_system.DataSystemResponse: returns data_system.DataSystemResponse"
      operationId: "get_entity_api_data_data_system_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataSystemResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_system:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_system:{identifier}"
    put:
      tags:
        - "Data System"
      summary: "Update specific element 'data_system' by identifier"
      description: "Update specific data system entity by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    emitter: DataSystemEvent\n    data: common.UpdateEntityRequest\n    token: TokenData\n\nReturns:\n-------\n    data_system.DataSystemEntity: returns data_system.DataSystemEntity"
      operationId: "update_entity_api_data_data_system_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateDataSystemRequest"}
            examples:
              "basic":
                summary: "Data System"
                value: {"entity": {"name": "Data system example", "entity_type": "data_system", "label": "DSS", "description": "Updated data system"}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataSystemEntity"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_system:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_system:{identifier}"
    post:
      tags:
        - "Data System"
      summary: "Create a new 'data_system' element."
      description: "Create a new data system entity.\n\nArgs:\n-----\n    context: CurrentContext\n    emitter: DataSystemEvent\n    data: CreateDataSystemRequest\n    token: TokenData\n\nReturns:\n--------\n    data_system.DataSystemEntity: returns data_system.DataSystemEntity"
      operationId: "create_entity_api_data_data_system_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateDataSystemRequest"}
            examples:
              "basic":
                summary: "Data System"
                value: {"entity": {"name": "Data System example", "entity_type": "data_system", "label": "DSS", "description": "Example data system"}, "entity_info": {"owner": "owner@example.com", "contact_ids": ["Application contact"], "links": ["example.com"]}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataSystemEntity"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_system:create"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_system"
    delete:
      tags:
        - "Data System"
      summary: "Delete specific element 'data_system' by identifier"
      description: "Delete specific data system entity by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    emitter: DataSystemEvent\n    token: TokenData\n\nReturns:\n--------\n    common.OK: returns common.OK"
      operationId: "delete_entity_api_data_data_system_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_system:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_system:{identifier}"
  "/api/data/data_system/info":
    get:
      tags:
        - "Data System"
      summary: "Get specific entity 'data_system' info by identifier"
      description: "Get specific entity data system info by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    _token: TokenData\n\nReturns:\n--------\n    common.EntityInfo: common.EntityInfo"
      operationId: "get_entity_info_api_data_data_system_info_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityInfo"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_system:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_system:{identifier}"
    put:
      tags:
        - "Data System"
      summary: "Update specific entity 'data_system' info by identifier"
      description: "Update specific entity data system info by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    data: common.EntityInfo\n    context: CurrentContext\n    emitter: DataSystemEvent\n    token: TokenData\n\nReturns:\n--------\n    common.EntityInfo: common.EntityInfo"
      operationId: "update_entity_info_api_data_data_system_info_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/EntityInfo"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityInfo"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_system:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_system:{identifier}"
  "/api/data/data_system/link":
    get:
      tags:
        - "Data System"
      summary: "Get specific entity 'data_system' links by identifier"
      description: "Get specific entity data system links by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    _token: TokenData\n\nReturns:\n--------\n    common.EntityLinks: common.EntityLinks"
      operationId: "get_entity_links_api_data_data_system_link_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityLinks"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_system:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_system:{identifier}"
  "/api/data/link/data_system/data_source":
    post:
      tags:
        - "Data System"
      summary: "Link an data_source to a data system."
      description: "Link Data System to DataSource.\n\nArgs:\n----\n    identifier: Data System identifier.\n    child_identifier: DataSource identifier.\n    context: Request context\n    emitter: Product event emitter.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.EntityLink: Entity link."
      operationId: "link_data_system_api_data_link_data_system_data_source_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "child_identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Child Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityLink"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_system:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_system:{identifier}"
      x-iam-action-1: "data:data_source:manage"
      x-iam-resource-1: "urn:meshx:backend:data:root:data_source:{child_identifier}"
    delete:
      tags:
        - "Data System"
      summary: "Unlink a data source from data system."
      description: "Remove a link between a data system and an data_source.\n\nArgs:\n-----\n    identifier: UUID\n    child_identifier: UUID\n    context: CurrentContext\n    emitter: DataSourceEvent\n    token: TokenData\n\nReturns:\n--------\n    common.OK: OK"
      operationId: "delete_entity_link_api_data_link_data_system_data_source_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "child_identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Child Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_system:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_system:{identifier}"
      x-iam-action-1: "data:data_source:manage"
      x-iam-resource-1: "urn:meshx:backend:data:root:data_source:{child_identifier}"
  "/api/data/data_product/list":
    get:
      tags:
        - "Data Product"
      summary: "Get list of element 'data_product'"
      description: "Get data products.\n\nArgs:\n----\n    context: Request context\n    has_child: Filter by child.\n    has_parent: Filter by parent.\n    browse_filter: Browse filter.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.EntityList: List of data products."
      operationId: "get_entities_api_data_data_product_list_get"
      parameters:
        - name: "has_child"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Has Child"
        - name: "has_parent"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Has Parent"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataProductEntityList"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:browse"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:*"
  "/api/data/data_product/list/query":
    get:
      tags:
        - "Data Product"
      summary: "Get list of element 'data_product' that user can query"
      description: "Get data products that can be consumed.\n\nArgs:\n----\n    context: Request context\n    browse_filter: Browse filter.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.EntityList: List of data products."
      operationId: "get_queryable_entities_api_data_data_product_list_query_get"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataProductEntityList"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:query"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:*"
  "/api/data/data_product/consumers":
    get:
      tags:
        - "Data Product"
      summary: "Get users that can consume given 'data_product'"
      description: "Get users allowed to consume data product.\n\nArgs:\n-----\n    identifier: Product identifier.\n    context: Request context\n    request: fastapi.Request\n    token: Token data.\n    user_filter: BrowseFilter\n    access_validator: AccessValidator\n\nReturns:\n--------\n    schema.data_product.ProductConsumersResponse: List of users that can consume data products that user is allowed to see."
      operationId: "get_data_product_consumers_api_data_data_product_consumers_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataProductConsumersResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product":
    get:
      tags:
        - "Data Product"
      summary: "Get specific element 'data_product' by identifier"
      description: "Get data product.\n∂f\n    Args:\n    ----\n        identifier: Product identifier.\n        context: Request context\n        _token: Token data.\n\n    Returns:\n    --------\n        schema.data_product.ProductResponse: Product."
      operationId: "get_entity_api_data_data_product_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataProductResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    put:
      tags:
        - "Data Product"
      summary: "Update specific element 'data_product' by identifier"
      description: "Update data product.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    data: Product data.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.Entity: Updated entity."
      operationId: "update_entity_api_data_data_product_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateEntityRequest"}
            examples:
              "basic":
                summary: "Data Product"
                value: {"entity": {"name": "Product example", "entity_type": "data_product", "label": "DPU", "description": "This data product was updated."}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Entity"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    post:
      tags:
        - "Data Product"
      summary: "Create a new 'data_product' element."
      description: "Create data product.\n\nArgs:\n----\n    context: Request context\n    emitter: Product event emitter.\n    data: Product data.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.Entity: Created entity."
      operationId: "create_entity_api_data_data_product_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateDataProductRequest"}
            examples:
              "basic":
                summary: "Data Product"
                value: {"entity": {"name": "Product example", "entity_type": "data_product", "label": "DPE", "description": "This is an example for data product"}, "entity_info": {"owner": "owner@example.com", "contact_ids": ["Product contact"], "links": ["example.com"]}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:create"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product"
    delete:
      tags:
        - "Data Product"
      summary: "Delete specific element 'data_product' by identifier"
      description: "Delete data product.\n\nArgs:\n-----\n    identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    force: Force delete.\n    token: Token data.\n    trino: Trino client.\n\nReturns:\n--------\n    schema.common.OK: OK."
      operationId: "delete_entity_api_data_data_product_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "force"
          in: "query"
          required: false
          schema:
            type: "boolean"
            title: "Force"
            default: false
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    patch:
      tags:
        - "Data Product"
      summary: "Update data product host mesh"
      description: "Update data product host mesh.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    token: Token data.\n    request: Update request.\n\nReturns:\n--------\n    None"
      operationId: "update_data_product_host_mesh_api_data_data_product_patch"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/DataProductMeshAvailabilityRequest"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/query":
    post:
      tags:
        - "Data Product"
      summary: "Query on data products data."
      description: "Query data product data.\n\nArgs:\n----\n    context: Request context.\n    data: Query data.\n    browse_filter: Browse filter.\n    token: Token data.\n    trino: Trino client.\n\n\nReturns:\n--------\n    StreamingResponse: Result list response.\n\n\nRaises:\n-------\n    error.InvalidProductQueryError: Product query to many statements error.\n    error.ProductQueryNotAllowed: Product query not allowed error."
      operationId: "query_data_products_data_api_data_data_product_query_post"
      parameters:
        - name: "format"
          in: "query"
          required: false
          schema: {"$ref": "#/components/schemas/ConsumeFormat", "default": "json"}
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/QueryDataProduct"}
            examples:
              "basic":
                summary: "Data Product"
                value: {"query": "select * from data_product_table_name"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:query"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/expectation/rules":
    get:
      tags:
        - "Data Product"
      summary: "Get expectation rules description."
      description: "Get data product expectation rules.\n\nArgs:\n----\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    schema.data_quality.ExpectationRules: Expectation rules."
      operationId: "get_expectation_rules_api_data_data_product_expectation_rules_get"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ExpectationRules"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product"
  "/api/data/data_product/share":
    post:
      tags:
        - "Data Product"
      summary: "Update data product available mesh"
      operationId: "data_product_share_api_data_data_product_share_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/DataProductMeshAvailabilityRequest"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                type: "object"
                title: "Response Data Product Share Api Data Data Product Share Post"
                additionalProperties: true
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:share"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/unshare":
    post:
      tags:
        - "Data Product"
      summary: "Update data product available mesh"
      operationId: "data_product_unshare_api_data_data_product_unshare_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/DataProductMeshAvailabilityRequest"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                type: "object"
                title: "Response Data Product Unshare Api Data Data Product Unshare Post"
                additionalProperties: true
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:share"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/link":
    get:
      tags:
        - "Data Product"
      summary: "Get specific entity 'data_product' links by identifier"
      description: "Get data product links.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    schema.common.EntityLinks: Entity links."
      operationId: "get_entity_links_api_data_data_product_link_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityLinks"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/info":
    get:
      tags:
        - "Data Product"
      summary: "Get specific entity 'data_product' info by identifier"
      description: "Get data product info.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    schema.common.EntityInfo: Entity info."
      operationId: "get_entity_info_api_data_data_product_info_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityInfo"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    put:
      tags:
        - "Data Product"
      summary: "Update specific entity 'data_product' info by identifier"
      description: "Update data product info.\n\nArgs:\n----\n    identifier: Product identifier.\n    data: Product info.\n    context: Request context\n    emitter: Product event emitter.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.EntityInfo: Entity info."
      operationId: "update_entity_info_api_data_data_product_info_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/EntityInfo"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityInfo"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/metadata/v2":
    get:
      tags:
        - "Data Product"
      summary: "Get data_product metadata by identifier"
      description: "Get data_product metadata by identifier.\n\nArgs:\n-----\n    identifier: DataProduct identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    schema.data_product.DataProductMetadataResponse: DataProduct metadata response."
      operationId: "get_data_product_metadata_api_data_data_product_metadata_v2_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataProductMetadataResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/metadata":
    get:
      tags:
        - "Data Product"
      summary: "Get a consolidated metadata view about a data product"
      description: "Get data product metadata.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    schema.data_quality.DPMetadataViewData: Product metadata."
      operationId: "get_entity_metadata_api_data_data_product_metadata_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DPMetadataViewData"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    put:
      tags:
        - "Data Product"
      summary: "Update specific entity 'data_product' metadata by identifier (tag/description, field tag/description)"
      description: "Update data product metadata.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    data: Product metadata.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.OK: OK."
      operationId: "update_entity_metadata_api_data_data_product_metadata_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateEntityMetadataRequest"}
            examples:
              "entity_level":
                summary: "Add schema tag"
                value: {"fields": {}, "tags": ["public"]}
              "field_level":
                summary: "Add field tag and description"
                value: {"fields": {"foo": {"tags": ["secret"], "description": "Hide this field", "primary": false, "optional": false}}, "tags": []}
              "both_level":
                summary: "Add schema and field tag"
                value: {"fields": {"foo": {"tags": ["secret"], "description": "Hide this field", "primary": false, "optional": false}}, "tags": ["public"]}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    post:
      tags:
        - "Data Product"
      summary: "Add data_product metadata by identifier"
      description: "Add data_product metadata by identifier (POST endpoint).\n\nThis endpoint adds metadata without replacing existing ones:\n- Classification: Replaces current classification (same as PUT)\n- Sensitivities: Adds to existing sensitivities (different from PUT)\n- Tags: Adds to existing tags (different from PUT)\n- Fields: Adds/updates field metadata (different from PUT)\n\nArgs:\n-----\n    identifier: DataProduct identifier.\n    context: Request context\n    emitter: Product event emitter.\n    data: Product metadata add request.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.OK: OK response."
      operationId: "add_entity_metadata_api_data_data_product_metadata_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateEntityMetadataRequest"}
            examples:
              "entity_level":
                summary: "Add schema tag"
                value: {"fields": {}, "tags": ["public"]}
              "field_level":
                summary: "Add field tag and description"
                value: {"fields": {"foo": {"tags": ["secret"], "description": "Hide this field", "primary": false, "optional": false}}, "tags": []}
              "both_level":
                summary: "Add schema and field tag"
                value: {"fields": {"foo": {"tags": ["secret"], "description": "Hide this field", "primary": false, "optional": false}}, "tags": ["public"]}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    delete:
      tags:
        - "Data Product"
      summary: "Remove specific entity 'data_product' metadata by identifier (tag/description, field tag/description)"
      description: "Remove data product metadata.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    data: Product metadata.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.OK: OK."
      operationId: "remove_entity_metadata_api_data_data_product_metadata_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/DeleteEntityMetadataRequest"}
            examples:
              "entity_level":
                summary: "Remove schema tag"
                value: {"fields": {}, "tags": ["public"]}
              "field_level":
                summary: "Remove field tag"
                value: {"fields": {"foo": {"tags": ["secret"], "primary": false, "optional": false}}, "tags": []}
              "both_level":
                summary: "Remove schema and field tag"
                value: {"fields": {"foo": {"tags": ["secret"], "primary": false, "optional": false}}, "tags": ["public"]}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/schema":
    get:
      tags:
        - "Data Product"
      summary: "Get specific entity 'data_product' schema by identifier"
      description: "Get data product schema.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    schema.common.Schema: Product schema."
      operationId: "get_schema_api_data_data_product_schema_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Schema-Output"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    put:
      tags:
        - "Data Product"
      summary: "Update specific entity 'data_product' schema by identifier (data product fields)"
      description: "Update data product schema.\n\nArgs:\n-----\n    identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    data: Product data.\n    trino: Trino client.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.Schema: Product schema."
      operationId: "update_data_product_schema_api_data_data_product_schema_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateDataProductSchema"}
            examples:
              "stored":
                summary: "Stored data product in Postgres engine"
                value: {"details": {"data_product_type": "stored", "iceberg_table_properties": {"table_format": "PARQUET", "partitioning": ["a"], "location": "b", "format_version": 1}, "fields": [{"name": "foo", "primary": true, "optional": false, "data_type": {"meta": {}, "column_type": "VARCHAR"}}, {"name": "year", "primary": true, "optional": false, "data_type": {"meta": {}, "column_type": "INTEGER"}}]}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Schema-Output"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/quality/expectation":
    get:
      tags:
        - "Data Product"
      summary: "Get specific entity 'data_product' expectations by identifier"
      description: "Get data product expectation results.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    last_only: Last only.\n    trino: Trino client.\n    _token: Token data.\n\nReturns:\n--------\n    schema.data_quality.ExpectationResults: Expectation results."
      operationId: "get_expectation_results_api_data_data_product_quality_expectation_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "last_only"
          in: "query"
          required: false
          schema:
            type: "boolean"
            title: "Last Only"
            default: true
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ExpectationResults"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/quality/expectation/custom":
    put:
      tags:
        - "Data Product"
      summary: "Update custom expectation for 'data_product' by identifier"
      description: "Update custom expectation rule.\n\nRead description and format of the expectation rules [here](https://greatexpectations.io/expectations/).\n\nArgs:\n----\n    identifier: Product identifier.\n    custom_identifier: Custom expectation identifier.\n    context: Request context\n    emitter: Product event emitter.\n    trino: Trino client.\n    data: Expectation item.\n    token: Token data.\n\nReturns:\n--------\n    schema.data_quality.Expectation: Expectation."
      operationId: "update_custom_expectation_api_data_data_product_quality_expectation_custom_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "custom_identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Custom Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ExpectationItem"}
            examples:
              "update":
                summary: "Update custom expectation"
                value: {"type": "expect_column_values_to_be_between", "kwargs": {"column": "year", "min_value": 1980, "max_value": 2020}, "meta": {"description": "Expect a year min max values"}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Expectation"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    post:
      tags:
        - "Data Product"
      summary: "Add custom expectation for 'data_product' by identifier"
      description: "Add custom expectation rule.\n\nRead description and format of the expectation rules [here](https://greatexpectations.io/expectations/).\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    trino: Trino client.\n    data: Expectation item.\n    token: Token data.\n\nReturns:\n--------\n    schema.data_quality.Expectation: Expectation."
      operationId: "add_custom_expectation_api_data_data_product_quality_expectation_custom_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ExpectationItem"}
            examples:
              "update":
                summary: "Update custom expectation"
                value: {"type": "expect_column_values_to_be_between", "kwargs": {"column": "year", "min_value": 1980, "max_value": 2020}, "meta": {"description": "Expect a year min max values"}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Expectation"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    delete:
      tags:
        - "Data Product"
      summary: "Delete custom expectation for 'data_product' by identifier"
      description: "Delete custom expectation rule.\n\nArgs:\n----\n    identifier: Product identifier.\n    custom_identifier: Custom expectation identifier.\n    context: Request context\n    emitter: Product event emitter.\n    trino: Trino client.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.OK: OK."
      operationId: "delete_custom_expectation_api_data_data_product_quality_expectation_custom_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "custom_identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Custom Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/quality/expectation/weights":
    put:
      tags:
        - "Data Product"
      summary: "Update specific entity 'data_product' expectation weights"
      description: "Update expectation weights.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    trino: Trino client.\n    data: Expectation weights.\n    token: Token data.\n\nReturns:\n--------\n    schema.data_quality.Expectation: Expectation."
      operationId: "update_expectation_weights_api_data_data_product_quality_expectation_weights_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ExpectationWeights"}
            examples:
              "update":
                summary: "Update expectation weights"
                value: {"accuracy": 0.2, "completeness": 0.3, "consistency": 0.1, "uniqueness": 0.1, "validity": 0.3}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Expectation"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/quality/expectation/thresholds":
    put:
      tags:
        - "Data Product"
      summary: "Update specific entity 'data_product' expectation thresholds"
      description: "Update expectation thresholds.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    trino: Trino client.\n    data: Expectation thresholds.\n    token: Token data.\n\nReturns:\n--------\n    schema.data_quality.Expectation: Expectation.\n\nRaises:\n-------\n    error.InvalidQualityParametersError: Invalid quality parameters error."
      operationId: "update_expectation_thresholds_api_data_data_product_quality_expectation_thresholds_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ExpectationThresholds"}
            examples:
              "update":
                summary: "Update expectation thresholds"
                value: {"table": 0.8, "columns": {"foo": {"accuracy": 0.9, "completeness": 0.9, "consistency": 1, "uniqueness": 1, "validity": 1}}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Expectation"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/quality/profiling":
    get:
      tags:
        - "Data Product"
      summary: "Get specific entity 'data_product' quality by identifier"
      description: "Get data product profiling results.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    trino: Trino client.\n    _token: Token data.\n\nReturns:\n--------\n    schema.data_quality.ProfilingResults: Profiling results."
      operationId: "get_profiling_results_api_data_data_product_quality_profiling_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ProfilingResults"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/quality/validations":
    get:
      tags:
        - "Data Product"
      summary: "Get specific entity 'data_product' validations by identifier"
      description: "Get data product validation results.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    trino: Trino client.\n    _token: Token data.\n\nReturns:\n--------\n    schema.data_quality.ValidationResults: Validation results."
      operationId: "get_validation_results_api_data_data_product_quality_validations_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ValidationResults"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/quality/overview":
    get:
      tags:
        - "Data Product"
      summary: "Get data_product quality overview"
      description: "Get data product quality overview.\n\nArgs:\n----\n    context: Request context\n    trino: Trino client.\n    token: Token data.\n\nReturns:\n--------\n    schema.data_quality.ValidationResults: Validation results."
      operationId: "get_data_product_quality_overview_api_data_data_product_quality_overview_get"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataProductQualityOverview"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:*"
  "/api/data/data_product/classification/rule":
    get:
      tags:
        - "Data Product"
      summary: "Get specific entity 'data_product' classification rules by identifier"
      description: "Get data product classification rule.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    schema.data_product.ClassificationRule: Classification rule."
      operationId: "get_classification_rule_api_data_data_product_classification_rule_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ClassificationRule"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    put:
      tags:
        - "Data Product"
      summary: "Update specific entity 'data_product' classification rules by identifier"
      description: "Update data product classification rule.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    data: Classification rule.\n    token: Token data.\n\nReturns:\n--------\n    schema.data_product.ClassificationRule: Classification rule."
      operationId: "update_classification_rule_api_data_data_product_classification_rule_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ClassificationRule"}
            examples:
              "update":
                summary: "Update classification rule"
                value: {"model": "", "excluded_columns": [], "regex_recognizers": [{"name": "Super recognizer", "description": "Description goes here...", "label": "SUPER", "patterns": [".*(super).*"]}]}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ClassificationRule"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/classification/result":
    get:
      tags:
        - "Data Product"
      summary: "Get specific entity 'data_product' classification results by identifier"
      description: "Get data product classification results.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    resolved: Resolved.\n    _token: Token data.\n\nReturns:\n--------\n    schema.data_product.ClassificationResults: Classification results."
      operationId: "get_classification_result_api_data_data_product_classification_result_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "resolved"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Resolved"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ClassificationResults"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    put:
      tags:
        - "Data Product"
      summary: "Update specific entity 'data_product' classification results by identifier"
      description: "Update data product classification results.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    data: Classification result.\n    token: Token data.\n\nReturns:\n--------\n    schema.data_product.ClassificationResults: Classification results."
      operationId: "update_classification_result_api_data_data_product_classification_result_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateClassificationResult"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ClassificationResults"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/data":
    get:
      tags:
        - "Data Product"
      summary: "Data preview"
      description: "Get data product data.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    trino: Trino client.\n    _token: Token data.\n\nReturns:\n--------\n    schema.common.ResultListResponse: Result list response."
      operationId: "get_data_product_data_api_data_data_product_data_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResultListResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    delete:
      tags:
        - "Data Product"
      summary: "Delete stored data."
      description: "Delete data product data.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    trino: Trino client.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.OK: OK."
      operationId: "delete_data_api_data_data_product_data_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/compute/file":
    get:
      tags:
        - "Data Product"
      summary: "get compute file"
      description: "Get data product compute file.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    str: compute file content."
      operationId: "get_compute_file_api_data_data_product_compute_file_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                anyOf:
                  - type: "string"
                  - type: "null"
                title: "Response Get Compute File Api Data Data Product Compute File Get"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:compute:develop"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    put:
      tags:
        - "Data Product"
      summary: "Add/Replace compute file (assign/reassign)"
      description: "Upload a custom compute file.\n\nLimited access endpoint for developers/engineers.\n\nCustom support allowed for devs to PoC things, these products can not be scheduled.\n\nArgs:\n----\n    identifier: Product identifier.\n    compute_file: Compute file.\n    context: Request context\n    emitter: Product event emitter.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.OK: OK."
      operationId: "update_compute_file_api_data_data_product_compute_file_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "multipart/form-data":
            schema: {"$ref": "#/components/schemas/Body_update_compute_file_api_data_data_product_compute_file_put"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:compute:develop"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    delete:
      tags:
        - "Data Product"
      summary: "Delete compute file"
      description: "Delete data product compute file.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    None"
      operationId: "delete_compute_file_api_data_data_product_compute_file_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:compute:develop"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/compute/builder":
    get:
      tags:
        - "Data Product"
      summary: "Get builder pipeline"
      description: "Get data product compute builder.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    BuilderPipeline: Builder pipeline."
      operationId: "get_compute_builder_api_data_data_product_compute_builder_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/BuilderPipeline-Output"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
    put:
      tags:
        - "Data Product"
      summary: "Add/Replace builder pipeline"
      description: "Update data product compute builder.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    unit_emitter: Resource event emitter.\n    data: Builder pipeline.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.OK: OK.\n\nRaises:\n-------\n    error.ProductInvalidBuilderError: Product invalid builder error."
      operationId: "update_compute_builder_api_data_data_product_compute_builder_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/BuilderPipeline-Input"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/compute/builder/run":
    post:
      tags:
        - "Data Product"
      summary: "Run builder pipeline"
      description: "Update data product compute builder.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    unit_emitter: Resource event emitter.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.OK: OK.\n\nRaises:\n-------\n    error.ProductMissingBuilderError: Product missing builder."
      operationId: "run_compute_builder_api_data_data_product_compute_builder_run_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/compute/builder/run/quality":
    post:
      tags:
        - "Data Product"
      summary: "Run data quality"
      description: "Run data quality job for a data product.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    data: Config for a job.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.OK: OK.\n\nRaises:\n-------\n    error.ProductMissingTableError: Product not having a table."
      operationId: "run_quality_api_data_data_product_compute_builder_run_quality_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ExistingProductJob"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/compute/builder/run/profiling":
    post:
      tags:
        - "Data Product"
      summary: "Run data profiling"
      description: "Run data profiling job for a data product.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    data: Config for a job.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.OK: OK.\n\nRaises:\n-------\n    error.ProductMissingTableError: Product not having a table."
      operationId: "run_profiling_api_data_data_product_compute_builder_run_profiling_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ExistingProductJob"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/compute/builder/state":
    get:
      tags:
        - "Data Product"
      summary: "Get builder pipeline state"
      description: "Get data product compute builder state.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    BuilderPipelineState: Builder pipeline state."
      operationId: "get_compute_builder_state_api_data_data_product_compute_builder_state_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/BuilderPipelineState"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/compute/state":
    put:
      tags:
        - "Data Product"
      summary: "Update compute state (unassign, schedule, reschedule, unschedule)"
      description: "Update data product compute state.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    data: Compute state.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.OK: OK."
      operationId: "update_compute_state_api_data_data_product_compute_state_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "job_type"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/ComputeJobType"}
              - type: "null"
            title: "Job Type"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateComputeState"}
            examples:
              "remove_job":
                summary: "Kill job"
                value: {"state": {"state": "kill_job"}}
              "schedule":
                summary: "Schedule job (for every 30 minutes)"
                value: {"state": {"cron_expression": "*/30 * * * *", "state": "schedule"}}
              "reschedule":
                summary: "Reschedule job (for every 1 hour)"
                value: {"state": {"cron_expression": "0 * * * *", "state": "reschedule"}}
              "unschedule":
                summary: "Unschedule job"
                value: {"state": {"state": "remove_schedule"}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/compute/lineage":
    get:
      tags:
        - "Data Product"
      summary: "Get a lineage of a compute transformations."
      description: "Get data product compute lineage.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    _token: Token data.\n    detailed: Detailed.\n\nReturns:\n--------\n    schema.data_quality.DPComputeLineage: Compute lineage."
      operationId: "get_compute_lineage_api_data_data_product_compute_lineage_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DPComputeLineage"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/data_product/lineage":
    get:
      tags:
        - "Data Product"
      summary: "Get a lineage of a data product."
      description: "Get data product lineage.\n\nArgs:\n----\n    identifier: Product identifier.\n    context: Request context\n    _token: Token data.\n    show_jobs: Show jobs.\n    depth: Depth.\n\nReturns:\n--------\n    schema.data_quality.DPLineage: Lineage."
      operationId: "get_lineage_data_product_api_data_data_product_lineage_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "show_jobs"
          in: "query"
          required: false
          schema:
            type: "boolean"
            title: "Show Jobs"
            default: true
        - name: "depth"
          in: "query"
          required: false
          schema:
            type: "integer"
            title: "Depth"
            default: 20
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DPLineage"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
  "/api/data/link/data_product/data_product":
    post:
      tags:
        - "Link"
      summary: "Link a data product to a data product."
      description: "Link data products.\n\nArgs:\n----\n    identifier: Product identifier.\n    child_identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.EntityLink: Entity link."
      operationId: "link_data_products_api_data_link_data_product_data_product_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "child_identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Child Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityLink"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
      x-iam-action-1: "data:data_product:manage"
      x-iam-resource-1: "urn:meshx:backend:data:root:data_product:{child_identifier}"
    delete:
      tags:
        - "Link"
      summary: "Remove a link between a data product and a data product."
      description: "Delete data product link.\n\nArgs:\n----\n    identifier: Product identifier.\n    child_identifier: Product identifier.\n    context: Request context\n    emitter: Product event emitter.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.OK: OK."
      operationId: "delete_data_product_link_api_data_link_data_product_data_product_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "child_identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Child Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
      x-iam-action-1: "data:data_product:manage"
      x-iam-resource-1: "urn:meshx:backend:data:root:data_product:{child_identifier}"
  "/api/data/link/data_product/application":
    post:
      tags:
        - "Link"
      summary: "Link a data product to an application."
      description: "Link data product with an application.\n\nArgs:\n----\n    identifier: Product identifier.\n    child_identifier: Application identifier.\n    context: Request context\n    emitter: Product event emitter.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.EntityLink: Entity link."
      operationId: "link_application_api_data_link_data_product_application_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "child_identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Child Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityLink"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
      x-iam-action-1: "data:application:manage"
      x-iam-resource-1: "urn:meshx:backend:data:root:application:{child_identifier}"
    delete:
      tags:
        - "Link"
      summary: "Remove a link between a data product and an application."
      description: "Delete link between data product and an application.\n\nArgs:\n----\n    identifier: Product identifier.\n    child_identifier: Application identifier.\n    context: Request context\n    emitter: Product event emitter.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.OK: OK."
      operationId: "delete_application_link_api_data_link_data_product_application_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "child_identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Child Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:{identifier}"
      x-iam-action-1: "data:application:manage"
      x-iam-resource-1: "urn:meshx:backend:data:root:application:{child_identifier}"
  "/api/data/data_object/list":
    get:
      tags:
        - "Data Object"
      summary: "Get list of element 'data_object'"
      description: "Get list of resources.\n\nArgs:\n-----\n    context: Request context\n    has_child: Filter by resources that have child.\n    has_parent: Filter by resources that have parent.\n    browse_filter: Browse filter.\n    token: Token data.\n\nReturns:\n--------\n    resource.DataObjectList: List of resources."
      operationId: "get_entities_api_data_data_object_list_get"
      parameters:
        - name: "has_child"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Has Child"
        - name: "has_parent"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Has Parent"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataObjectList"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:browse"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:*"
  "/api/data/data_object":
    get:
      tags:
        - "Data Object"
      summary: "Get specific element 'data_object' by identifier"
      description: "Get data_object by identifier.\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    data_object.DataObjectResponse: DataObject response."
      operationId: "get_entity_api_data_data_object_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataObjectResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
    put:
      tags:
        - "Data Object"
      summary: "Update specific element 'data_object' by identifier"
      description: "Update data_object by identifier.\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    context: Request context\n    emitter: Event emitter.\n    data: DataObject update request.\n    token: Token data.\n\nReturns:\n--------\n    common.Entity: Updated data_object."
      operationId: "update_entity_api_data_data_object_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateEntityRequest"}
            examples:
              "basic":
                summary: "Data object"
                value: {"entity": {"name": "Data object example", "entity_type": "data_object", "label": "DUU", "description": "This data object was updated."}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Entity"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
    post:
      tags:
        - "Data Object"
      summary: "Create a new 'data_object' element."
      description: "Create a new data_object.\n\nArgs:\n-----\n    context: Request context\n    emitter: Event emitter.\n    data: Resource creation request.\n    token: Token data.\n\nReturns:\n--------\n    common.Entity: Created data_object."
      operationId: "create_entity_api_data_data_object_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateDataObjectRequest"}
            examples:
              "basic":
                summary: "Data object"
                value: {"entity": {"name": "Data object example", "entity_type": "data_object", "label": "DUE", "description": "This is an example for data object"}, "entity_info": {"owner": "owner@example.com", "contact_ids": ["Data object contact"], "links": ["example.com"]}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataObjectResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:create"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object"
    delete:
      tags:
        - "Data Object"
      summary: "Delete specific element 'data_object' by identifier"
      description: "Delete data_object by identifier.\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    context: Request context\n    emitter: Event emitter.\n    force: Force delete.\n    token: Token data.\n\nReturns:\n--------\n    common.OK: OK response."
      operationId: "delete_entity_api_data_data_object_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "force"
          in: "query"
          required: false
          schema:
            type: "boolean"
            title: "Force"
            default: false
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
  "/api/data/data_object/link":
    get:
      tags:
        - "Data Object"
      summary: "Get specific entity 'data_object' links by identifier"
      description: "Get data_object links by identifier.\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    common.EntityLinks: DataObject links."
      operationId: "get_entity_links_api_data_data_object_link_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityLinks"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
  "/api/data/data_object/info":
    get:
      tags:
        - "Data Object"
      summary: "Get specific entity 'data_object' info by identifier"
      description: "Get data_object info by identifier.\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    common.EntityInfo | None: DataObject info."
      operationId: "get_entity_info_api_data_data_object_info_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                anyOf:
                  - {"$ref": "#/components/schemas/EntityInfo"}
                  - type: "null"
                title: "Response Get Entity Info Api Data Data Object Info Get"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
    put:
      tags:
        - "Data Object"
      summary: "Update specific entity 'data_object' info by identifier"
      description: "Update data_object info by identifier.\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    data: DataObject info update request.\n    context: Request context\n    emitter: Event emitter.\n    token: Token data.\n\nReturns:\n--------\n    common.EntityInfo: DataObject info."
      operationId: "update_entity_info_api_data_data_object_info_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/EntityInfo"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityInfo"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
  "/api/data/data_object/metadata":
    get:
      tags:
        - "Data Object"
      summary: "Get specific entity 'data_object' metadata by identifier (tags, classification, sensitivities, field metadata)"
      description: "Get data_object metadata by identifier.\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    data_object.DataObjectMetadataResponse: DataObject metadata response."
      operationId: "get_entity_metadata_api_data_data_object_metadata_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataObjectMetadataResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
    put:
      tags:
        - "Data Object"
      summary: "Update specific entity 'data_object' metadata by identifier (tag/description, field tag/description)"
      description: "Update data_object metadata by identifier.\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    context: Request context\n    emitter: Event emitter.\n    data: DataObject metadata update request.\n    token: Token data.\n\nReturns:\n--------\n    common.OK: OK response."
      operationId: "update_entity_metadata_api_data_data_object_metadata_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateEntityMetadataRequest"}
            examples:
              "entity_level":
                summary: "Add schema tag"
                value: {"fields": {}, "tags": ["public"]}
              "field_level":
                summary: "Add field tag and description"
                value: {"fields": {"foo": {"tags": ["secret"], "description": "Hide this field", "primary": false, "optional": false}}, "tags": []}
              "both_level":
                summary: "Add schema and field tag"
                value: {"fields": {"foo": {"tags": ["secret"], "description": "Hide this field", "primary": false, "optional": false}}, "tags": ["public"]}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
    post:
      tags:
        - "Data Object"
      summary: "Add specific entity 'data_object' metadata by identifier (adds to existing tags/sensitivities, replaces classification)"
      description: "Add data_object metadata by identifier (POST endpoint).\n\nThis endpoint adds metadata without replacing existing ones:\n- Classification: Replaces current classification (same as PUT)\n- Sensitivities: Adds to existing sensitivities (different from PUT)\n- Tags: Adds to existing tags (different from PUT)\n- Fields: Adds/updates field metadata (different from PUT)\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    context: Request context\n    emitter: Event emitter.\n    data: DataObject metadata add request.\n    token: Token data.\n\nReturns:\n--------\n    common.OK: OK response."
      operationId: "add_entity_metadata_api_data_data_object_metadata_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateEntityMetadataRequest"}
            examples:
              "entity_level":
                summary: "Add schema tag"
                value: {"fields": {}, "tags": ["public"]}
              "field_level":
                summary: "Add field tag and description"
                value: {"fields": {"foo": {"tags": ["secret"], "description": "Hide this field", "primary": false, "optional": false}}, "tags": []}
              "both_level":
                summary: "Add schema and field tag"
                value: {"fields": {"foo": {"tags": ["secret"], "description": "Hide this field", "primary": false, "optional": false}}, "tags": ["public"]}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
    delete:
      tags:
        - "Data Object"
      summary: "Remove specific entity 'data_object' metadata by identifier (tag/description, field tag/description)"
      description: "Remove data_object metadata by identifier.\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    context: Request context\n    emitter: Event emitter.\n    data: DataObject metadata delete request.\n    token: Token data.\n\nReturns:\n--------\n    common.OK: OK response."
      operationId: "remove_entity_metadata_api_data_data_object_metadata_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/DeleteEntityMetadataRequest"}
            examples:
              "entity_level":
                summary: "Remove schema tag"
                value: {"fields": {}, "tags": ["public"]}
              "field_level":
                summary: "Remove field tag"
                value: {"fields": {"foo": {"tags": ["secret"], "primary": false, "optional": false}}, "tags": []}
              "both_level":
                summary: "Remove schema and field tag"
                value: {"fields": {"foo": {"tags": ["secret"], "primary": false, "optional": false}}, "tags": ["public"]}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
  "/api/data/data_object/config":
    get:
      tags:
        - "Data Object"
      summary: "Get configuration for a specific entity 'data_object' identifier"
      description: "Get configuration for a specific data_object identifier.\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    data_object.DataObjectConfigurationResponse: DataObject configuration."
      operationId: "get_data_object_configuration_api_data_data_object_config_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataObjectConfigurationResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
    put:
      tags:
        - "Data Object"
      summary: "Add/Update configuration for a specific entity 'data_object' identifier"
      description: "Add/Update configuration for a specific data_object identifier.\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    context: Request context\n    emitter: Event emitter.\n    data: DataObject configuration update request.\n    token: Token data.\n\nReturns:\n--------\n    data_object.DataObjectConfigurationResponse: DataObject configuration."
      operationId: "update_data_object_configuration_api_data_data_object_config_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateDataObjectConfiguration"}
            examples:
              "csv_params":
                summary: "CSV file configuration"
                value: {"configuration": {"data_object_type": "csv", "path": "/bucket_name/filename.csv", "has_header": true, "delimiter": ","}}
              "table_params":
                summary: "Table configuration"
                value: {"configuration": {"data_object_type": "table", "table": "table_name"}}
              "query_params":
                summary: "Query configuration"
                value: {"configuration": {"data_object_type": "query", "query": "select * from test_name where year < 2000"}}
              "parquet_params":
                summary: "Parquet configuration"
                value: {"configuration": {"data_object_type": "parquet", "mode": "overwrite"}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataObjectConfigurationResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
  "/api/data/data_object/schema":
    get:
      tags:
        - "Data Object"
      summary: "Get specific entity 'data_object' schema by identifier"
      description: "Get data_object schema by identifier.\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    context: Request context\n    _token: Token data.\n\nReturns:\n--------\n    common.Schema: DataObject schema."
      operationId: "get_schema_api_data_data_object_schema_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Schema-Output"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
    put:
      tags:
        - "Data Object"
      summary: "Update specific entity 'data_object' schema by identifier (data_object fields)"
      description: "Update data_object schema.\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    context: Request context\n    emitter: DataObject event emitter.\n    data: DataObject schema data.\n    token: Token data.\n\nReturns:\n--------\n    schema.common.Schema: DataObject schema."
      operationId: "update_schema_api_data_data_object_schema_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateSchema"}
            examples:
              "basic":
                summary: "Data object schema"
                value: {"details": {"fields": [{"name": "foo", "primary": true, "optional": false, "data_type": {"meta": {}, "column_type": "VARCHAR"}}, {"name": "year", "primary": true, "optional": false, "data_type": {"meta": {}, "column_type": "INTEGER"}}]}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Schema-Output"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
  "/api/data/link/data_object/data_product":
    post:
      tags:
        - "Link"
      summary: "Link a data_object to a data_product."
      description: "Link a data_object to a data product.\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    child_identifier: Product identifier.\n    context: Request context\n    emitter: Event emitter.\n    token: Token data.\n\nReturns:\n--------\n    common.EntityLink: Entity link."
      operationId: "link_entities_api_data_link_data_object_data_product_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "child_identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Child Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityLink"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
      x-iam-action-1: "data:data_product:manage"
      x-iam-resource-1: "urn:meshx:backend:data:root:data_product:{child_identifier}"
    delete:
      tags:
        - "Link"
      summary: "Remove a link between a data_object and a data_product."
      description: "Remove a link between a data_object and a data product.\n\nArgs:\n-----\n    identifier: DataObject identifier.\n    child_identifier: Product identifier.\n    context: Request context\n    emitter: Event emitter.\n    token: Token data.\n\nReturns:\n--------\n    common.OK: OK response."
      operationId: "delete_entity_link_api_data_link_data_object_data_product_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "child_identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Child Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_object:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_object:{identifier}"
      x-iam-action-1: "data:data_product:manage"
      x-iam-resource-1: "urn:meshx:backend:data:root:data_product:{child_identifier}"
  "/api/data/data_source/list":
    get:
      tags:
        - "Data Source"
      summary: "Get list of element 'data_source'"
      description: "Get list of data sources.\n\nArgs:\n-----\n    context: CurrentContext\n    has_child: bool | None\n    has_parent: bool | None\n    browse_filter: BrowseFilter\n    token: TokenData\n\nReturns:\n--------\n    data_source.DataSourceList: data_source.DataSourceList"
      operationId: "get_entities_api_data_data_source_list_get"
      parameters:
        - name: "has_child"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Has Child"
        - name: "has_parent"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Has Parent"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataSourceList"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_source:browse"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_source:*"
  "/api/data/data_source":
    get:
      tags:
        - "Data Source"
      summary: "Get specific element 'data_source' by identifier"
      description: "Get specific data source by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    _token: TokenData\n\nReturns:\n--------\n    data_source.DataSourceResponse: data_source.DataSourceResponse"
      operationId: "get_entity_api_data_data_source_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataSourceResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_source:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_source:{identifier}"
    put:
      tags:
        - "Data Source"
      summary: "Update specific element 'data_source' by identifier"
      description: "Update specific data_source by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    emitter: DataSourceEvent\n    data: common.UpdateEntityRequest\n    token: TokenData\n\nReturns:\n--------\n    common.Entity: common.Entity"
      operationId: "update_entity_api_data_data_source_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateEntityRequest"}
            examples:
              "basic":
                summary: "DataSource"
                value: {"entity": {"name": "DataSource example", "entity_type": "data_source", "label": "DSU", "description": "This data source was updated."}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Entity"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_source:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_source:{identifier}"
    post:
      tags:
        - "Data Source"
      summary: "Create a new 'data_source' element."
      description: "Create a new DataSource.\n\nArgs:\n-----\n    context: CurrentContext\n    emitter: DataSourceEvent\n    data: CreateDataSourceRequest\n    token: TokenData\n\nReturns:\n--------\n    data_source.DataSourceResponse"
      operationId: "create_entity_api_data_data_source_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateDataSourceRequest"}
            examples:
              "basic":
                summary: "DataSource"
                value: {"entity": {"name": "DataSource example", "entity_type": "data_source", "label": "DSE", "description": "This is an example for data source"}, "entity_info": {"owner": "owner@example.com", "contact_ids": ["DataSource contact"], "links": ["example.com"]}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataSourceResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_source:create"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_source"
    delete:
      tags:
        - "Data Source"
      summary: "Delete specific element 'data_source' by identifier"
      description: "Delete specific data_source by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    emitter: DataSourceEvent\n    force: bool\n    token: TokenData\n\nReturns:\n--------\n    common.OK: common.OK"
      operationId: "delete_entity_api_data_data_source_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "force"
          in: "query"
          required: false
          schema:
            type: "boolean"
            title: "Force"
            default: false
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_source:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_source:{identifier}"
  "/api/data/data_source/link":
    get:
      tags:
        - "Data Source"
      summary: "Get specific entity 'data_source' links by identifier"
      description: "Get specific entity  data_source  links by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    _token: TokenData\n\nReturns:\n--------\n    common.EntityLinks: common.EntityLinks"
      operationId: "get_entity_links_api_data_data_source_link_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityLinks"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_source:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_source:{identifier}"
  "/api/data/data_source/info":
    get:
      tags:
        - "Data Source"
      summary: "Get specific entity 'data_source' info by identifier"
      description: "Get specific entity  data_source  info by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    _token: TokenData\n\nReturns:\n--------\n    common.EntityInfo: common.EntityInfo"
      operationId: "get_entity_info_api_data_data_source_info_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityInfo"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_source:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_source:{identifier}"
    put:
      tags:
        - "Data Source"
      summary: "Update specific entity 'data_source' info by identifier"
      description: "Update specific entity data_source info by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    data: common.EntityInfo\n    context: CurrentContext\n    emitter: DataSourceEvent\n    token: TokenData\n\nReturns:\n--------\n    common.EntityInfo: common.EntityInfo"
      operationId: "update_entity_info_api_data_data_source_info_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/EntityInfo"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityInfo"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_source:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_source:{identifier}"
  "/api/data/data_source/connection":
    get:
      tags:
        - "Data Source"
      summary: "Get connection details for a specific entity 'data_source' identifier"
      description: "Get connection details for a specific entity data_source identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    _token: TokenData\n\nReturns:\n--------\n    data_source.DataSourceConnectionResponse: data_source.DataSourceConnectionResponse"
      operationId: "get_data_source_connection_api_data_data_source_connection_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataSourceConnectionResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_source:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_source:{identifier}"
    put:
      tags:
        - "Data Source"
      summary: "Add/Update connection details for a specific entity 'data_source' identifier"
      description: "Add/Update connection details for a specific entity data_source identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    emitter: DataSourceEvent\n    data: data_source.UpdateDataSourceConnection\n    token: TokenData\n\nReturns:\n--------\n    data_source.DataSourceConnectionResponse: data_source.DataSourceConnectionResponse"
      operationId: "update_data_source_connection_api_data_data_source_connection_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateDataSourceConnection"}
            examples:
              "s3":
                summary: "Set S3 connection"
                value: {"connection": {"connection_type": "s3", "url": "http://minio.fndtn-core-minio.svc.cluster.local", "access_key": {"env_key": "MY_S3_ACCESS"}, "access_secret": {"env_key": "MY_S3_SECRET"}}}
              "postgres":
                summary: "Set Postgres connection"
                value: {"connection": {"connection_type": "database", "engine": "postgresql", "host": "core-storage-postgres-postgresql.core-storage.svc.cluster.local", "port": 5432, "schema": "public", "database": "fndtn", "user": {"env_key": "MY_POSTGRES_USER"}, "password": {"env_key": "MY_POSTGRES_PASSWORD"}}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataSourceConnectionResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_source:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_source:{identifier}"
  "/api/data/data_source/secret":
    put:
      tags:
        - "Data Source"
      summary: "Update connection secrets for a specific entity 'data_source' identifier"
      description: "Set connection secrets for a specific entity data_source identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    emitter: DataSourceEvent\n    data: dict[str, str]\n    token: TokenData\n\nReturns:\n--------\n    common.Secrets: common.Secrets"
      operationId: "update_data_source_secret_api_data_data_source_secret_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              title: "Data"
              additionalProperties:
                type: "string"
            examples:
              "s3_secrets":
                summary: "Set secrets for S3 connection"
                value: {"MY_S3_ACCESS": "minio", "MY_S3_SECRET": "minio123"}
              "postgres_secrets":
                summary: "Set secrets for PostgreSQL connection"
                value: {"MY_POSTGRES_USER": "fndtn", "MY_POSTGRES_PASSWORD": "fndtn"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Secrets"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_source:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_source:{identifier}"
    post:
      tags:
        - "Data Source"
      summary: "Set connection secrets for a specific entity 'data_source' identifier"
      description: "Set connection secrets for a specific entity data_source identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    emitter: DataSourceEvent\n    data: dict[str, str]\n    token: TokenData\n\nReturns:\n--------\n    common.Secrets: common.Secrets"
      operationId: "add_data_source_secret_api_data_data_source_secret_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema:
              type: "object"
              title: "Data"
              additionalProperties:
                type: "string"
            examples:
              "s3_secrets":
                summary: "Set secrets for S3 connection"
                value: {"MY_S3_ACCESS": "minio", "MY_S3_SECRET": "minio123"}
              "postgres_secrets":
                summary: "Set secrets for PostgreSQL connection"
                value: {"MY_POSTGRES_USER": "fndtn", "MY_POSTGRES_PASSWORD": "fndtn"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Secrets"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_source:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_source:{identifier}"
  "/api/data/link/data_source/data_object":
    post:
      tags:
        - "Link"
      summary: "Link a data_source to a data object."
      description: "Link a data_source to a data_object.\n\nArgs:\n-----\n    identifier: UUID\n    child_identifier: UUID\n    context: CurrentContext\n    emitter: DataSourceEvent\n    token: TokenData\n\nReturns:\n--------\n    common.EntityLink: common.EntityLink"
      operationId: "link_entities_api_data_link_data_source_data_object_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "child_identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Child Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityLink"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_source:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_source:{identifier}"
      x-iam-action-1: "data:data_object:manage"
      x-iam-resource-1: "urn:meshx:backend:data:root:data_object:{child_identifier}"
    delete:
      tags:
        - "Link"
      summary: "Remove a link between a data_source and a data object."
      description: "Remove a link between a data_source and a data_object.\n\nArgs:\n-----\n    identifier: UUID\n    child_identifier: UUID\n    context: CurrentContext\n    emitter: DataSourceEvent\n    token: TokenData\n\nReturns:\n--------\n    common.OK: OK"
      operationId: "delete_entity_link_api_data_link_data_source_data_object_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "child_identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Child Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_source:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_source:{identifier}"
      x-iam-action-1: "data:data_object:manage"
      x-iam-resource-1: "urn:meshx:backend:data:root:data_object:{child_identifier}"
  "/api/data/mesh/list":
    get:
      tags:
        - "Mesh"
      summary: "Get list of meshes"
      description: "Get list of meshes.\n\nArgs:\n-----\n    context: CurrentContext\n    has_child: bool | None\n    has_parent: bool | None\n    browse_filter: BrowseFilter\n    token: TokenData\n\nReturns:\n--------\n    mesh.MeshList: mesh.MeshList"
      operationId: "get_entities_api_data_mesh_list_get"
      parameters:
        - name: "has_child"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Has Child"
        - name: "has_parent"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Has Parent"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/MeshList"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:mesh:browse"
      x-iam-resource-0: "urn:meshx:backend:data:root:mesh:*"
  "/api/data/mesh/landscape":
    get:
      tags:
        - "Mesh"
      summary: "Get mesh landscape"
      description: "Get the mesh landscape including data products, data sources, applications, and resources.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    _token: TokenData\n\nReturns:\n--------\n    dict: The mesh landscape details."
      operationId: "get_mesh_landscape_api_data_mesh_landscape_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                type: "array"
                items: {"$ref": "#/components/schemas/EntityLink"}
                title: "Response Get Mesh Landscape Api Data Mesh Landscape Get"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:mesh:browse"
      x-iam-resource-0: "urn:meshx:backend:data:root:mesh:*"
  "/api/data/mesh/data_products":
    get:
      tags:
        - "Mesh"
      summary: "Get identifiers of the data products that belong to the mesh"
      operationId: "get_data_products_ids_in_mesh_api_data_mesh_data_products_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataProductIdentifierList"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:data_product:browse"
      x-iam-resource-0: "urn:meshx:backend:data:root:data_product:*"
  "/api/data/mesh":
    get:
      tags:
        - "Mesh"
      summary: "Get Mesh by id"
      description: "Get specific mesh entity by identifier.\nArgs:\n-----\n    identifier: identifier\n    context: current context\n    _token: _token\nReturns:\n--------\n    mesh.MeshResponse: returns application.ApplicationResponse"
      operationId: "get_entity_api_data_mesh_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/MeshResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:mesh:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:mesh:*"
    put:
      tags:
        - "Mesh"
      summary: "Update an existing mesh"
      description: "Update an existing Mesh.\n\nArgs:\n-----\n    context: CurrentContext\n    emitter: MeshEvent\n    data: CreateMeshRequest\n    token: TokenData\n\nReturns:\n--------\n    mesh.meshResponse"
      operationId: "update_entity_api_data_mesh_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateMeshRequest"}
            examples:
              "basic":
                summary: "Mesh"
                value: {"entity": {"name": "Mesh example", "entity_type": "mesh", "label": "DME", "description": "This is an example for mesh", "purpose": "Mesh purpose", "assignees": [{"email": "assignee1@meshx.com", "full_name": "Assignee 1", "role": "Sr Janitor"}], "security_policy": []}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/MeshResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:mesh:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:mesh:{identifier}"
    post:
      tags:
        - "Mesh"
      summary: "Create a new mesh"
      description: "Create a new Mesh.\n\nArgs:\n-----\n    context: CurrentContext\n    emitter: MeshEvent\n    data: CreateMeshRequest\n    token: TokenData\n\nReturns:\n--------\n    common.EntityResponse"
      operationId: "create_entity_api_data_mesh_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateMeshRequest"}
            examples:
              "basic":
                summary: "Mesh"
                value: {"entity": {"name": "Mesh example", "entity_type": "mesh", "label": "DME", "description": "This is an example for mesh", "purpose": "Mesh Purpose", "assignees": [{"email": "assignee1@meshx.com", "full_name": "Assignee 1", "role": "Sr Janitor"}], "security_policy": ["statement_1"]}, "entity_info": {"owner": "owner@example.com", "contact_ids": ["contact_id"], "links": []}}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/MeshResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:mesh:create"
      x-iam-resource-0: "urn:meshx:backend:data:root:mesh:{identifier}"
    delete:
      tags:
        - "Mesh"
      summary: "Delete an existing mesh"
      description: "Delete specific mesh by identifier.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    emitter: MeshEvent\n    force: bool\n    token: TokenData\n\nReturns:\n--------\n    common.OK: common.OK"
      operationId: "delete_entity_api_data_mesh_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:mesh:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:mesh:{identifier}"
  "/api/data/mesh/pin":
    put:
      tags:
        - "Mesh"
      summary: "Update an existing mesh"
      description: "Update an existing Mesh.\n\nArgs:\n-----\n    identifier: UUID\n    context: CurrentContext\n    data: UpdateMeshPinRequest\n    token: TokenData\nReturns:\n--------\n    mesh.UpdateMeshPinRequest"
      operationId: "update_mesh_pin_api_data_mesh_pin_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateMeshPinRequest"}
            examples:
              "basic":
                summary: "Mesh Pin"
                value: {"is_pinned": true}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/UpdateMeshPinRequest"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:mesh:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:mesh:{identifier}"
  "/api/data/search":
    get:
      tags:
        - "Search"
      summary: "Search entities"
      description: "Search for entities\n\nArgs:\n-----\n    request: fastapi.Request\n    context: RequestContext\n    query: Search query\n    entity_types: List of entity types to query\n    limit: Results limit\n    offset: Results offset\n    access_validator: AccessValidator\n    token: Token\n    data_product_filter: BrowseFilter\n    application_filter: BrowseFilter\n    data_object_filter: BrowseFilter\n    data_source_filter: BrowseFilter\n    data_system_filter: BrowseFilter\n\nReturns:\n--------\n    common.EntitySearchResults: List of entity search results"
      operationId: "search_entities_api_data_search_get"
      parameters:
        - name: "query"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
                maxLength: 50
              - type: "null"
            title: "Query"
        - name: "entity_type"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/EntityType"}
              - type: "null"
            title: "Entity Type"
        - name: "sort_by"
          in: "query"
          required: false
          schema: {"$ref": "#/components/schemas/EntitySearchSortColumns"}
        - name: "sort_direction"
          in: "query"
          required: false
          schema: {"$ref": "#/components/schemas/backend__data__constant__SortDirection"}
        - name: "owner"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Owner"
        - name: "created_at_from"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "date-time"
              - type: "null"
            title: "Created At From"
        - name: "created_at_to"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "date-time"
              - type: "null"
            title: "Created At To"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            title: "Limit"
            minimum: 1
            default: 50
        - name: "offset"
          in: "query"
          required: false
          schema:
            type: "integer"
            title: "Offset"
            minimum: 0
            default: 0
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntitySearchResults"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:search"
      x-iam-resource-0: "urn:meshx:backend:iam:root:organization"
  "/api/data/link":
    get:
      tags:
        - "Link"
      summary: "Get a list of all entity links in the core."
      description: "Get a list of all entity links in the core.\n\nArgs:\n-----\n    request: fastapi.Request\n    context: RequestContext\n    access_validator: AccessValidator\n    token: Token\n    data_product_filter: BrowseFilter\n    application_filter: BrowseFilter\n    data_object_filter: BrowseFilter\n    data_source_filter: BrowseFilter\n    data_system_filter: BrowseFilter\n\nReturns:\n--------\n    schema.EntityLinkList: EntityLinkList"
      operationId: "get_links_api_data_link_get"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/EntityLinkList"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:application:browse"
      x-iam-resource-0: "urn:meshx:backend:data:root:application:{identifier}"
  "/api/data/compute":
    get:
      tags:
        - "Compute"
      summary: "Get specific element 'compute' status by identifier (suffix/run filters)"
      description: "Get the status of the compute job for an element."
      operationId: "get_status_api_data_compute_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "job_type"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/ComputeJobType"}
              - type: "null"
            title: "Job Type"
        - name: "suffix"
          in: "query"
          required: false
          schema:
            type: "string"
            title: "Suffix"
            default: "latest"
        - name: "run"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Run"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ComputeResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
  "/api/data/compute/log":
    get:
      tags:
        - "Compute"
      summary: "Get specific element 'compute' logs by identifier (suffix/run filters)"
      description: "Get the logs of the compute job for an element."
      operationId: "get_logs_api_data_compute_log_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "job_type"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/ComputeJobType"}
              - type: "null"
            title: "Job Type"
        - name: "suffix"
          in: "query"
          required: false
          schema:
            type: "string"
            title: "Suffix"
            default: "latest"
        - name: "run"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Run"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ComputeLogList"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
  "/api/data/compute/history":
    get:
      tags:
        - "Compute"
      summary: "Get specific element 'compute' application history by identifier"
      description: "Get the history of compute jobs for an element."
      operationId: "get_job_history_api_data_compute_history_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "job_type"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/ComputeJobType"}
              - type: "null"
            title: "Job Type"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ComputeJobHistory"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
  "/api/data/compute/history/run":
    get:
      tags:
        - "Compute"
      summary: "Get specific element 'compute' run history by identifier"
      description: "Get the history of a scheduled compute jobs runs for an element."
      operationId: "get_run_history_api_data_compute_history_run_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "job_type"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/ComputeJobType"}
              - type: "null"
            title: "Job Type"
        - name: "suffix"
          in: "query"
          required: false
          schema:
            type: "string"
            title: "Suffix"
            default: "latest"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ComputeRunHistory"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
  "/api/data/sensitivity/list":
    get:
      tags:
        - "Sensitivity"
      summary: "Get list of sensitivities"
      description: "Get all sensitivities.\n\nArgs:\n----\n    context: CurrentContext\n    _token: Authentication token\n\nReturns:\n-------\n    List of all sensitivity names"
      operationId: "get_sensitivities_api_data_sensitivity_list_get"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SensitivityListResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
  "/api/data/sensitivity/name":
    get:
      tags:
        - "Sensitivity"
      summary: "Get specific sensitivity by name"
      description: "Get a specific sensitivity by name.\n\nArgs:\n----\n    name: Sensitivity name.\n    context: CurrentContext\n    _token: Authentication token\n\nReturns:\n-------\n    The sensitivity details."
      operationId: "get_sensitivity_by_name_api_data_sensitivity_name_get"
      parameters:
        - name: "name"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Name"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Sensitivity"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
    put:
      tags:
        - "Sensitivity"
      summary: "Update a sensitivity by name"
      description: "Update a sensitivity by name.\n\nArgs:\n----\n    name: Sensitivity name.\n    context: CurrentContext\n    data: The updated sensitivity data\n    _token: Authentication token\n\nReturns:\n-------\n    The updated sensitivity details"
      operationId: "update_sensitivity_by_name_api_data_sensitivity_name_put"
      parameters:
        - name: "name"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Name"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateSensitivityRequest"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Sensitivity"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
    delete:
      tags:
        - "Sensitivity"
      summary: "Delete a sensitivity by name"
      description: "Delete a sensitivity by name.\n\nArgs:\n----\n    name: Sensitivity name.\n    context: CurrentContext\n    _token: Authentication token\n\nReturns:\n-------\n    Success message"
      operationId: "delete_sensitivity_by_name_api_data_sensitivity_name_delete"
      parameters:
        - name: "name"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Name"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DeleteSensitivityResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
  "/api/data/sensitivity":
    get:
      tags:
        - "Sensitivity"
      summary: "Get specific sensitivity by ID"
      description: "Get a specific sensitivity by ID.\n\nArgs:\n----\n    sensitivity_id: Sensitivity ID.\n    context: CurrentContext\n    _token: Authentication token\n\nReturns:\n-------\n    The sensitivity details."
      operationId: "get_sensitivity_api_data_sensitivity_get"
      parameters:
        - name: "sensitivity_id"
          in: "query"
          required: true
          schema:
            type: "integer"
            title: "Sensitivity Id"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Sensitivity"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
    put:
      tags:
        - "Sensitivity"
      summary: "Update a sensitivity by ID"
      description: "Update a sensitivity.\n\nArgs:\n----\n    sensitivity_id: Sensitivity ID.\n    context: CurrentContext\n    data: The updated sensitivity data\n    _token: Authentication token\n\nReturns:\n-------\n    The updated sensitivity details"
      operationId: "update_sensitivity_api_data_sensitivity_put"
      parameters:
        - name: "sensitivity_id"
          in: "query"
          required: true
          schema:
            type: "integer"
            title: "Sensitivity Id"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateSensitivityRequest"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Sensitivity"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
    post:
      tags:
        - "Sensitivity"
      summary: "Create a new sensitivity"
      description: "Create a new sensitivity.\n\nArgs:\n----\n    context: CurrentContext\n    data: The sensitivity data\n    _token: Authentication token\n\nReturns:\n-------\n    The created sensitivity details"
      operationId: "create_sensitivity_api_data_sensitivity_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateSensitivityRequest"}
        required: true
      responses:
        "201":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Sensitivity"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
    delete:
      tags:
        - "Sensitivity"
      summary: "Delete a sensitivity by ID"
      description: "Delete a sensitivity.\n\nArgs:\n----\n    sensitivity_id: Sensitivity ID.\n    context: CurrentContext\n    _token: Authentication token\n\nReturns:\n-------\n    Success message"
      operationId: "delete_sensitivity_api_data_sensitivity_delete"
      parameters:
        - name: "sensitivity_id"
          in: "query"
          required: true
          schema:
            type: "integer"
            title: "Sensitivity Id"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DeleteSensitivityResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
  "/api/data/tag":
    get:
      tags:
        - "Element"
      summary: "Get list of tags"
      description: "Get tags.\n\nArgs:\n-----\n    context: RequestContext\n    tag_filter: Filter\n    system_defined: Is system defined\n    _token: Token\n\nReturns:\n--------\n    tag.TagList: TagList"
      operationId: "get_tags_api_data_tag_get"
      parameters:
        - name: "tag_filter"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Tag Filter"
        - name: "system_defined"
          in: "query"
          required: false
          schema:
            type: "boolean"
            title: "System Defined"
            default: false
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TagList"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:tag:browse"
      x-iam-resource-0: "urn:meshx:backend:data:root:tag"
    post:
      tags:
        - "Element"
      summary: "Add new tag"
      description: "Add tag.\n\nArgs:\n-----\n    context: RequestContext\n    emitter: Tag event\n    data: ManageTag\n    token: Token\n\nReturns:\n--------\n    tag.Tag: Tag"
      operationId: "add_tag_api_data_tag_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ManageTag"}
            examples:
              "tag":
                summary: "Tag"
                value: {"tag": "example_tag"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Tag"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:tag:create"
      x-iam-resource-0: "urn:meshx:backend:data:root:tag"
    delete:
      tags:
        - "Element"
      summary: "Delete tag"
      description: "Remove tag.\n\nArgs:\n-----\n    context: RequestContext\n    emitter: Tag event\n    data: ManageTag\n    token: Token\n\nReturns:\n--------\n    common.OK: OK"
      operationId: "remove_tag_api_data_tag_delete"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ManageTag"}
            examples:
              "tag":
                summary: "Tag"
                value: {"tag": "example_tag"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__data__schema__common__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:tag:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:tag"
  "/api/data/orchestrator_workflow":
    get:
      tags:
        - "Orchestrator Workflow"
      summary: "Get workflow details and tasks"
      description: "Get workflow details and related Luigi tasks.\n\nArgs:\n    identifier: Workflow identifier.\n    context: Request context.\n\nReturns:\n    Workflow: Workflow with tasks."
      operationId: "get_orchestrator_workflow_api_data_orchestrator_workflow_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/OrchestratorWorkflow"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:orchestrator_workflow:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:orchestrator_workflow:{identifier}"
    put:
      tags:
        - "Orchestrator Workflow"
      summary: "Update a workflow"
      description: "Update a workflow.\n\nArgs:\n    identifier: Workflow identifier.\n    data: Updated workflow data.\n    context: Request context.\n\nReturns:\n    Workflow: Updated workflow."
      operationId: "update_orchestrator_workflow_api_data_orchestrator_workflow_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateOrchestratorWorkflow"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/OrchestratorWorkflow"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:orchestrator_workflow:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:orchestrator_workflow:{identifier}"
    post:
      tags:
        - "Orchestrator Workflow"
      summary: "Create and start a workflow run"
      description: "Create and start a workflow run.\n\nArgs:\n    data: Workflow creation data.\n    context: Request context.\n    token: Authorization token with organization information.\n\nReturns:\n    Workflow: Created workflow."
      operationId: "create_orchestrator_workflow_api_data_orchestrator_workflow_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateOrchestratorWorkflow"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/OrchestratorWorkflow"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:orchestrator_workflow:create"
      x-iam-resource-0: "urn:meshx:backend:data:root:orchestrator_workflow"
    delete:
      tags:
        - "Orchestrator Workflow"
      summary: "Cancel a workflow run"
      description: "Cancel a workflow run.\n\nArgs:\n    identifier: Workflow identifier.\n    context: Request context.\n\nReturns:\n    Workflow: Cancelled workflow."
      operationId: "delete_orchestrator_workflow_api_data_orchestrator_workflow_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/OrchestratorWorkflow"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:orchestrator_workflow:manage"
      x-iam-resource-0: "urn:meshx:backend:data:root:orchestrator_workflow:{identifier}"
  "/api/data/orchestrator_workflow/graph":
    get:
      tags:
        - "Orchestrator Workflow"
      summary: "Get workflow dependency graph and task statuses"
      description: "Get the workflow dependency graph and task statuses."
      operationId: "get_orchestrator_workflow_graph_api_data_orchestrator_workflow_graph_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                type: "object"
                title: "Response Get Orchestrator Workflow Graph Api Data Orchestrator Workflow Graph Get"
                additionalProperties: true
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:orchestrator_workflow:read"
      x-iam-resource-0: "urn:meshx:backend:data:root:orchestrator_workflow:{identifier}"
  "/api/data/orchestrator_workflow/list":
    get:
      tags:
        - "Orchestrator Workflow"
      summary: "List all workflow runs"
      description: "List all workflow runs.\n\nArgs:\n    context: Request context.\n\nReturns:\n    WorkflowList: List of workflows."
      operationId: "list_workflows_api_data_orchestrator_workflow_list_get"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/OrchestratorWorkflows"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "data:orchestrator_workflow:browse"
      x-iam-resource-0: "urn:meshx:backend:data:root:orchestrator_workflow:*"
  "/api/iam/organization":
    put:
      tags:
        - "Organization management"
      summary: "Update existing organization."
      description: "Update existing organization."
      operationId: "update_organization_api_iam_organization_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateOrganization"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Organization"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:organization:delete"
      x-iam-resource-0: "urn:meshx:backend:iam:root:organization"
    post:
      tags:
        - "Organization management"
      summary: "Create new organization."
      description: "Create an organization."
      operationId: "create_organization_api_iam_organization_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateOrganization"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Organization"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:organization:create"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:organization"
    delete:
      tags:
        - "Organization management"
      summary: "Delete existing organization."
      description: "Delete existing organization."
      operationId: "delete_organization_api_iam_organization_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "full"
          in: "query"
          required: false
          schema:
            type: "boolean"
            title: "Full"
            default: false
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Organization"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:organization:delete"
      x-iam-resource-0: "urn:meshx:backend:iam:root:organization"
  "/api/iam/organization/list":
    get:
      tags:
        - "Organization management"
      summary: "List organizations."
      description: "List organization."
      operationId: "get_organizations_api_iam_organization_list_get"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/OrganizationList"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
  "/api/iam/login":
    post:
      tags:
        - "Auth"
      summary: "Login using user and password."
      description: "Login user using Keycloak."
      operationId: "login_user_api_iam_login_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UserCredentials"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TokenOpenID"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/iam/refresh":
    post:
      tags:
        - "Auth"
      summary: "Refresh token."
      description: "Refresh token using Keycloak."
      operationId: "refresh_token_api_iam_refresh_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/RefreshToken"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TokenOpenID"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/iam/logout":
    post:
      tags:
        - "Auth"
      summary: "Logout user."
      description: "Logout user using Keycloak."
      operationId: "logout_user_api_iam_logout_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/RefreshToken"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__iam__schema__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/iam/password/reset":
    post:
      tags:
        - "Auth"
      summary: "Trigger password reset for user."
      description: "Reset user password.\n\nPrerequisites for the client:\n  - Access Type: confidential\n  - Service Organizations Enabled: True\n  - Service Organization User should have role `manage-users` in the client `realm-management`."
      operationId: "reset_password_api_iam_password_reset_post"
      parameters:
        - name: "username"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Username"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__iam__schema__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/iam/password/change":
    post:
      tags:
        - "Auth"
      summary: "Change user's own password."
      description: "Change user's own password."
      operationId: "change_password_api_iam_password_change_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ChangePassword"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__iam__schema__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
  "/api/iam/admin/user/{user_id}/password":
    post:
      tags:
        - "Auth"
      summary: "Admin endpoint to change another user's password."
      description: "Admin endpoint to change another user's password."
      operationId: "admin_change_user_password_api_iam_admin_user__user_id__password_post"
      parameters:
        - name: "user_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "User Id"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/AdminChangePassword"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__iam__schema__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
  "/api/iam/principal/role/list":
    get:
      tags:
        - "Role management"
      summary: "Browse all roles."
      description: "Browse organization roles."
      operationId: "browse_roles_api_iam_principal_role_list_get"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/RolesInfo"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:role:browse"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:role"
  "/api/iam/principal/role":
    get:
      tags:
        - "Role management"
      summary: "Get the role."
      description: "Get a role."
      operationId: "get_role_api_iam_principal_role_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/RoleFullInfo"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:role:read"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:role:{identifier}"
    put:
      tags:
        - "Role management"
      summary: "Update role."
      description: "Update a role."
      operationId: "update_role_api_iam_principal_role_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateUpdateRole"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Role"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:role:manage"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:role:{identifier}"
    post:
      tags:
        - "Role management"
      summary: "Create new role."
      description: "Create a role."
      operationId: "create_role_api_iam_principal_role_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateUpdateRole"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Role"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:role:create"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:role"
    delete:
      tags:
        - "Role management"
      summary: "Delete the role."
      description: "Delete a role."
      operationId: "delete_role_api_iam_principal_role_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__iam__schema__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:role:manage"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:role:{identifier}"
  "/api/iam/principal/role/member":
    post:
      tags:
        - "Role management"
      summary: "Add principals into the role. Returns the updated information about the role."
      description: "Assign principals to a role."
      operationId: "add_principals_into_role_api_iam_principal_role_member_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/Principals"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/RoleFullInfo"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:role:manage"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:role:{identifier}"
    delete:
      tags:
        - "Role management"
      summary: "Remove principals from the role. Returns the updated information about the role."
      description: "Remove principals from a role."
      operationId: "remove_principals_from_role_api_iam_principal_role_member_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/Principals"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/RoleFullInfo"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:role:manage"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:role:{identifier}"
  "/api/iam/principal/user":
    get:
      tags:
        - "User"
      summary: "Print user token if it is correct."
      description: "Print user token if it is correct."
      operationId: "describe_current_user_api_iam_principal_user_get"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TokenDataResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
    post:
      tags:
        - "User"
      summary: "Create a user."
      description: "Create a user."
      operationId: "create_user_api_iam_principal_user_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateUser"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CreateUserResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:user:create"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:user"
    delete:
      tags:
        - "User"
      summary: "Delete user from the organization."
      description: "Remove a user from an organization."
      operationId: "delete_user_api_iam_principal_user_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/User"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:user:delete"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:user"
  "/api/iam/principal/user/me":
    get:
      tags:
        - "User"
      summary: "Get current user's full details including admin status."
      description: "Get current user's full details including admin status."
      operationId: "describe_current_user_details_api_iam_principal_user_me_get"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/User"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
  "/api/iam/principal/user/purge":
    delete:
      tags:
        - "User"
      summary: "Purge user from system."
      description: "Remove a user from the system completely."
      operationId: "purge_user_api_iam_principal_user_purge_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__iam__schema__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:user:delete"
      x-iam-resource-0: "urn:meshx:backend:iam:root:user"
  "/api/iam/principal/user/list":
    get:
      tags:
        - "User"
      summary: "Get users."
      description: "Get a list of user."
      operationId: "get_users_api_iam_principal_user_list_get"
      parameters:
        - name: "search"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Search"
        - name: "system"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "System"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Users"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:user:browse"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:user"
  "/api/iam/principal/user/key_pair":
    post:
      tags:
        - "User"
      summary: "Create an access key pair for a user."
      description: "Create a key pair for a user."
      operationId: "create_access_key_pair_api_iam_principal_user_key_pair_post"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SecretKey"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:key:manage"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:user:{identifier}"
    delete:
      tags:
        - "User"
      summary: "Delete the key pair."
      description: "Remove a key pair from a user."
      operationId: "delete_access_key_pair_api_iam_principal_user_key_pair_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "access_key_id"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Access Key Id"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__iam__schema__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:key:manage"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:user:{identifier}"
  "/api/iam/policy/role":
    get:
      tags:
        - "Role Based Identity"
      summary: "Get Role Policy."
      description: "Get a role policy."
      operationId: "get_role_policy_api_iam_policy_role_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/RolePolicy"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:policy:read"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:policy:{identifier}"
    post:
      tags:
        - "Role Based Identity"
      summary: "Create Role Policy."
      description: "Create a role policy."
      operationId: "create_role_policy_api_iam_policy_role_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ManageRolePolicy"}
            examples:
              "basic":
                summary: "Create Role Policy"
                value: {"role": "00000000-0000-0000-0000-000000000000", "policy": "00000000-0000-0000-0000-000000000000"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__iam__schema__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:policy:create"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:policy"
    delete:
      tags:
        - "Role Based Identity"
      summary: "Delete Role Policy."
      description: "Remove a role policy."
      operationId: "delete_role_policy_api_iam_policy_role_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__iam__schema__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:policy:manage"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:policy:{identifier}"
  "/api/iam/policy/user":
    get:
      tags:
        - "User Based Identity"
      summary: "Get User Policy."
      description: "Get a user policy."
      operationId: "get_user_policy_api_iam_policy_user_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "policy"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Policy"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/UserPolicy"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:policy:read"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:policy:{identifier}"
    post:
      tags:
        - "User Based Identity"
      summary: "Create User Policy."
      description: "Create a user policy."
      operationId: "create_user_policy_api_iam_policy_user_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ManageUserPolicy"}
            examples:
              "basic":
                summary: "Create User Policy"
                value: {"user": "00000000-0000-0000-0000-000000000000", "policy": "00000000-0000-0000-0000-000000000000"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__iam__schema__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:policy:create"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:policy"
    delete:
      tags:
        - "User Based Identity"
      summary: "Delete User Policy."
      description: "Remove a user policy."
      operationId: "delete_user_policy_api_iam_policy_user_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "policy"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Policy"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__iam__schema__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:policy:manage"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:policy:{identifier}"
  "/api/iam/policy/user/list":
    get:
      tags:
        - "User Based Identity"
      summary: "Get all User Policies."
      description: "Get all user policies for an token.organization."
      operationId: "get_all_user_policies_api_iam_policy_user_list_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            title: "Page"
            default: 1
        - name: "page_size"
          in: "query"
          required: false
          schema:
            exclusiveMaximum: 0
            exclusiveMinimum: 0
            type: "integer"
            title: "Page Size"
            maximum: 51
            minimum: 0
            default: 10
        - name: "resource"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Resource"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/UserPolicies"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:policy:browse"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:policy:*"
  "/api/iam/policy":
    get:
      tags:
        - "IAM"
      summary: "Get Policy."
      description: "Get a user policy."
      operationId: "get_policy_api_iam_policy_get"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Policy"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:policy:read"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:policy:{identifier}"
    put:
      tags:
        - "IAM"
      summary: "Update Policy."
      description: "Update a policy."
      operationId: "update_policy_api_iam_policy_put"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreatePolicy"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__iam__schema__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:policy:manage"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:policy:{identifier}"
    post:
      tags:
        - "IAM"
      summary: "Create Policy."
      description: "Create a user policy."
      operationId: "create_policy_api_iam_policy_post"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreatePolicy"}
            examples:
              "superadmin":
                summary: "Super admin"
                value: {"version": "2022-10-01", "name": "SuperAdmin", "statements": [{"sid": "SUPER_ADMIN", "action": ["*"], "resource": ["*"], "condition": [], "effect": "allow"}]}
              "iam_admin":
                summary: "IAM admin"
                value: {"version": "2022-10-01", "name": "IAMAdmin", "statements": [{"sid": "IAM_ADMIN", "action": ["*", "data:mesh:create", "data:mesh:browse", "data:mesh:read", "data:mesh:manage", "data:data_product:create", "data:data_product:browse", "data:data_product:read", "data:data_product.metadata:read", "data:data_product.metadata:create", "data:data_product.metadata:update", "data:data_product.metadata:delete", "data:data_product:manage", "data:data_product:query", "data:data_product:share", "data:orchestrator_workflow:create", "data:orchestrator_workflow:browse", "data:orchestrator_workflow:read", "data:orchestrator_workflow:manage", "data:data_source:create", "data:data_source:browse", "data:data_source:read", "data:data_source:manage", "data:data_object:create", "data:data_object:browse", "data:data_object:read", "data:data_object.metadata:read", "data:data_object.metadata:create", "data:data_object.metadata:update", "data:data_object.metadata:delete", "data:data_object:manage", "data:data_object:query", "data:application:create", "data:application:browse", "data:application:read", "data:application:manage", "data:data_system:create", "data:data_system:browse", "data:data_system:read", "data:data_system:manage", "data:tag:create", "data:tag:browse", "data:tag:manage", "data:classification:create", "data:classification:browse", "data:classification:read", "data:classification:update", "data:classification:delete", "data:classification:manage", "data:sensitivity:create", "data:sensitivity:browse", "data:sensitivity:read", "data:sensitivity:update", "data:sensitivity:delete", "data:sensitivity:manage", "data:compute:develop", "data:compute:read", "data:search", "self", "iam:organization:create", "iam:organization:delete", "iam:organization:manage", "iam:organization:member", "iam:user:login", "iam:user:refresh", "iam:user:logout", "iam:user:reset", "iam:user:create", "iam:user:delete", "iam:user:manage", "iam:user:browse", "iam:role:create", "iam:role:browse", "iam:role:read", "iam:role:manage", "iam:policy:create", "iam:policy:browse", "iam:policy:read", "iam:policy:manage", "iam:policy:delete", "data:link:browse", "iam:key:manage"], "resource": ["urn:meshx::iam:root:policy:*", "urn:meshx::iam:root:policy", "urn:meshx::iam:root:role:*", "urn:meshx::iam:root:role", "urn:meshx::iam:root:user"], "condition": [], "effect": "allow"}]}
              "keycloak_user_viewer":
                summary: "Keycloak user viewer"
                value: {"version": "2022-10-01", "name": "KeycloakUser", "statements": [{"sid": "KEYCLOAK_USER_VIEWER", "action": ["iam:user:browse"], "resource": ["urn:meshx::iam:root:user"], "condition": [], "effect": "allow"}]}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Policy"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:policy:create"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:policy"
    delete:
      tags:
        - "IAM"
      summary: "Delete Policy."
      description: "Remove a user policy."
      operationId: "delete_policy_api_iam_policy_delete"
      parameters:
        - name: "identifier"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Identifier"
            format: "uuid"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__iam__schema__OK"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:policy:manage"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:policy:{identifier}"
  "/api/iam/policy/list":
    get:
      tags:
        - "IAM"
      summary: "Get all Policies."
      description: "Get all user policies for an organization."
      operationId: "get_all_policies_api_iam_policy_list_get"
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            title: "Page"
            default: 1
        - name: "page_size"
          in: "query"
          required: false
          schema:
            exclusiveMaximum: 0
            exclusiveMinimum: 0
            type: "integer"
            title: "Page Size"
            maximum: 51
            minimum: 0
            default: 10
        - name: "resource"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Resource"
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Policies"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
      x-iam-action-0: "iam:policy:browse"
      x-iam-resource-0: "urn:meshx:backend:iam:{organization}:policy:*"
  "/api/.well-known/status":
    get:
      tags:
        - "Service Info"
      summary: "Get service status."
      description: "Return current version."
      operationId: "status_api__well_known_status_get"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                type: "object"
                title: "Response Status Api  Well Known Status Get"
                additionalProperties: true
  "/api/.well-known/error_codes":
    get:
      tags:
        - "Service Info"
      summary: "Get error codes."
      description: "Get error codes.\n\nArgs:\n-----\n    _token: Token\n\nReturns:\n--------\n    common.ErrorCodes: Error Codes Response"
      operationId: "get_error_codes__api__well_known_error_codes_get"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ErrorCodes"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
  "/api/.well-known/permissions":
    get:
      tags:
        - "Service Info"
      summary: "Get permissions."
      description: "Get route permissions.\n\nArgs:\n-----\n    request: FastAPI Request\n    config: Current config.\n    _token: Token\n\nReturns:\n--------\n    common.FormattedRoutes: Formatted Routes Response"
      operationId: "get_permissions__api__well_known_permissions_get"
      parameters:
        - name: "x-org"
          in: "header"
          required: true
          schema:
            type: "string"
            title: "X-Org"
        - name: "x-org-override"
          in: "header"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "X-Org-Override"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/FormattedRoutes"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - bearer: []
components:
  schemas:
    "Action":
      type: "string"
      title: "Action"
      enum:
        - "*"
        - "data:mesh:create"
        - "data:mesh:browse"
        - "data:mesh:read"
        - "data:mesh:manage"
        - "data:data_product:create"
        - "data:data_product:browse"
        - "data:data_product:read"
        - "data:data_product.metadata:read"
        - "data:data_product.metadata:create"
        - "data:data_product.metadata:update"
        - "data:data_product.metadata:delete"
        - "data:data_product:manage"
        - "data:data_product:query"
        - "data:data_product:share"
        - "data:orchestrator_workflow:create"
        - "data:orchestrator_workflow:browse"
        - "data:orchestrator_workflow:read"
        - "data:orchestrator_workflow:manage"
        - "data:data_source:create"
        - "data:data_source:browse"
        - "data:data_source:read"
        - "data:data_source:manage"
        - "data:data_object:create"
        - "data:data_object:browse"
        - "data:data_object:read"
        - "data:data_object.metadata:read"
        - "data:data_object.metadata:create"
        - "data:data_object.metadata:update"
        - "data:data_object.metadata:delete"
        - "data:data_object:manage"
        - "data:data_object:query"
        - "data:application:create"
        - "data:application:browse"
        - "data:application:read"
        - "data:application:manage"
        - "data:data_system:create"
        - "data:data_system:browse"
        - "data:data_system:read"
        - "data:data_system:manage"
        - "data:tag:create"
        - "data:tag:browse"
        - "data:tag:manage"
        - "data:classification:create"
        - "data:classification:browse"
        - "data:classification:read"
        - "data:classification:update"
        - "data:classification:delete"
        - "data:classification:manage"
        - "data:sensitivity:create"
        - "data:sensitivity:browse"
        - "data:sensitivity:read"
        - "data:sensitivity:update"
        - "data:sensitivity:delete"
        - "data:sensitivity:manage"
        - "data:compute:develop"
        - "data:compute:read"
        - "data:search"
        - "self"
        - "iam:organization:create"
        - "iam:organization:delete"
        - "iam:organization:manage"
        - "iam:organization:member"
        - "iam:user:login"
        - "iam:user:refresh"
        - "iam:user:logout"
        - "iam:user:reset"
        - "iam:user:create"
        - "iam:user:delete"
        - "iam:user:manage"
        - "iam:user:browse"
        - "iam:role:create"
        - "iam:role:browse"
        - "iam:role:read"
        - "iam:role:manage"
        - "iam:policy:create"
        - "iam:policy:browse"
        - "iam:policy:read"
        - "iam:policy:manage"
        - "iam:policy:delete"
        - "data:link:browse"
        - "iam:key:manage"
      description: "Action class base.\n\nWhen implementing IAM actions in a service, extend this class."
    "AddCurrentTimestampTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "add_current_timestamp"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "column":
          type: "string"
          title: "Column"
          pattern: "^[A-Za-z0-9_#]*$"
      title: "AddCurrentTimestampTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "column"
      description: "Add current timestamp transformation."
    "AdminChangePassword":
      type: "object"
      properties:
        "new_password":
          type: "string"
          title: "New Password"
          minLength: 8
      title: "AdminChangePassword"
      required:
        - "new_password"
    "AggregateFunction":
      type: "string"
      title: "AggregateFunction"
      enum:
        - "sum"
        - "sum_distinct"
        - "avg"
        - "min"
        - "max"
        - "count"
        - "count_distinct"
        - "collect_list"
        - "collect_set"
        - "first"
        - "last"
      description: "Aggregate function."
    "Aggregator":
      type: "object"
      properties:
        "agg_func": {"$ref": "#/components/schemas/AggregateFunction"}
        "col_name":
          type: "string"
          title: "Col Name"
          pattern: "^[A-Za-z0-9_#]*$"
      title: "Aggregator"
      required:
        - "agg_func"
        - "col_name"
      description: "Aggregator model."
    "AppendConfig":
      type: "object"
      properties:
        "mode":
          type: "string"
          title: "Mode"
          const: "append"
      title: "AppendConfig"
      required:
        - "mode"
      description: "Append configuration."
    "ApplicationDataProductParentEntity":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "name":
          type: "string"
          title: "Name"
        "table":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Table"
      title: "ApplicationDataProductParentEntity"
      required:
        - "identifier"
        - "name"
    "ApplicationEntity":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "name":
          type: "string"
          title: "Name"
        "is_system":
          type: "boolean"
          title: "Is System"
          default: false
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "state": {"$ref": "#/components/schemas/backend__data__schema__common__EntityState"}
        "purpose":
          type: "string"
          title: "Purpose"
        "accountable_person": {"$ref": "#/components/schemas/Person"}
        "business_impact":
          type: "string"
          title: "Business Impact"
      title: "ApplicationEntity"
      required:
        - "identifier"
        - "urn"
        - "name"
        - "description"
        - "label"
        - "created_at"
        - "state"
        - "purpose"
        - "accountable_person"
        - "business_impact"
      description: "Application entity."
    "ApplicationEntityList":
      type: "object"
      properties:
        "entities":
          type: "array"
          items: {"$ref": "#/components/schemas/ApplicationEntityWithOwner"}
          title: "Entities"
      title: "ApplicationEntityList"
      required:
        - "entities"
      description: "Application entity list."
    "ApplicationEntityWithOwner":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "name":
          type: "string"
          title: "Name"
        "is_system":
          type: "boolean"
          title: "Is System"
          default: false
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "state": {"$ref": "#/components/schemas/backend__data__schema__common__EntityState"}
        "owner":
          anyOf:
            - type: "string"
              maxLength: 255
            - type: "null"
          title: "Owner"
        "purpose":
          type: "string"
          title: "Purpose"
        "accountable_person": {"$ref": "#/components/schemas/Person"}
        "business_impact":
          type: "string"
          title: "Business Impact"
      title: "ApplicationEntityWithOwner"
      required:
        - "identifier"
        - "urn"
        - "name"
        - "description"
        - "label"
        - "created_at"
        - "state"
        - "purpose"
        - "accountable_person"
        - "business_impact"
      description: "Application entity with owner."
    "ApplicationForQueryEntity":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "name":
          type: "string"
          title: "Name"
        "data_products":
          type: "array"
          items: {"$ref": "#/components/schemas/ApplicationDataProductParentEntity"}
          title: "Data Products"
      title: "ApplicationForQueryEntity"
      required:
        - "identifier"
        - "name"
        - "data_products"
    "ApplicationForQueryList":
      type: "object"
      properties:
        "applications":
          type: "array"
          items: {"$ref": "#/components/schemas/ApplicationForQueryEntity"}
          title: "Applications"
      title: "ApplicationForQueryList"
      required:
        - "applications"
    "ApplicationResponse":
      type: "object"
      properties:
        "entity": {"$ref": "#/components/schemas/ApplicationEntityWithOwner"}
        "entity_info":
          anyOf:
            - {"$ref": "#/components/schemas/EntityInfo"}
            - type: "null"
        "links": {"$ref": "#/components/schemas/EntityLinks"}
      title: "ApplicationResponse"
      required:
        - "entity"
        - "links"
      description: "Application response."
    "Assignee":
      type: "object"
      properties:
        "email":
          type: "string"
          title: "Email"
          format: "email"
        "full_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Name"
        "role":
          type: "string"
          title: "Role"
      title: "Assignee"
      required:
        - "email"
        - "role"
    "Body_update_compute_file_api_data_data_product_compute_file_put":
      type: "object"
      properties:
        "compute_file":
          type: "string"
          title: "Compute File"
          format: "binary"
      title: "Body_update_compute_file_api_data_data_product_compute_file_put"
      required:
        - "compute_file"
    "BuilderInput":
      type: "object"
      properties:
        "input_type":
          type: "string"
          title: "Input Type"
          enum:
            - "data_product"
            - "data_object"
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "preview_limit":
          type: "integer"
          title: "Preview Limit"
          default: 10
      title: "BuilderInput"
      required:
        - "input_type"
        - "identifier"
      description: "BuilderInput model."
    "BuilderPipeline-Input":
      type: "object"
      properties:
        "config": {"$ref": "#/components/schemas/OptionalSparkConfig"}
        "inputs":
          type: "object"
          patternProperties:
            "^input_[a-f0-9_]*$": {"$ref": "#/components/schemas/BuilderInput"}
          title: "Inputs"
        "transformations":
          type: "array"
          items:
            oneOf:
              - {"$ref": "#/components/schemas/AddCurrentTimestampTransformation"}
              - {"$ref": "#/components/schemas/CastTransformation-Input"}
              - {"$ref": "#/components/schemas/ChainUnionTransformation"}
              - {"$ref": "#/components/schemas/CoalesceTransformation"}
              - {"$ref": "#/components/schemas/ConcatenateTransformation"}
              - {"$ref": "#/components/schemas/CustomPythonTransformation"}
              - {"$ref": "#/components/schemas/DeduplicateKeepTransformation"}
              - {"$ref": "#/components/schemas/DeduplicateTransformation"}
              - {"$ref": "#/components/schemas/NullIfExpressionTransformation"}
              - {"$ref": "#/components/schemas/FilterWithConditionTransformation"}
              - {"$ref": "#/components/schemas/GroupByTransformation-Input"}
              - {"$ref": "#/components/schemas/PivotTransformation-Input"}
              - {"$ref": "#/components/schemas/UnpivotTransformation"}
              - {"$ref": "#/components/schemas/JoinRenameSelectTransformation-Input"}
              - {"$ref": "#/components/schemas/JoinTransformation-Input"}
              - {"$ref": "#/components/schemas/LimitRowsTransformation"}
              - {"$ref": "#/components/schemas/MaskValuesTransformation-Input"}
              - {"$ref": "#/components/schemas/RenameColumnTransformation"}
              - {"$ref": "#/components/schemas/ReplaceTransformation"}
              - {"$ref": "#/components/schemas/ReplaceChainTransformation"}
              - {"$ref": "#/components/schemas/SelectColumnsTransformation"}
              - {"$ref": "#/components/schemas/SelectExpressionTransformation"}
              - {"$ref": "#/components/schemas/SortTransformation-Input"}
              - {"$ref": "#/components/schemas/TimestampToUnixtimeTransformation-Input"}
              - {"$ref": "#/components/schemas/ToJsonStructTransformation"}
              - {"$ref": "#/components/schemas/ToJsonTransformation"}
              - {"$ref": "#/components/schemas/ToStructTransformation"}
              - {"$ref": "#/components/schemas/UnionTransformation"}
              - {"$ref": "#/components/schemas/UnixtimeToTimestampTransformation"}
              - {"$ref": "#/components/schemas/RepartitionTransformation"}
              - {"$ref": "#/components/schemas/CoalescePartitionsTransformation"}
              - {"$ref": "#/components/schemas/RunSQLTransformation"}
              - {"$ref": "#/components/schemas/RegressionPredictionTransformation"}
              - {"$ref": "#/components/schemas/RegressionTrainingTransformation"}
              - {"$ref": "#/components/schemas/PersistTransformation"}
              - {"$ref": "#/components/schemas/RegressionPredictionTransformationLSTM"}
              - {"$ref": "#/components/schemas/RegressionTrainingTransformationLSTM"}
            discriminator:
              propertyName: "transform"
              mapping:
                "add_current_timestamp": "#/components/schemas/AddCurrentTimestampTransformation"
                "cast": "#/components/schemas/CastTransformation-Input"
                "chain_union": "#/components/schemas/ChainUnionTransformation"
                "coalesce": "#/components/schemas/CoalesceTransformation"
                "coalesce_partitions": "#/components/schemas/CoalescePartitionsTransformation"
                "concatenate": "#/components/schemas/ConcatenateTransformation"
                "custom_python": "#/components/schemas/CustomPythonTransformation"
                "deduplicate": "#/components/schemas/DeduplicateTransformation"
                "deduplicate_with_keep": "#/components/schemas/DeduplicateKeepTransformation"
                "filter_with_condition": "#/components/schemas/FilterWithConditionTransformation"
                "group_by": "#/components/schemas/GroupByTransformation-Input"
                "join": "#/components/schemas/JoinTransformation-Input"
                "join_rename_select": "#/components/schemas/JoinRenameSelectTransformation-Input"
                "limit_rows": "#/components/schemas/LimitRowsTransformation"
                "mask_values": "#/components/schemas/MaskValuesTransformation-Input"
                "null_if_expression": "#/components/schemas/NullIfExpressionTransformation"
                "persist": "#/components/schemas/PersistTransformation"
                "pivot": "#/components/schemas/PivotTransformation-Input"
                "regression_prediction": "#/components/schemas/RegressionPredictionTransformation"
                "regression_prediction_lstm": "#/components/schemas/RegressionPredictionTransformationLSTM"
                "regression_training": "#/components/schemas/RegressionTrainingTransformation"
                "regression_training_lstm": "#/components/schemas/RegressionTrainingTransformationLSTM"
                "rename_column": "#/components/schemas/RenameColumnTransformation"
                "repartition": "#/components/schemas/RepartitionTransformation"
                "replace": "#/components/schemas/ReplaceTransformation"
                "replace_chain": "#/components/schemas/ReplaceChainTransformation"
                "run_sql": "#/components/schemas/RunSQLTransformation"
                "select_columns": "#/components/schemas/SelectColumnsTransformation"
                "select_expression": "#/components/schemas/SelectExpressionTransformation"
                "sort": "#/components/schemas/SortTransformation-Input"
                "timestamp_to_unixtime": "#/components/schemas/TimestampToUnixtimeTransformation-Input"
                "to_json": "#/components/schemas/ToJsonTransformation"
                "to_json_struct": "#/components/schemas/ToJsonStructTransformation"
                "to_struct": "#/components/schemas/ToStructTransformation"
                "union": "#/components/schemas/UnionTransformation"
                "unixtime_to_timestamp": "#/components/schemas/UnixtimeToTimestampTransformation"
                "unpivot": "#/components/schemas/UnpivotTransformation"
          title: "Transformations"
          minItems: 1
        "finalisers": {"$ref": "#/components/schemas/Finalisers-Input"}
        "preview":
          type: "boolean"
          title: "Preview"
          default: false
      title: "BuilderPipeline"
      required:
        - "config"
        - "inputs"
        - "transformations"
        - "finalisers"
      description: "BuilderPipeline model."
    "BuilderPipeline-Output":
      type: "object"
      properties:
        "config": {"$ref": "#/components/schemas/OptionalSparkConfig"}
        "inputs":
          type: "object"
          patternProperties:
            "^input_[a-f0-9_]*$": {"$ref": "#/components/schemas/BuilderInput"}
          title: "Inputs"
        "transformations":
          type: "array"
          items:
            oneOf:
              - {"$ref": "#/components/schemas/AddCurrentTimestampTransformation"}
              - {"$ref": "#/components/schemas/CastTransformation-Output"}
              - {"$ref": "#/components/schemas/ChainUnionTransformation"}
              - {"$ref": "#/components/schemas/CoalesceTransformation"}
              - {"$ref": "#/components/schemas/ConcatenateTransformation"}
              - {"$ref": "#/components/schemas/CustomPythonTransformation"}
              - {"$ref": "#/components/schemas/DeduplicateKeepTransformation"}
              - {"$ref": "#/components/schemas/DeduplicateTransformation"}
              - {"$ref": "#/components/schemas/NullIfExpressionTransformation"}
              - {"$ref": "#/components/schemas/FilterWithConditionTransformation"}
              - {"$ref": "#/components/schemas/GroupByTransformation-Output"}
              - {"$ref": "#/components/schemas/PivotTransformation-Output"}
              - {"$ref": "#/components/schemas/UnpivotTransformation"}
              - {"$ref": "#/components/schemas/JoinRenameSelectTransformation-Output"}
              - {"$ref": "#/components/schemas/JoinTransformation-Output"}
              - {"$ref": "#/components/schemas/LimitRowsTransformation"}
              - {"$ref": "#/components/schemas/MaskValuesTransformation-Output"}
              - {"$ref": "#/components/schemas/RenameColumnTransformation"}
              - {"$ref": "#/components/schemas/ReplaceTransformation"}
              - {"$ref": "#/components/schemas/ReplaceChainTransformation"}
              - {"$ref": "#/components/schemas/SelectColumnsTransformation"}
              - {"$ref": "#/components/schemas/SelectExpressionTransformation"}
              - {"$ref": "#/components/schemas/SortTransformation-Output"}
              - {"$ref": "#/components/schemas/TimestampToUnixtimeTransformation-Output"}
              - {"$ref": "#/components/schemas/ToJsonStructTransformation"}
              - {"$ref": "#/components/schemas/ToJsonTransformation"}
              - {"$ref": "#/components/schemas/ToStructTransformation"}
              - {"$ref": "#/components/schemas/UnionTransformation"}
              - {"$ref": "#/components/schemas/UnixtimeToTimestampTransformation"}
              - {"$ref": "#/components/schemas/RepartitionTransformation"}
              - {"$ref": "#/components/schemas/CoalescePartitionsTransformation"}
              - {"$ref": "#/components/schemas/RunSQLTransformation"}
              - {"$ref": "#/components/schemas/RegressionPredictionTransformation"}
              - {"$ref": "#/components/schemas/RegressionTrainingTransformation"}
              - {"$ref": "#/components/schemas/PersistTransformation"}
              - {"$ref": "#/components/schemas/RegressionPredictionTransformationLSTM"}
              - {"$ref": "#/components/schemas/RegressionTrainingTransformationLSTM"}
            discriminator:
              propertyName: "transform"
              mapping:
                "add_current_timestamp": "#/components/schemas/AddCurrentTimestampTransformation"
                "cast": "#/components/schemas/CastTransformation-Output"
                "chain_union": "#/components/schemas/ChainUnionTransformation"
                "coalesce": "#/components/schemas/CoalesceTransformation"
                "coalesce_partitions": "#/components/schemas/CoalescePartitionsTransformation"
                "concatenate": "#/components/schemas/ConcatenateTransformation"
                "custom_python": "#/components/schemas/CustomPythonTransformation"
                "deduplicate": "#/components/schemas/DeduplicateTransformation"
                "deduplicate_with_keep": "#/components/schemas/DeduplicateKeepTransformation"
                "filter_with_condition": "#/components/schemas/FilterWithConditionTransformation"
                "group_by": "#/components/schemas/GroupByTransformation-Output"
                "join": "#/components/schemas/JoinTransformation-Output"
                "join_rename_select": "#/components/schemas/JoinRenameSelectTransformation-Output"
                "limit_rows": "#/components/schemas/LimitRowsTransformation"
                "mask_values": "#/components/schemas/MaskValuesTransformation-Output"
                "null_if_expression": "#/components/schemas/NullIfExpressionTransformation"
                "persist": "#/components/schemas/PersistTransformation"
                "pivot": "#/components/schemas/PivotTransformation-Output"
                "regression_prediction": "#/components/schemas/RegressionPredictionTransformation"
                "regression_prediction_lstm": "#/components/schemas/RegressionPredictionTransformationLSTM"
                "regression_training": "#/components/schemas/RegressionTrainingTransformation"
                "regression_training_lstm": "#/components/schemas/RegressionTrainingTransformationLSTM"
                "rename_column": "#/components/schemas/RenameColumnTransformation"
                "repartition": "#/components/schemas/RepartitionTransformation"
                "replace": "#/components/schemas/ReplaceTransformation"
                "replace_chain": "#/components/schemas/ReplaceChainTransformation"
                "run_sql": "#/components/schemas/RunSQLTransformation"
                "select_columns": "#/components/schemas/SelectColumnsTransformation"
                "select_expression": "#/components/schemas/SelectExpressionTransformation"
                "sort": "#/components/schemas/SortTransformation-Output"
                "timestamp_to_unixtime": "#/components/schemas/TimestampToUnixtimeTransformation-Output"
                "to_json": "#/components/schemas/ToJsonTransformation"
                "to_json_struct": "#/components/schemas/ToJsonStructTransformation"
                "to_struct": "#/components/schemas/ToStructTransformation"
                "union": "#/components/schemas/UnionTransformation"
                "unixtime_to_timestamp": "#/components/schemas/UnixtimeToTimestampTransformation"
                "unpivot": "#/components/schemas/UnpivotTransformation"
          title: "Transformations"
          minItems: 1
        "finalisers": {"$ref": "#/components/schemas/Finalisers-Output"}
        "preview":
          type: "boolean"
          title: "Preview"
          default: false
      title: "BuilderPipeline"
      required:
        - "config"
        - "inputs"
        - "transformations"
        - "finalisers"
      description: "BuilderPipeline model."
    "BuilderPipelineState":
      type: "object"
      properties:
        "state":
          anyOf:
            - type: "array"
              items: {"$ref": "#/components/schemas/PreviewState"}
            - type: "null"
          title: "State"
      title: "BuilderPipelineState"
      required:
        - "state"
      description: "BuilderPipelineState model."
    "CSVParams":
      type: "object"
      properties:
        "data_object_type":
          type: "string"
          title: "Data Object Type"
          const: "csv"
        "path":
          anyOf:
            - type: "string"
            - type: "array"
              items:
                type: "string"
          title: "Path"
        "has_header":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Has Header"
        "delimiter":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Delimiter"
        "quote_char":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Quote Char"
        "escape_char":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Escape Char"
        "multi_line":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Multi Line"
      title: "CSVParams"
      required:
        - "data_object_type"
        - "path"
      description: "CSV params."
    "CastColumn":
      type: "object"
      properties:
        "column":
          type: "string"
          title: "Column"
          pattern: "^[A-Za-z0-9_#]*$"
        "data_type": {"$ref": "#/components/schemas/SparkDataType"}
        "kwargs":
          anyOf:
            - type: "object"
              patternProperties:
                "^[a-z][a-z0-9_]*$":
                  anyOf:
                    - type: "integer"
                    - type: "number"
                    - type: "boolean"
                    - type: "string"
            - type: "null"
          title: "Kwargs"
      title: "CastColumn"
      required:
        - "column"
        - "data_type"
      description: "CastColumn model."
    "CastTransformation-Input":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "cast"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "changes":
          type: "array"
          items: {"$ref": "#/components/schemas/CastColumn"}
          title: "Changes"
          minItems: 1
      title: "CastTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "changes"
      description: "CastTransformation model."
    "CastTransformation-Output":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "cast"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "changes":
          type: "array"
          items: {"$ref": "#/components/schemas/CastColumn"}
          title: "Changes"
          minItems: 1
      title: "CastTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "changes"
      description: "CastTransformation model."
    "ChainUnionTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "chain_union"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "others":
          type: "array"
          items:
            type: "string"
            pattern: "^[a-z][a-z0-9_]*$"
          title: "Others"
          minItems: 1
        "allow_missing_columns":
          type: "boolean"
          title: "Allow Missing Columns"
          default: false
      title: "ChainUnionTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "others"
      description: "Chain union transformation."
    "ChangePassword":
      type: "object"
      properties:
        "current_password":
          type: "string"
          title: "Current Password"
          minLength: 1
        "new_password":
          type: "string"
          title: "New Password"
          minLength: 8
      title: "ChangePassword"
      required:
        - "current_password"
        - "new_password"
    "Classification":
      type: "object"
      properties:
        "id":
          type: "integer"
          title: "Id"
        "name":
          type: "string"
          title: "Name"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "system_defined":
          type: "boolean"
          title: "System Defined"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "updated_at":
          type: "string"
          title: "Updated At"
          format: "date-time"
      title: "Classification"
      required:
        - "id"
        - "name"
        - "system_defined"
        - "created_at"
        - "updated_at"
      description: "Classification model."
    "ClassificationListResponse":
      type: "object"
      properties:
        "classifications":
          type: "array"
          items: {"$ref": "#/components/schemas/Classification"}
          title: "Classifications"
      title: "ClassificationListResponse"
      required:
        - "classifications"
      description: "Classification list response schema."
    "ClassificationRegexRecognizer":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
        "description":
          type: "string"
          title: "Description"
        "label":
          type: "string"
          title: "Label"
        "patterns":
          type: "array"
          items:
            type: "string"
          title: "Patterns"
      title: "ClassificationRegexRecognizer"
      required:
        - "name"
        - "description"
        - "label"
        - "patterns"
      description: "Classification regex recognizer."
    "ClassificationResult":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "config":
          type: "object"
          title: "Config"
          additionalProperties: true
        "field":
          type: "string"
          title: "Field"
        "label":
          type: "string"
          title: "Label"
        "resolved":
          type: "boolean"
          title: "Resolved"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "updated_at":
          type: "string"
          title: "Updated At"
          format: "date-time"
      title: "ClassificationResult"
      required:
        - "identifier"
        - "config"
        - "field"
        - "label"
        - "resolved"
        - "created_at"
        - "updated_at"
      description: "Classification result."
    "ClassificationResults":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/ClassificationResult"}
          title: "Results"
      title: "ClassificationResults"
      required:
        - "results"
      description: "Classification results."
    "ClassificationRule":
      type: "object"
      properties:
        "model":
          type: "string"
          title: "Model"
        "excluded_columns":
          type: "array"
          items:
            type: "string"
          title: "Excluded Columns"
        "regex_recognizers":
          type: "array"
          items: {"$ref": "#/components/schemas/ClassificationRegexRecognizer"}
          title: "Regex Recognizers"
      title: "ClassificationRule"
      required:
        - "model"
        - "excluded_columns"
        - "regex_recognizers"
      description: "Classification rule."
    "CoalesceColumn":
      type: "object"
      properties:
        "columns":
          type: "array"
          items:
            type: "string"
            pattern: "^[A-Za-z0-9_#]*$"
          title: "Columns"
        "alias":
          type: "string"
          title: "Alias"
          pattern: "^[A-Za-z0-9_#]*$"
      title: "CoalesceColumn"
      required:
        - "columns"
        - "alias"
      description: "Coalesce Column model."
    "CoalescePartitionsTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "coalesce_partitions"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "partition_num":
          type: "integer"
          title: "Partition Num"
          minimum: 1
          default: 1
      title: "CoalescePartitionsTransformation"
      required:
        - "transform"
        - "input"
        - "output"
      description: "Coalesce partitions transformation."
    "CoalesceTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "coalesce"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "changes":
          type: "array"
          items: {"$ref": "#/components/schemas/CoalesceColumn"}
          title: "Changes"
          minItems: 1
      title: "CoalesceTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "changes"
      description: "Coalesce transformation."
    "ColumnType":
      type: "string"
      title: "ColumnType"
      enum:
        - "ARRAY"
        - "BIGINT"
        - "BOOLEAN"
        - "BYTE"
        - "CHAR"
        - "DATE"
        - "DECIMAL"
        - "DOUBLE"
        - "INTEGER"
        - "JSON"
        - "MAP"
        - "REAL"
        - "SMALLINT"
        - "TIMESTAMP"
        - "TIMESTAMPTZ"
        - "UUID"
        - "VARBINARY"
        - "VARCHAR"
      description: "Column type."
    "ComparisonOperator":
      type: "string"
      title: "ComparisonOperator"
      enum:
        - "eq"
        - "neq"
      description: "Comparison operator."
    "Compute":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "metadata":
          anyOf:
            - type: "object"
              additionalProperties: true
            - type: "null"
          title: "Metadata"
      title: "Compute"
      required:
        - "identifier"
      description: "Compute."
    "ComputeJobHistory":
      type: "object"
      properties:
        "jobs":
          type: "array"
          items: {"$ref": "#/components/schemas/JobHistory"}
          title: "Jobs"
      title: "ComputeJobHistory"
      required:
        - "jobs"
      description: "Compute job history."
    "ComputeJobType":
      type: "string"
      title: "ComputeJobType"
      enum:
        - "dq"
        - "prof"
      description: "Compute job suffix."
    "ComputeLogList":
      type: "object"
      properties:
        "logs":
          type: "array"
          items:
            type: "string"
          title: "Logs"
      title: "ComputeLogList"
      required:
        - "logs"
      description: "Compute log list."
    "ComputeResponse":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "name":
          type: "string"
          title: "Name"
        "is_system":
          type: "boolean"
          title: "Is System"
          default: false
        "status":
          oneOf:
            - {"$ref": "#/components/schemas/RunStatus"}
            - {"$ref": "#/components/schemas/ScheduledStatus"}
          discriminator:
            propertyName: "run_type"
            mapping:
              "schedule": "#/components/schemas/ScheduledStatus"
              "single": "#/components/schemas/RunStatus"
          title: "Status"
      title: "ComputeResponse"
      required:
        - "identifier"
        - "urn"
        - "name"
        - "status"
      description: "Compute response."
    "ComputeRunHistory":
      type: "object"
      properties:
        "runs":
          type: "array"
          items: {"$ref": "#/components/schemas/RunHistory"}
          title: "Runs"
      title: "ComputeRunHistory"
      required:
        - "runs"
      description: "Compute run history."
    "ConcatenateTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "concatenate"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "columns":
          type: "array"
          items:
            type: "string"
            pattern: "^[A-Za-z0-9_#]*$"
          title: "Columns"
          minItems: 1
        "alias":
          type: "string"
          title: "Alias"
          pattern: "^[A-Za-z0-9_#]*$"
        "separator":
          type: "string"
          title: "Separator"
          pattern: "^[\\t\\s,;|]$"
          default: ","
      title: "ConcatenateTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "columns"
        - "alias"
      description: "ConcatenateTransformation model."
    "ConnectionSecret":
      type: "object"
      properties:
        "env_key":
          type: "string"
          title: "Env Key"
          maxLength: 250
          minLength: 1
          pattern: "^[A-Z][A-Z0-9_]*$"
      title: "ConnectionSecret"
      required:
        - "env_key"
      description: "Connection secret."
    "ConnectorParquetParams":
      type: "object"
      properties:
        "data_object_type":
          type: "string"
          title: "Data Object Type"
          const: "parquet"
        "mode": {"$ref": "#/components/schemas/DataObjectMode", "default": "overwrite"}
      title: "ConnectorParquetParams"
      required:
        - "data_object_type"
      description: "Connector parquet params."
    "ConsumeFormat":
      type: "string"
      title: "ConsumeFormat"
      enum:
        - "json"
        - "csv"
    "CreateApplicationRequest":
      type: "object"
      properties:
        "entity": {"$ref": "#/components/schemas/backend__data__schema__application__CreateEntity"}
        "entity_info":
          anyOf:
            - {"$ref": "#/components/schemas/EntityInfo"}
            - type: "null"
        "parent":
          anyOf:
            - {"$ref": "#/components/schemas/EntityParent"}
            - type: "null"
      title: "CreateApplicationRequest"
      required:
        - "entity"
      description: "Create application request."
    "CreateClassificationRequest":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
          maxLength: 50
          minLength: 3
          pattern: "^[a-z][a-z0-9_-]*$"
          description: "Classification name (lowercase letters, numbers, hyphens, underscores only)"
        "description":
          anyOf:
            - type: "string"
              maxLength: 500
            - type: "null"
          title: "Description"
          description: "Classification description"
      title: "CreateClassificationRequest"
      required:
        - "name"
      description: "Create classification request schema."
    "CreateDataObjectRequest":
      type: "object"
      properties:
        "entity": {"$ref": "#/components/schemas/backend__data__schema__common__CreateEntity"}
        "entity_info":
          anyOf:
            - {"$ref": "#/components/schemas/EntityInfo"}
            - type: "null"
        "parent":
          anyOf:
            - {"$ref": "#/components/schemas/EntityParent"}
            - type: "null"
        "configuration":
          anyOf:
            - oneOf:
                - {"$ref": "#/components/schemas/TableParams"}
                - {"$ref": "#/components/schemas/QueryParams"}
                - {"$ref": "#/components/schemas/CSVParams"}
                - {"$ref": "#/components/schemas/SyntheticParams"}
                - {"$ref": "#/components/schemas/DataProductParams"}
                - {"$ref": "#/components/schemas/ConnectorParquetParams"}
              discriminator:
                propertyName: "data_object_type"
                mapping:
                  "csv": "#/components/schemas/CSVParams"
                  "data_product": "#/components/schemas/DataProductParams"
                  "parquet": "#/components/schemas/ConnectorParquetParams"
                  "query": "#/components/schemas/QueryParams"
                  "synthetic": "#/components/schemas/SyntheticParams"
                  "table": "#/components/schemas/TableParams"
            - type: "null"
          title: "Configuration"
      title: "CreateDataObjectRequest"
      required:
        - "entity"
      description: "Create data object request."
    "CreateDataProductRequest":
      type: "object"
      properties:
        "entity": {"$ref": "#/components/schemas/backend__data__schema__common__CreateEntity"}
        "entity_info":
          anyOf:
            - {"$ref": "#/components/schemas/EntityInfo"}
            - type: "null"
        "parent":
          anyOf:
            - {"$ref": "#/components/schemas/EntityParent"}
            - type: "null"
        "host_mesh_identifier":
          anyOf:
            - type: "string"
              format: "uuid"
            - type: "null"
          title: "Host Mesh Identifier"
      title: "CreateDataProductRequest"
      required:
        - "entity"
      description: "Create data product entity request"
    "CreateDataSourceRequest":
      type: "object"
      properties:
        "entity": {"$ref": "#/components/schemas/backend__data__schema__common__CreateEntity"}
        "entity_info":
          anyOf:
            - {"$ref": "#/components/schemas/EntityInfo"}
            - type: "null"
        "parent":
          anyOf:
            - {"$ref": "#/components/schemas/EntityParent"}
            - type: "null"
        "connection":
          anyOf:
            - oneOf:
                - {"$ref": "#/components/schemas/DatabaseDataSourceConnectionDetails"}
                - {"$ref": "#/components/schemas/S3DataSourceConnectionDetails"}
                - {"$ref": "#/components/schemas/SyntheticDataSourceConnectionDetails"}
              discriminator:
                propertyName: "connection_type"
                mapping:
                  "database": "#/components/schemas/DatabaseDataSourceConnectionDetails"
                  "s3": "#/components/schemas/S3DataSourceConnectionDetails"
                  "synthetic": "#/components/schemas/SyntheticDataSourceConnectionDetails"
            - type: "null"
          title: "Connection"
        "secrets":
          anyOf:
            - type: "object"
              additionalProperties:
                type: "string"
            - type: "null"
          title: "Secrets"
      title: "CreateDataSourceRequest"
      required:
        - "entity"
      description: "Create data source request."
    "CreateDataSystemRequest":
      type: "object"
      properties:
        "entity": {"$ref": "#/components/schemas/backend__data__schema__data_system__CreateEntity"}
        "entity_info":
          anyOf:
            - {"$ref": "#/components/schemas/EntityInfo"}
            - type: "null"
        "parent":
          anyOf:
            - {"$ref": "#/components/schemas/EntityParent"}
            - type: "null"
      title: "CreateDataSystemRequest"
      required:
        - "entity"
      description: "Create data system request."
    "CreateFieldDefinition":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "primary":
          type: "boolean"
          title: "Primary"
          default: false
        "optional":
          type: "boolean"
          title: "Optional"
          default: false
        "data_type": {"$ref": "#/components/schemas/FieldDataType"}
        "classification_name":
          anyOf:
            - type: "string"
              pattern: "^[a-z][a-z0-9_-]*$"
            - type: "null"
          title: "Classification Name"
          description: "Classification name"
        "sensitivity_names":
          anyOf:
            - type: "array"
              items:
                type: "string"
                pattern: "^[a-z][a-z0-9_-]*$"
            - type: "null"
          title: "Sensitivity Names"
          description: "List of sensitivity names"
      title: "CreateFieldDefinition"
      required:
        - "name"
        - "data_type"
      description: "Create field definition."
    "CreateMeshEntity":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
          pattern: "^[a-zA-Z_][a-zA-Z0-9_\\- ]{2,249}$"
        "entity_type": {"$ref": "#/components/schemas/EntityType"}
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "purpose":
          type: "string"
          title: "Purpose"
        "assignees":
          type: "array"
          items: {"$ref": "#/components/schemas/Assignee"}
          title: "Assignees"
        "security_policy":
          type: "array"
          items:
            type: "string"
          title: "Security Policy"
      title: "CreateMeshEntity"
      required:
        - "name"
        - "entity_type"
        - "label"
        - "description"
        - "purpose"
        - "assignees"
        - "security_policy"
      description: "Create mesh entity."
    "CreateMeshRequest":
      type: "object"
      properties:
        "entity": {"$ref": "#/components/schemas/CreateMeshEntity"}
        "entity_info":
          anyOf:
            - {"$ref": "#/components/schemas/EntityInfo"}
            - type: "null"
        "parent":
          anyOf:
            - {"$ref": "#/components/schemas/EntityParent"}
            - type: "null"
      title: "CreateMeshRequest"
      required:
        - "entity"
      description: "Create mesh request."
    "CreateOrchestratorWorkflow":
      type: "object"
      properties:
        "run_type":
          type: "string"
          title: "Run Type"
        "data_product_identifier":
          type: "string"
          title: "Data Product Identifier"
          format: "uuid"
        "created_by":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Created By"
        "name":
          type: "string"
          title: "Name"
      title: "CreateOrchestratorWorkflow"
      required:
        - "run_type"
        - "data_product_identifier"
        - "created_by"
        - "name"
    "CreateOrganization":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
          maxLength: 50
          minLength: 3
          pattern: "^[a-z][a-z0-9_-]*$"
        "display_name":
          type: "string"
          title: "Display Name"
          maxLength: 255
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "owner":
          type: "string"
          title: "Owner"
          maxLength: 255
      title: "CreateOrganization"
      required:
        - "name"
        - "display_name"
        - "description"
        - "owner"
    "CreatePolicy":
      type: "object"
      properties:
        "version":
          type: "string"
          title: "Version"
          default: "2022-10-01"
        "name":
          type: "string"
          title: "Name"
        "statements":
          type: "array"
          items: {"$ref": "#/components/schemas/Statement"}
          title: "Statements"
          minItems: 1
      title: "CreatePolicy"
      required:
        - "name"
        - "statements"
    "CreateSensitivityRequest":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
          maxLength: 50
          minLength: 3
          pattern: "^[a-z][a-z0-9_-]*$"
          description: "Sensitivity name (lowercase letters, numbers, hyphens, underscores only)"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
      title: "CreateSensitivityRequest"
      required:
        - "name"
      description: "Request schema for creating a sensitivity."
    "CreateUpdateRole":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
          pattern: "^[a-zA-Z0-9_][a-zA-Z0-9_\\- ]{0,254}$"
        "description":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Description"
      title: "CreateUpdateRole"
      required:
        - "name"
    "CreateUser":
      type: "object"
      properties:
        "username":
          type: "string"
          title: "Username"
          maxLength: 255
          minLength: 1
        "first_name":
          type: "string"
          title: "First Name"
          maxLength: 255
          minLength: 1
        "last_name":
          type: "string"
          title: "Last Name"
          maxLength: 255
          minLength: 1
        "email":
          type: "string"
          title: "Email"
          format: "email"
        "password":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Password"
      title: "CreateUser"
      required:
        - "username"
        - "first_name"
        - "last_name"
        - "email"
    "CreateUserResponse":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "first_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "First Name"
        "last_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Name"
        "email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email"
        "username":
          type: "string"
          title: "Username"
        "is_system":
          type: "boolean"
          title: "Is System"
        "enabled":
          type: "boolean"
          title: "Enabled"
        "is_admin":
          type: "boolean"
          title: "Is Admin"
          default: false
        "organization":
          type: "string"
          title: "Organization"
      title: "CreateUserResponse"
      required:
        - "identifier"
        - "urn"
        - "first_name"
        - "last_name"
        - "email"
        - "username"
        - "is_system"
        - "enabled"
        - "organization"
    "CustomPythonTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "custom_python"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "others":
          type: "array"
          items:
            type: "string"
            pattern: "^[a-z][a-z0-9_]*$"
          title: "Others"
        "code":
          type: "string"
          title: "Code"
      title: "CustomPythonTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "others"
        - "code"
      description: "Custom python transformation."
    "DPComputeLineage":
      type: "object"
      properties:
        "ok":
          type: "boolean"
          title: "Ok"
          default: true
        "directed":
          type: "boolean"
          title: "Directed"
          default: true
        "multigraph":
          type: "boolean"
          title: "Multigraph"
          default: false
        "graph":
          type: "object"
          title: "Graph"
          additionalProperties: true
        "nodes":
          type: "array"
          items: {"$ref": "#/components/schemas/DPLineageComputeNode"}
          title: "Nodes"
        "links":
          type: "array"
          items: {"$ref": "#/components/schemas/DPLineageLink"}
          title: "Links"
      title: "DPComputeLineage"
      description: "DP spark lineage."
    "DPLineage":
      type: "object"
      properties:
        "ok":
          type: "boolean"
          title: "Ok"
          default: true
        "directed":
          type: "boolean"
          title: "Directed"
          default: true
        "multigraph":
          type: "boolean"
          title: "Multigraph"
          default: false
        "graph":
          type: "object"
          title: "Graph"
          additionalProperties: true
        "nodes":
          type: "array"
          items:
            oneOf:
              - {"$ref": "#/components/schemas/DPLineageDatasetNode"}
              - {"$ref": "#/components/schemas/DPLineageJobNode"}
            discriminator:
              propertyName: "type"
              mapping:
                "dataset": "#/components/schemas/DPLineageDatasetNode"
                "job": "#/components/schemas/DPLineageJobNode"
          title: "Nodes"
        "links":
          type: "array"
          items: {"$ref": "#/components/schemas/DPLineageLink"}
          title: "Links"
      title: "DPLineage"
      description: "DP lineage."
    "DPLineageComputeNode":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
        "type":
          type: "string"
          title: "Type"
          enum:
            - "Read"
            - "Transform"
            - "Write"
        "data": {"$ref": "#/components/schemas/DPLineageComputeTransformationData"}
      title: "DPLineageComputeNode"
      required:
        - "id"
        - "type"
        - "data"
      description: "DP lineage spark node."
    "DPLineageComputeTransformationData":
      type: "object"
      properties:
        "uuid":
          type: "string"
          title: "Uuid"
          format: "uuid4"
        "plan_uuid":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Plan Uuid"
        "job_uuid":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Job Uuid"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "updated_at":
          type: "string"
          title: "Updated At"
          format: "date-time"
        "raw":
          anyOf:
            - type: "object"
              additionalProperties: true
            - type: "null"
          title: "Raw"
        "checksum":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum"
        "type":
          type: "string"
          title: "Type"
        "identifier":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Identifier"
        "name":
          type: "string"
          title: "Name"
        "params":
          anyOf:
            - type: "object"
              additionalProperties: true
            - type: "null"
          title: "Params"
        "meta":
          anyOf:
            - type: "object"
              additionalProperties: true
            - type: "null"
          title: "Meta"
        "run_uuid":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Run Uuid"
      title: "DPLineageComputeTransformationData"
      required:
        - "uuid"
        - "created_at"
        - "updated_at"
        - "type"
        - "name"
      description: "DP lineage spark transformation data."
    "DPLineageDatasetData":
      type: "object"
      properties:
        "uuid":
          type: "string"
          title: "Uuid"
          format: "uuid4"
        "type":
          type: "string"
          title: "Type"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "updated_at":
          type: "string"
          title: "Updated At"
          format: "date-time"
        "source_uuid":
          type: "string"
          title: "Source Uuid"
          format: "uuid4"
        "source_name":
          type: "string"
          title: "Source Name"
        "name":
          type: "string"
          title: "Name"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "storage_layer":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Storage Layer"
        "file_format":
          anyOf:
            - type: "string"
            - type: "null"
          title: "File Format"
        "physical_location":
          type: "string"
          title: "Physical Location"
      title: "DPLineageDatasetData"
      required:
        - "uuid"
        - "type"
        - "created_at"
        - "updated_at"
        - "source_uuid"
        - "source_name"
        - "name"
        - "physical_location"
      description: "DP lineage dataset data."
    "DPLineageDatasetNode":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
        "type":
          type: "string"
          title: "Type"
          const: "dataset"
        "data": {"$ref": "#/components/schemas/DPLineageDatasetData"}
      title: "DPLineageDatasetNode"
      required:
        - "id"
        - "type"
        - "data"
      description: "DP lineage dataset node."
    "DPLineageJobData":
      type: "object"
      properties:
        "uuid":
          type: "string"
          title: "Uuid"
          format: "uuid4"
        "type":
          type: "string"
          title: "Type"
        "engine":
          type: "string"
          title: "Engine"
        "engine_version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Engine Version"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "updated_at":
          type: "string"
          title: "Updated At"
          format: "date-time"
        "name":
          type: "string"
          title: "Name"
        "action_name":
          type: "string"
          title: "Action Name"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "current_version_uuid":
          type: "string"
          title: "Current Version Uuid"
          format: "uuid4"
        "inputs":
          type: "array"
          items: {"$ref": "#/components/schemas/DPLineageJobDataIO"}
          title: "Inputs"
        "outputs":
          type: "array"
          items: {"$ref": "#/components/schemas/DPLineageJobDataIO"}
          title: "Outputs"
      title: "DPLineageJobData"
      required:
        - "uuid"
        - "type"
        - "engine"
        - "created_at"
        - "updated_at"
        - "name"
        - "action_name"
        - "current_version_uuid"
        - "inputs"
        - "outputs"
      description: "DP lineage job data."
    "DPLineageJobDataIO":
      type: "object"
      properties:
        "uuid":
          type: "string"
          title: "Uuid"
          format: "uuid4"
        "name":
          type: "string"
          title: "Name"
        "namespace":
          type: "string"
          title: "Namespace"
      title: "DPLineageJobDataIO"
      required:
        - "uuid"
        - "name"
        - "namespace"
      description: "DP lineage job data IO."
    "DPLineageJobNode":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
        "type":
          type: "string"
          title: "Type"
          const: "job"
        "data": {"$ref": "#/components/schemas/DPLineageJobData"}
      title: "DPLineageJobNode"
      required:
        - "id"
        - "type"
        - "data"
      description: "DP lineage job node."
    "DPLineageLink":
      type: "object"
      properties:
        "source":
          type: "string"
          title: "Source"
        "target":
          type: "string"
          title: "Target"
      title: "DPLineageLink"
      required:
        - "source"
        - "target"
      description: "DP lineage link."
    "DPMetadataViewData":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid4"
        "sanitized_name":
          type: "string"
          title: "Sanitized Name"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "owner":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Owner"
        "created":
          type: "string"
          title: "Created"
          format: "date-time"
        "last_updated":
          type: "string"
          title: "Last Updated"
          format: "date-time"
        "is_active":
          type: "boolean"
          title: "Is Active"
        "update_frequency":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Update Frequency"
        "quality":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Quality"
        "schema":
          anyOf:
            - type: "array"
              items: {}
            - type: "null"
          title: "Schema"
        "relates_to":
          anyOf:
            - type: "array"
              items: {}
            - type: "null"
          title: "Relates To"
        "lineage":
          anyOf:
            - type: "object"
              additionalProperties: true
            - type: "null"
          title: "Lineage"
        "tags":
          type: "array"
          items: {}
          title: "Tags"
        "rows":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Rows"
        "columns":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Columns"
        "urn":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Urn"
        "data_profiling":
          anyOf:
            - type: "object"
              additionalProperties: true
            - type: "null"
          title: "Data Profiling"
        "data_quality":
          anyOf:
            - type: "array"
              items: {}
            - type: "null"
          title: "Data Quality"
        "data_quality_score":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Data Quality Score"
        "data_quality_scores_by_dimension":
          anyOf:
            - type: "object"
              additionalProperties: true
            - type: "null"
          title: "Data Quality Scores By Dimension"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "consumers":
          anyOf:
            - type: "array"
              items: {}
            - type: "null"
          title: "Consumers"
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
        "host_mesh_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Host Mesh Id"
      title: "DPMetadataViewData"
      required:
        - "identifier"
        - "sanitized_name"
        - "created"
        - "last_updated"
        - "is_active"
        - "tags"
        - "name"
      description: "DP metadata view data."
    "DataObjectConfigurationResponse":
      type: "object"
      properties:
        "configuration":
          anyOf:
            - oneOf:
                - {"$ref": "#/components/schemas/TableParams"}
                - {"$ref": "#/components/schemas/QueryParams"}
                - {"$ref": "#/components/schemas/CSVParams"}
                - {"$ref": "#/components/schemas/SyntheticParams"}
                - {"$ref": "#/components/schemas/DataProductParams"}
                - {"$ref": "#/components/schemas/ConnectorParquetParams"}
              discriminator:
                propertyName: "data_object_type"
                mapping:
                  "csv": "#/components/schemas/CSVParams"
                  "data_product": "#/components/schemas/DataProductParams"
                  "parquet": "#/components/schemas/ConnectorParquetParams"
                  "query": "#/components/schemas/QueryParams"
                  "synthetic": "#/components/schemas/SyntheticParams"
                  "table": "#/components/schemas/TableParams"
            - type: "null"
          title: "Configuration"
      title: "DataObjectConfigurationResponse"
      description: "Data object configuration response."
    "DataObjectList":
      type: "object"
      properties:
        "entities":
          type: "array"
          items: {"$ref": "#/components/schemas/DataObjectWithConfiguration"}
          title: "Entities"
      title: "DataObjectList"
      required:
        - "entities"
      description: "Data object list."
    "DataObjectMetadataResponse":
      type: "object"
      properties:
        "tags":
          type: "array"
          items:
            type: "string"
          title: "Tags"
          default: []
        "classification_name":
          anyOf:
            - type: "string"
              pattern: "^[a-z][a-z0-9_-]*$"
            - type: "null"
          title: "Classification Name"
          description: "Classification name"
        "sensitivity_names":
          type: "array"
          items:
            type: "string"
            pattern: "^[a-z][a-z0-9_-]*$"
          title: "Sensitivity Names"
          description: "List of sensitivity names"
        "fields":
          anyOf:
            - type: "object"
              additionalProperties: {"$ref": "#/components/schemas/FieldMetadata"}
            - type: "null"
          title: "Fields"
      title: "DataObjectMetadataResponse"
      description: "Response containing data_object metadata information."
    "DataObjectMode":
      type: "string"
      title: "DataObjectMode"
      enum:
        - "overwrite"
        - "append"
        - "delta"
      description: "DataObject mode."
    "DataObjectResponse":
      type: "object"
      properties:
        "entity": {"$ref": "#/components/schemas/EntityWithOwner"}
        "entity_info":
          anyOf:
            - {"$ref": "#/components/schemas/EntityInfo"}
            - type: "null"
        "links": {"$ref": "#/components/schemas/EntityLinks"}
        "compute_identifier":
          anyOf:
            - type: "string"
              format: "uuid"
            - type: "null"
          title: "Compute Identifier"
        "configuration":
          anyOf:
            - oneOf:
                - {"$ref": "#/components/schemas/TableParams"}
                - {"$ref": "#/components/schemas/QueryParams"}
                - {"$ref": "#/components/schemas/CSVParams"}
                - {"$ref": "#/components/schemas/SyntheticParams"}
                - {"$ref": "#/components/schemas/DataProductParams"}
                - {"$ref": "#/components/schemas/ConnectorParquetParams"}
              discriminator:
                propertyName: "data_object_type"
                mapping:
                  "csv": "#/components/schemas/CSVParams"
                  "data_product": "#/components/schemas/DataProductParams"
                  "parquet": "#/components/schemas/ConnectorParquetParams"
                  "query": "#/components/schemas/QueryParams"
                  "synthetic": "#/components/schemas/SyntheticParams"
                  "table": "#/components/schemas/TableParams"
            - type: "null"
          title: "Configuration"
        "schema_available":
          type: "boolean"
          title: "Schema Available"
        "tags":
          type: "array"
          items:
            type: "string"
          title: "Tags"
      title: "DataObjectResponse"
      required:
        - "entity"
        - "links"
        - "schema_available"
        - "tags"
      description: "Data object response."
    "DataObjectWithConfiguration":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "name":
          type: "string"
          title: "Name"
        "is_system":
          type: "boolean"
          title: "Is System"
          default: false
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "state": {"$ref": "#/components/schemas/backend__data__schema__common__EntityState"}
        "owner":
          anyOf:
            - type: "string"
              maxLength: 255
            - type: "null"
          title: "Owner"
        "configuration":
          anyOf:
            - oneOf:
                - {"$ref": "#/components/schemas/TableParams"}
                - {"$ref": "#/components/schemas/QueryParams"}
                - {"$ref": "#/components/schemas/CSVParams"}
                - {"$ref": "#/components/schemas/SyntheticParams"}
                - {"$ref": "#/components/schemas/DataProductParams"}
                - {"$ref": "#/components/schemas/ConnectorParquetParams"}
              discriminator:
                propertyName: "data_object_type"
                mapping:
                  "csv": "#/components/schemas/CSVParams"
                  "data_product": "#/components/schemas/DataProductParams"
                  "parquet": "#/components/schemas/ConnectorParquetParams"
                  "query": "#/components/schemas/QueryParams"
                  "synthetic": "#/components/schemas/SyntheticParams"
                  "table": "#/components/schemas/TableParams"
            - type: "null"
          title: "Configuration"
      title: "DataObjectWithConfiguration"
      required:
        - "identifier"
        - "urn"
        - "name"
        - "description"
        - "label"
        - "created_at"
        - "state"
      description: "Data object with configuration."
    "DataProductConsumersResponse":
      type: "object"
      properties:
        "consumers":
          type: "array"
          items: {"$ref": "#/components/schemas/UserWithConditions"}
          title: "Consumers"
      title: "DataProductConsumersResponse"
      required:
        - "consumers"
      description: "Product consumers response."
    "DataProductEntityList":
      type: "object"
      properties:
        "entities":
          type: "array"
          items: {"$ref": "#/components/schemas/DataProductEntityWithOwner"}
          title: "Entities"
      title: "DataProductEntityList"
      required:
        - "entities"
      description: "Product entity list."
    "DataProductEntityWithOwner":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "name":
          type: "string"
          title: "Name"
        "is_system":
          type: "boolean"
          title: "Is System"
          default: false
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "state": {"$ref": "#/components/schemas/backend__data__schema__common__EntityState"}
        "owner":
          anyOf:
            - type: "string"
              maxLength: 255
            - type: "null"
          title: "Owner"
        "host_mesh_identifier":
          type: "string"
          title: "Host Mesh Identifier"
          format: "uuid"
        "table":
          anyOf:
            - {"$ref": "#/components/schemas/Table"}
            - type: "null"
      title: "DataProductEntityWithOwner"
      required:
        - "identifier"
        - "urn"
        - "name"
        - "description"
        - "label"
        - "created_at"
        - "state"
        - "host_mesh_identifier"
      description: "DataProduct with owner."
    "DataProductIdentifierList":
      type: "object"
      properties:
        "identifiers":
          type: "array"
          items:
            type: "string"
            format: "uuid"
          title: "Identifiers"
      title: "DataProductIdentifierList"
      required:
        - "identifiers"
      description: "Data Product identifier list."
    "DataProductMeshAvailabilityRequest":
      type: "object"
      properties:
        "mesh_identifier":
          type: "string"
          title: "Mesh Identifier"
          format: "uuid"
      title: "DataProductMeshAvailabilityRequest"
      required:
        - "mesh_identifier"
      description: "Update data product available mesh"
    "DataProductMetadataResponse":
      type: "object"
      properties:
        "tags":
          type: "array"
          items:
            type: "string"
          title: "Tags"
        "classification_name":
          anyOf:
            - type: "string"
              pattern: "^[a-z][a-z0-9_-]*$"
            - type: "null"
          title: "Classification Name"
          description: "Classification name"
        "sensitivity_names":
          type: "array"
          items:
            type: "string"
            pattern: "^[a-z][a-z0-9_-]*$"
          title: "Sensitivity Names"
          description: "List of sensitivity names"
        "fields":
          anyOf:
            - type: "object"
              additionalProperties: {"$ref": "#/components/schemas/SchemaFieldMetadata"}
            - type: "null"
          title: "Fields"
      title: "DataProductMetadataResponse"
      required:
        - "tags"
      description: "DataProduct metadata response."
    "DataProductParams":
      type: "object"
      properties:
        "data_object_type":
          type: "string"
          title: "Data Object Type"
          const: "data_product"
        "engine": {"$ref": "#/components/schemas/Engine"}
        "table":
          type: "string"
          title: "Table"
        "urn":
          type: "string"
          title: "Urn"
      title: "DataProductParams"
      required:
        - "data_object_type"
        - "engine"
        - "table"
        - "urn"
      description: "DataProduct params."
    "DataProductQualityOverview":
      type: "object"
      properties:
        "total_products":
          type: "integer"
          title: "Total Products"
          default: 0
        "healthy_products":
          type: "integer"
          title: "Healthy Products"
          default: 0
        "critical_products":
          type: "integer"
          title: "Critical Products"
          default: 0
        "avg_quality_score":
          type: "number"
          title: "Avg Quality Score"
          default: 0
        "scores":
          type: "object"
          title: "Scores"
          additionalProperties:
            type: "object"
            additionalProperties:
              anyOf:
                - type: "number"
                - type: "null"
      title: "DataProductQualityOverview"
      description: "Data product quality overview."
    "DataProductResponse":
      type: "object"
      properties:
        "entity": {"$ref": "#/components/schemas/DataProductEntityWithOwner"}
        "entity_info":
          anyOf:
            - {"$ref": "#/components/schemas/EntityInfo"}
            - type: "null"
        "links": {"$ref": "#/components/schemas/EntityLinks"}
        "compute":
          anyOf:
            - {"$ref": "#/components/schemas/Compute"}
            - type: "null"
        "table":
          anyOf:
            - {"$ref": "#/components/schemas/Table"}
            - type: "null"
        "schema_available":
          type: "boolean"
          title: "Schema Available"
        "tags":
          type: "array"
          items:
            type: "string"
          title: "Tags"
      title: "DataProductResponse"
      required:
        - "entity"
        - "links"
        - "schema_available"
        - "tags"
      description: "DataProduct response."
    "DataSourceConnectionResponse":
      type: "object"
      properties:
        "connection":
          anyOf:
            - oneOf:
                - {"$ref": "#/components/schemas/DatabaseDataSourceConnectionDetails"}
                - {"$ref": "#/components/schemas/S3DataSourceConnectionDetails"}
                - {"$ref": "#/components/schemas/SyntheticDataSourceConnectionDetails"}
              discriminator:
                propertyName: "connection_type"
                mapping:
                  "database": "#/components/schemas/DatabaseDataSourceConnectionDetails"
                  "s3": "#/components/schemas/S3DataSourceConnectionDetails"
                  "synthetic": "#/components/schemas/SyntheticDataSourceConnectionDetails"
            - type: "null"
          title: "Connection"
        "secrets":
          type: "array"
          items: {"$ref": "#/components/schemas/Secret"}
          title: "Secrets"
      title: "DataSourceConnectionResponse"
      description: "DataSource connection response."
    "DataSourceList":
      type: "object"
      properties:
        "entities":
          type: "array"
          items: {"$ref": "#/components/schemas/DataSourceWithConnection"}
          title: "Entities"
      title: "DataSourceList"
      required:
        - "entities"
      description: "DataSource list."
    "DataSourceResponse":
      type: "object"
      properties:
        "entity": {"$ref": "#/components/schemas/EntityWithOwner"}
        "entity_info":
          anyOf:
            - {"$ref": "#/components/schemas/EntityInfo"}
            - type: "null"
        "links": {"$ref": "#/components/schemas/EntityLinks"}
        "compute_identifier":
          anyOf:
            - type: "string"
              format: "uuid"
            - type: "null"
          title: "Compute Identifier"
        "secrets":
          type: "array"
          items: {"$ref": "#/components/schemas/Secret"}
          title: "Secrets"
        "connection":
          anyOf:
            - oneOf:
                - {"$ref": "#/components/schemas/DatabaseDataSourceConnectionDetails"}
                - {"$ref": "#/components/schemas/S3DataSourceConnectionDetails"}
                - {"$ref": "#/components/schemas/SyntheticDataSourceConnectionDetails"}
              discriminator:
                propertyName: "connection_type"
                mapping:
                  "database": "#/components/schemas/DatabaseDataSourceConnectionDetails"
                  "s3": "#/components/schemas/S3DataSourceConnectionDetails"
                  "synthetic": "#/components/schemas/SyntheticDataSourceConnectionDetails"
            - type: "null"
          title: "Connection"
      title: "DataSourceResponse"
      required:
        - "entity"
        - "links"
      description: "DataSource response."
    "DataSourceWithConnection":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "name":
          type: "string"
          title: "Name"
        "is_system":
          type: "boolean"
          title: "Is System"
          default: false
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "state": {"$ref": "#/components/schemas/backend__data__schema__common__EntityState"}
        "owner":
          anyOf:
            - type: "string"
              maxLength: 255
            - type: "null"
          title: "Owner"
        "connection":
          anyOf:
            - oneOf:
                - {"$ref": "#/components/schemas/DatabaseDataSourceConnectionDetails"}
                - {"$ref": "#/components/schemas/S3DataSourceConnectionDetails"}
                - {"$ref": "#/components/schemas/SyntheticDataSourceConnectionDetails"}
              discriminator:
                propertyName: "connection_type"
                mapping:
                  "database": "#/components/schemas/DatabaseDataSourceConnectionDetails"
                  "s3": "#/components/schemas/S3DataSourceConnectionDetails"
                  "synthetic": "#/components/schemas/SyntheticDataSourceConnectionDetails"
            - type: "null"
          title: "Connection"
      title: "DataSourceWithConnection"
      required:
        - "identifier"
        - "urn"
        - "name"
        - "description"
        - "label"
        - "created_at"
        - "state"
      description: "DataSource with connection."
    "DataSystemEntity":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "name":
          type: "string"
          title: "Name"
        "is_system":
          type: "boolean"
          title: "Is System"
          default: false
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "state": {"$ref": "#/components/schemas/backend__data__schema__common__EntityState"}
        "owner_person": {"$ref": "#/components/schemas/Person"}
      title: "DataSystemEntity"
      required:
        - "identifier"
        - "urn"
        - "name"
        - "description"
        - "label"
        - "created_at"
        - "state"
        - "owner_person"
      description: "Data System entity."
    "DataSystemEntityList":
      type: "object"
      properties:
        "entities":
          type: "array"
          items: {"$ref": "#/components/schemas/DataSystemEntityWithOwner"}
          title: "Entities"
      title: "DataSystemEntityList"
      required:
        - "entities"
      description: "Data System entity list."
    "DataSystemEntityWithOwner":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "name":
          type: "string"
          title: "Name"
        "is_system":
          type: "boolean"
          title: "Is System"
          default: false
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "state": {"$ref": "#/components/schemas/backend__data__schema__common__EntityState"}
        "owner":
          anyOf:
            - type: "string"
              maxLength: 255
            - type: "null"
          title: "Owner"
        "owner_person": {"$ref": "#/components/schemas/Person"}
      title: "DataSystemEntityWithOwner"
      required:
        - "identifier"
        - "urn"
        - "name"
        - "description"
        - "label"
        - "created_at"
        - "state"
        - "owner_person"
      description: "Data System entity with owner."
    "DataSystemForQueryEntity":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "name":
          type: "string"
          title: "Name"
      title: "DataSystemForQueryEntity"
      required:
        - "identifier"
        - "name"
    "DataSystemForQueryList":
      type: "object"
      properties:
        "data_systems":
          type: "array"
          items: {"$ref": "#/components/schemas/DataSystemForQueryEntity"}
          title: "Data Systems"
      title: "DataSystemForQueryList"
      required:
        - "data_systems"
    "DataSystemResponse":
      type: "object"
      properties:
        "entity": {"$ref": "#/components/schemas/DataSystemEntityWithOwner"}
        "entity_info":
          anyOf:
            - {"$ref": "#/components/schemas/EntityInfo"}
            - type: "null"
        "links": {"$ref": "#/components/schemas/EntityLinks"}
      title: "DataSystemResponse"
      required:
        - "entity"
        - "links"
      description: "Data System response."
    "DatabaseDataSourceConnectionDetails":
      type: "object"
      properties:
        "connection_type":
          type: "string"
          title: "Connection Type"
          const: "database"
        "engine":
          type: "string"
          title: "Engine"
        "host":
          anyOf:
            - type: "string"
            - {"$ref": "#/components/schemas/ConnectionSecret"}
          title: "Host"
        "port":
          type: "integer"
          title: "Port"
        "schema":
          type: "string"
          title: "Schema"
        "database":
          type: "string"
          title: "Database"
        "user": {"$ref": "#/components/schemas/ConnectionSecret"}
        "password": {"$ref": "#/components/schemas/ConnectionSecret"}
      title: "DatabaseDataSourceConnectionDetails"
      required:
        - "connection_type"
        - "engine"
        - "host"
        - "port"
        - "database"
        - "user"
        - "password"
      description: "Database data source connection details."
    "DeduplicateKeepTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "deduplicate_with_keep"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "key_columns":
          type: "array"
          items:
            type: "string"
            pattern: "^[A-Za-z0-9_#]*$"
          title: "Key Columns"
        "order_column":
          type: "string"
          title: "Order Column"
          pattern: "^[A-Za-z0-9_#]*$"
        "keep": {"$ref": "#/components/schemas/DeduplicationKeep"}
      title: "DeduplicateKeepTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "key_columns"
        - "order_column"
        - "keep"
      description: "Deduplicate keep transformation."
    "DeduplicateTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "deduplicate"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "subset":
          anyOf:
            - type: "array"
              items:
                type: "string"
                pattern: "^[A-Za-z0-9_#]*$"
            - type: "null"
          title: "Subset"
      title: "DeduplicateTransformation"
      required:
        - "transform"
        - "input"
        - "output"
      description: "Deduplicate transformation."
    "DeduplicationKeep":
      type: "string"
      title: "DeduplicationKeep"
      enum:
        - "first"
        - "last"
      description: "Deduplication keep."
    "DeleteEntityMetadataRequest":
      type: "object"
      properties:
        "fields":
          anyOf:
            - type: "object"
              additionalProperties: {"$ref": "#/components/schemas/FieldMetadata"}
            - type: "null"
          title: "Fields"
        "tags":
          anyOf:
            - type: "array"
              items:
                type: "string"
            - type: "null"
          title: "Tags"
        "classification_name":
          anyOf:
            - type: "string"
              pattern: "^[a-z][a-z0-9_-]*$"
            - type: "null"
          title: "Classification Name"
          description: "Classification name"
        "sensitivity_names":
          anyOf:
            - type: "array"
              items:
                type: "string"
                pattern: "^[a-z][a-z0-9_-]*$"
            - type: "null"
          title: "Sensitivity Names"
          description: "List of sensitivity names"
      title: "DeleteEntityMetadataRequest"
      description: "Delete entity metadata request."
    "DeleteSensitivityResponse":
      type: "object"
      properties:
        "message":
          type: "string"
          title: "Message"
      title: "DeleteSensitivityResponse"
      required:
        - "message"
      description: "Response schema for deleting a sensitivity."
    "EffectEnum":
      type: "string"
      title: "EffectEnum"
      enum:
        - "allow"
        - "deny"
      description: "Default effect enum for use with IAM actions."
    "Engine":
      type: "string"
      title: "Engine"
      enum:
        - "postgres"
        - "iceberg"
        - "processor"
      description: "Engine."
    "Entity":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "name":
          type: "string"
          title: "Name"
        "is_system":
          type: "boolean"
          title: "Is System"
          default: false
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "state": {"$ref": "#/components/schemas/backend__data__schema__common__EntityState"}
      title: "Entity"
      required:
        - "identifier"
        - "urn"
        - "name"
        - "description"
        - "label"
        - "created_at"
        - "state"
      description: "Entity."
    "EntityInfo":
      type: "object"
      properties:
        "owner":
          type: "string"
          title: "Owner"
          maxLength: 255
        "contact_ids":
          type: "array"
          items:
            type: "string"
          title: "Contact Ids"
        "links":
          type: "array"
          items:
            type: "string"
          title: "Links"
      title: "EntityInfo"
      required:
        - "owner"
        - "contact_ids"
        - "links"
      description: "Entity info."
    "EntityLink":
      type: "object"
      properties:
        "parent": {"$ref": "#/components/schemas/LinkNode"}
        "child": {"$ref": "#/components/schemas/LinkNode"}
      title: "EntityLink"
      required:
        - "parent"
        - "child"
      description: "Entity link."
    "EntityLinkList":
      type: "object"
      properties:
        "links":
          type: "array"
          items: {"$ref": "#/components/schemas/EntityLink"}
          title: "Links"
      title: "EntityLinkList"
      required:
        - "links"
      description: "Entity link list."
    "EntityLinks":
      type: "object"
      properties:
        "parents":
          type: "array"
          items: {"$ref": "#/components/schemas/LinkNode"}
          title: "Parents"
        "children":
          type: "array"
          items: {"$ref": "#/components/schemas/LinkNode"}
          title: "Children"
      title: "EntityLinks"
      required:
        - "parents"
        - "children"
      description: "Entity links."
    "EntityParent":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "entity_type": {"$ref": "#/components/schemas/EntityType"}
      title: "EntityParent"
      required:
        - "identifier"
        - "entity_type"
    "EntityResponse":
      type: "object"
      properties:
        "entity": {"$ref": "#/components/schemas/EntityWithOwner"}
        "entity_info":
          anyOf:
            - {"$ref": "#/components/schemas/EntityInfo"}
            - type: "null"
        "links": {"$ref": "#/components/schemas/EntityLinks"}
      title: "EntityResponse"
      required:
        - "entity"
        - "links"
      description: "Entity response."
    "EntitySearchResult":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "name":
          type: "string"
          title: "Name"
        "is_system":
          type: "boolean"
          title: "Is System"
          default: false
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "state": {"$ref": "#/components/schemas/backend__data__schema__common__EntityState"}
        "entity_type": {"$ref": "#/components/schemas/EntityType"}
        "rank":
          type: "number"
          title: "Rank"
          default: 0
        "owner":
          anyOf:
            - type: "string"
              maxLength: 255
            - type: "null"
          title: "Owner"
      title: "EntitySearchResult"
      required:
        - "identifier"
        - "urn"
        - "name"
        - "description"
        - "label"
        - "created_at"
        - "state"
        - "entity_type"
      description: "Entity search result."
    "EntitySearchResults":
      type: "object"
      properties:
        "count":
          type: "integer"
          title: "Count"
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/EntitySearchResult"}
          title: "Results"
      title: "EntitySearchResults"
      required:
        - "count"
        - "results"
      description: "Entity search results."
    "EntitySearchSortColumns":
      type: "string"
      title: "EntitySearchSortColumns"
      enum:
        - "identifier"
        - "name"
        - "label"
        - "created_at"
        - "entity_type"
        - "rank"
    "EntityType":
      type: "string"
      title: "EntityType"
      enum:
        - "mesh"
        - "data_source"
        - "data_object"
        - "data_product"
        - "application"
        - "data_system"
      description: "Entity type."
    "EntityWithOwner":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "name":
          type: "string"
          title: "Name"
        "is_system":
          type: "boolean"
          title: "Is System"
          default: false
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "state": {"$ref": "#/components/schemas/backend__data__schema__common__EntityState"}
        "owner":
          anyOf:
            - type: "string"
              maxLength: 255
            - type: "null"
          title: "Owner"
      title: "EntityWithOwner"
      required:
        - "identifier"
        - "urn"
        - "name"
        - "description"
        - "label"
        - "created_at"
        - "state"
      description: "Entity with owner."
    "ErrorCode":
      type: "object"
      properties:
        "class_name":
          type: "string"
          title: "Class Name"
        "type":
          type: "string"
          title: "Type"
        "title":
          type: "string"
          title: "Title"
      title: "ErrorCode"
      required:
        - "class_name"
        - "type"
        - "title"
      description: "Error code."
    "ErrorCodes":
      type: "object"
      properties:
        "errors":
          type: "array"
          items: {"$ref": "#/components/schemas/ErrorCode"}
          title: "Errors"
      title: "ErrorCodes"
      required:
        - "errors"
      description: "Error codes."
    "ExistingProductJob":
      type: "object"
      properties:
        "config": {"$ref": "#/components/schemas/OptionalSparkConfig"}
      title: "ExistingProductJob"
      required:
        - "config"
      description: "ExistingProductJob model."
    "Expectation":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
        "entity":
          type: "string"
          title: "Entity"
        "expectations": {"$ref": "#/components/schemas/ExpectationDetails"}
        "weights":
          anyOf:
            - {"$ref": "#/components/schemas/ExpectationWeights"}
            - type: "null"
        "thresholds":
          anyOf:
            - {"$ref": "#/components/schemas/ExpectationThresholds"}
            - type: "null"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
      title: "Expectation"
      required:
        - "id"
        - "entity"
        - "expectations"
        - "created_at"
      description: "Expectation."
    "ExpectationColumnThresholds":
      type: "object"
      properties:
        "accuracy":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Accuracy"
        "completeness":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Completeness"
        "consistency":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Consistency"
        "uniqueness":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Uniqueness"
        "validity":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Validity"
      title: "ExpectationColumnThresholds"
      description: "Expectation column thresholds."
    "ExpectationDetails":
      type: "object"
      properties:
        "auto":
          type: "array"
          items: {"$ref": "#/components/schemas/ExpectationItem"}
          title: "Auto"
        "custom":
          type: "array"
          items: {"$ref": "#/components/schemas/ExpectationItem"}
          title: "Custom"
      title: "ExpectationDetails"
      required:
        - "auto"
        - "custom"
      description: "Expectation details."
    "ExpectationItem":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
        "kwargs":
          type: "object"
          title: "Kwargs"
          additionalProperties: true
        "meta":
          type: "object"
          title: "Meta"
          additionalProperties: true
      title: "ExpectationItem"
      required:
        - "type"
        - "kwargs"
        - "meta"
      description: "Expectation item."
    "ExpectationParameter":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
        "type":
          type: "string"
          title: "Type"
        "description":
          type: "string"
          title: "Description"
        "required":
          type: "boolean"
          title: "Required"
        "default":
          anyOf:
            - {}
            - type: "null"
          title: "Default"
      title: "ExpectationParameter"
      required:
        - "name"
        - "type"
        - "description"
        - "required"
      description: "Expectation parameter."
    "ExpectationResults":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/Expectation"}
          title: "Results"
      title: "ExpectationResults"
      required:
        - "results"
      description: "Expectation results."
    "ExpectationRule":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
        "category":
          type: "string"
          title: "Category"
        "level":
          type: "string"
          title: "Level"
        "critically":
          type: "integer"
          title: "Critically"
        "description":
          type: "string"
          title: "Description"
        "parameters":
          type: "array"
          items: {"$ref": "#/components/schemas/ExpectationParameter"}
          title: "Parameters"
      title: "ExpectationRule"
      required:
        - "type"
        - "category"
        - "level"
        - "critically"
        - "description"
        - "parameters"
      description: "Expectation rule."
    "ExpectationRules":
      type: "object"
      properties:
        "rules":
          type: "array"
          items: {"$ref": "#/components/schemas/ExpectationRule"}
          title: "Rules"
      title: "ExpectationRules"
      required:
        - "rules"
      description: "Expectation rules."
    "ExpectationThresholds":
      type: "object"
      properties:
        "table":
          type: "number"
          title: "Table"
        "columns":
          type: "object"
          title: "Columns"
          additionalProperties: {"$ref": "#/components/schemas/ExpectationColumnThresholds"}
      title: "ExpectationThresholds"
      required:
        - "table"
        - "columns"
      description: "Expectation thresholds."
    "ExpectationWeights":
      type: "object"
      properties:
        "accuracy":
          type: "number"
          title: "Accuracy"
        "completeness":
          type: "number"
          title: "Completeness"
        "consistency":
          type: "number"
          title: "Consistency"
        "uniqueness":
          type: "number"
          title: "Uniqueness"
        "validity":
          type: "number"
          title: "Validity"
      title: "ExpectationWeights"
      required:
        - "accuracy"
        - "completeness"
        - "consistency"
        - "uniqueness"
        - "validity"
      description: "Expectation weights."
    "FieldDataType":
      type: "object"
      properties:
        "meta":
          type: "object"
          title: "Meta"
          additionalProperties:
            type: "string"
        "column_type": {"$ref": "#/components/schemas/ColumnType"}
      title: "FieldDataType"
      required:
        - "meta"
        - "column_type"
      description: "Field data type."
    "FieldDefinition":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "primary":
          type: "boolean"
          title: "Primary"
          default: false
        "optional":
          type: "boolean"
          title: "Optional"
          default: false
        "data_type": {"$ref": "#/components/schemas/FieldDataType"}
        "classification_name":
          anyOf:
            - type: "string"
              pattern: "^[a-z][a-z0-9_-]*$"
            - type: "null"
          title: "Classification Name"
          description: "Classification name"
        "sensitivity_names":
          anyOf:
            - type: "array"
              items:
                type: "string"
                pattern: "^[a-z][a-z0-9_-]*$"
            - type: "null"
          title: "Sensitivity Names"
          description: "List of sensitivity names"
        "tags":
          type: "array"
          items:
            type: "string"
          title: "Tags"
      title: "FieldDefinition"
      required:
        - "name"
        - "data_type"
        - "tags"
      description: "Field definition."
    "FieldDefinitionTemplate":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "primary":
          type: "boolean"
          title: "Primary"
          default: false
        "optional":
          type: "boolean"
          title: "Optional"
          default: false
        "data_type": {"$ref": "#/components/schemas/FieldDataType"}
        "classification_name":
          anyOf:
            - type: "string"
              pattern: "^[a-z][a-z0-9_-]*$"
            - type: "null"
          title: "Classification Name"
          description: "Classification name"
        "sensitivity_names":
          anyOf:
            - type: "array"
              items:
                type: "string"
                pattern: "^[a-z][a-z0-9_-]*$"
            - type: "null"
          title: "Sensitivity Names"
          description: "List of sensitivity names"
      title: "FieldDefinitionTemplate"
      required:
        - "name"
        - "data_type"
      description: "Field definition template."
    "FieldMetadata":
      type: "object"
      properties:
        "tags":
          anyOf:
            - type: "array"
              items:
                type: "string"
            - type: "null"
          title: "Tags"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "primary":
          type: "boolean"
          title: "Primary"
          default: false
        "optional":
          type: "boolean"
          title: "Optional"
          default: false
        "classification_name":
          anyOf:
            - type: "string"
              pattern: "^[a-z][a-z0-9_-]*$"
            - type: "null"
          title: "Classification Name"
          description: "Classification name"
        "sensitivity_names":
          anyOf:
            - type: "array"
              items:
                type: "string"
                pattern: "^[a-z][a-z0-9_-]*$"
            - type: "null"
          title: "Sensitivity Names"
          description: "List of sensitivity names"
      title: "FieldMetadata"
      description: "Field metadata."
    "FilterWithConditionTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "filter_with_condition"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "condition":
          type: "string"
          title: "Condition"
      title: "FilterWithConditionTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "condition"
      description: "Filter with condition transformation."
    "Finalisers-Input":
      type: "object"
      properties:
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "enable_quality":
          type: "boolean"
          title: "Enable Quality"
        "write_config":
          oneOf:
            - {"$ref": "#/components/schemas/OverwriteConfig"}
            - {"$ref": "#/components/schemas/OverwritePartitionsConfig"}
            - {"$ref": "#/components/schemas/AppendConfig"}
            - {"$ref": "#/components/schemas/MergeConfig-Input"}
          discriminator:
            propertyName: "mode"
            mapping:
              "append": "#/components/schemas/AppendConfig"
              "merge": "#/components/schemas/MergeConfig-Input"
              "overwrite": "#/components/schemas/OverwriteConfig"
              "overwrite_partitions": "#/components/schemas/OverwritePartitionsConfig"
          title: "Write Config"
        "enable_profiling":
          type: "boolean"
          title: "Enable Profiling"
        "enable_classification":
          type: "boolean"
          title: "Enable Classification"
      title: "Finalisers"
      required:
        - "input"
        - "enable_quality"
        - "write_config"
        - "enable_profiling"
        - "enable_classification"
      description: "Finalisers model."
    "Finalisers-Output":
      type: "object"
      properties:
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "enable_quality":
          type: "boolean"
          title: "Enable Quality"
        "write_config":
          oneOf:
            - {"$ref": "#/components/schemas/OverwriteConfig"}
            - {"$ref": "#/components/schemas/OverwritePartitionsConfig"}
            - {"$ref": "#/components/schemas/AppendConfig"}
            - {"$ref": "#/components/schemas/MergeConfig-Output"}
          discriminator:
            propertyName: "mode"
            mapping:
              "append": "#/components/schemas/AppendConfig"
              "merge": "#/components/schemas/MergeConfig-Output"
              "overwrite": "#/components/schemas/OverwriteConfig"
              "overwrite_partitions": "#/components/schemas/OverwritePartitionsConfig"
          title: "Write Config"
        "enable_profiling":
          type: "boolean"
          title: "Enable Profiling"
        "enable_classification":
          type: "boolean"
          title: "Enable Classification"
      title: "Finalisers"
      required:
        - "input"
        - "enable_quality"
        - "write_config"
        - "enable_profiling"
        - "enable_classification"
      description: "Finalisers model."
    "ForecastGranularity":
      type: "string"
      title: "ForecastGranularity"
      enum:
        - "day"
        - "month"
        - "year"
      description: "Enum for forecast granularity."
    "ForecastMethod":
      type: "string"
      title: "ForecastMethod"
      enum:
        - "last_value"
        - "mean"
        - "exp_smoothing"
        - "arima"
      description: "Enum for forecasting method."
    "FormattedRoute":
      type: "object"
      properties:
        "methods":
          type: "string"
          title: "Methods"
        "path":
          type: "string"
          title: "Path"
        "permission_pairs":
          type: "array"
          items: {"$ref": "#/components/schemas/PermissionPair"}
          title: "Permission Pairs"
        "summary":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Summary"
        "logic_operator":
          type: "string"
          title: "Logic Operator"
          default: "and"
      title: "FormattedRoute"
      required:
        - "methods"
        - "path"
        - "permission_pairs"
      description: "Formatted route."
    "FormattedRoutes":
      type: "object"
      properties:
        "routes":
          type: "array"
          items: {"$ref": "#/components/schemas/FormattedRoute"}
          title: "Routes"
      title: "FormattedRoutes"
      required:
        - "routes"
    "GroupByTransformation-Input":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "group_by"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "group_columns":
          type: "array"
          items:
            type: "string"
            pattern: "^[A-Za-z0-9_#]*$"
          title: "Group Columns"
          minItems: 1
        "aggregations":
          type: "object"
          patternProperties:
            "^[A-Za-z0-9_#]*$": {"$ref": "#/components/schemas/Aggregator"}
          title: "Aggregations"
      title: "GroupByTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "group_columns"
        - "aggregations"
      description: "Group by transformation."
    "GroupByTransformation-Output":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "group_by"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "group_columns":
          type: "array"
          items:
            type: "string"
            pattern: "^[A-Za-z0-9_#]*$"
          title: "Group Columns"
          minItems: 1
        "aggregations":
          type: "object"
          patternProperties:
            "^[A-Za-z0-9_#]*$": {"$ref": "#/components/schemas/Aggregator"}
          title: "Aggregations"
      title: "GroupByTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "group_columns"
        - "aggregations"
      description: "Group by transformation."
    "HTTPValidationError":
      type: "object"
      properties:
        "detail":
          type: "array"
          items: {"$ref": "#/components/schemas/ValidationError"}
          title: "Detail"
      title: "HTTPValidationError"
    "IcebergTableFormat":
      type: "string"
      title: "IcebergTableFormat"
      enum:
        - "PARQUET"
      description: "Iceberg table format."
    "IcebergTableProperties":
      type: "object"
      properties:
        "table_format": {"$ref": "#/components/schemas/IcebergTableFormat"}
        "partitioning":
          anyOf:
            - type: "array"
              items:
                type: "string"
            - type: "null"
          title: "Partitioning"
        "location":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Location"
        "format_version":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Format Version"
      title: "IcebergTableProperties"
      required:
        - "table_format"
      description: "Iceberg table properties."
    "JobHistory":
      type: "object"
      properties:
        "created":
          type: "string"
          title: "Created"
          format: "date-time"
        "updated":
          type: "string"
          title: "Updated"
          format: "date-time"
        "name":
          type: "string"
          title: "Name"
        "reason":
          type: "string"
          title: "Reason"
        "status":
          type: "string"
          title: "Status"
        "suffix":
          type: "string"
          title: "Suffix"
      title: "JobHistory"
      required:
        - "created"
        - "updated"
        - "name"
        - "reason"
        - "status"
        - "suffix"
      description: "Job history."
    "JoinCondition":
      type: "object"
      properties:
        "left":
          type: "string"
          title: "Left"
          pattern: "^[A-Za-z0-9_#]*$"
        "operator": {"$ref": "#/components/schemas/ComparisonOperator"}
        "right":
          type: "string"
          title: "Right"
          pattern: "^[A-Za-z0-9_#]*$"
      title: "JoinCondition"
      required:
        - "left"
        - "operator"
        - "right"
      description: "JoinCondition model."
    "JoinOperation":
      type: "string"
      title: "JoinOperation"
      enum:
        - "inner"
        - "left"
        - "right"
        - "left_anti"
        - "left_semi"
        - "cross"
        - "self_join"
        - "outer"
        - "full"
        - "fullouter"
      description: "Join operation."
    "JoinRenameSelectTransformation-Input":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "join_rename_select"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "other":
          type: "string"
          title: "Other"
          pattern: "^[a-z][a-z0-9_]*$"
        "join": {"$ref": "#/components/schemas/JoinOperation"}
        "conditions":
          type: "array"
          items: {"$ref": "#/components/schemas/JoinCondition"}
          title: "Conditions"
          minItems: 1
        "select_columns":
          anyOf:
            - type: "array"
              items:
                type: "string"
                pattern: "^[A-Za-z0-9_#]*$"
            - type: "null"
          title: "Select Columns"
        "select_all_columns":
          type: "boolean"
          title: "Select All Columns"
          default: false
        "rename_columns":
          type: "object"
          patternProperties:
            "^[A-Za-z0-9_#]*$":
              type: "string"
              pattern: "^[A-Za-z0-9_#]*$"
          title: "Rename Columns"
      title: "JoinRenameSelectTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "other"
        - "join"
        - "conditions"
        - "rename_columns"
      description: "Join rename select transformation."
    "JoinRenameSelectTransformation-Output":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "join_rename_select"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "other":
          type: "string"
          title: "Other"
          pattern: "^[a-z][a-z0-9_]*$"
        "join": {"$ref": "#/components/schemas/JoinOperation"}
        "conditions":
          type: "array"
          items: {"$ref": "#/components/schemas/JoinCondition"}
          title: "Conditions"
          minItems: 1
        "select_columns":
          anyOf:
            - type: "array"
              items:
                type: "string"
                pattern: "^[A-Za-z0-9_#]*$"
            - type: "null"
          title: "Select Columns"
        "select_all_columns":
          type: "boolean"
          title: "Select All Columns"
          default: false
        "rename_columns":
          type: "object"
          patternProperties:
            "^[A-Za-z0-9_#]*$":
              type: "string"
              pattern: "^[A-Za-z0-9_#]*$"
          title: "Rename Columns"
      title: "JoinRenameSelectTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "other"
        - "join"
        - "conditions"
        - "rename_columns"
      description: "Join rename select transformation."
    "JoinTransformation-Input":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "join"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "other":
          type: "string"
          title: "Other"
          pattern: "^[a-z][a-z0-9_]*$"
        "join": {"$ref": "#/components/schemas/JoinOperation"}
        "conditions":
          type: "array"
          items: {"$ref": "#/components/schemas/JoinCondition"}
          title: "Conditions"
          minItems: 1
      title: "JoinTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "other"
        - "join"
        - "conditions"
      description: "Join transformation."
    "JoinTransformation-Output":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "join"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "other":
          type: "string"
          title: "Other"
          pattern: "^[a-z][a-z0-9_]*$"
        "join": {"$ref": "#/components/schemas/JoinOperation"}
        "conditions":
          type: "array"
          items: {"$ref": "#/components/schemas/JoinCondition"}
          title: "Conditions"
          minItems: 1
      title: "JoinTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "other"
        - "join"
        - "conditions"
      description: "Join transformation."
    "KillJob":
      type: "object"
      properties:
        "state":
          type: "string"
          title: "State"
          const: "kill_job"
      title: "KillJob"
      required:
        - "state"
      description: "Kill job."
    "LeftType":
      type: "string"
      title: "LeftType"
      enum:
        - "source_column"
        - "target_column"
      description: "Left type of the left field."
    "LimitRowsTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "limit_rows"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "limit":
          type: "integer"
          title: "Limit"
          minimum: 1
      title: "LimitRowsTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "limit"
      description: "Limit rows transformation."
    "LinkNode":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "name":
          type: "string"
          title: "Name"
        "is_system":
          type: "boolean"
          title: "Is System"
          default: false
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "state": {"$ref": "#/components/schemas/backend__data__schema__common__EntityState"}
        "owner":
          anyOf:
            - type: "string"
              maxLength: 255
            - type: "null"
          title: "Owner"
        "entity_type": {"$ref": "#/components/schemas/EntityType"}
      title: "LinkNode"
      required:
        - "identifier"
        - "urn"
        - "name"
        - "description"
        - "label"
        - "created_at"
        - "state"
        - "entity_type"
      description: "Link node."
    "ManageRolePolicy":
      type: "object"
      properties:
        "role":
          type: "string"
          title: "Role"
          format: "uuid"
        "policy":
          type: "string"
          title: "Policy"
          format: "uuid"
      title: "ManageRolePolicy"
      required:
        - "role"
        - "policy"
    "ManageTag":
      type: "object"
      properties:
        "tag":
          type: "string"
          title: "Tag"
          maxLength: 50
          minLength: 1
      title: "ManageTag"
      required:
        - "tag"
      description: "Manage tag."
    "ManageUserPolicy":
      type: "object"
      properties:
        "user":
          type: "string"
          title: "User"
          format: "uuid"
        "policy":
          type: "string"
          title: "Policy"
          format: "uuid"
      title: "ManageUserPolicy"
      required:
        - "user"
        - "policy"
    "MaskReplacement":
      type: "object"
      properties:
        "upper_char":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Upper Char"
        "lower_char":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Lower Char"
        "digit_char":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Digit Char"
        "other_char":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Other Char"
      title: "MaskReplacement"
      description: "Mask replacement."
    "MaskRule":
      type: "object"
      properties:
        "column":
          type: "string"
          title: "Column"
          pattern: "^[A-Za-z0-9_#]*$"
        "replacement": {"$ref": "#/components/schemas/MaskReplacement"}
      title: "MaskRule"
      required:
        - "column"
        - "replacement"
      description: "MaskRule model."
    "MaskValuesTransformation-Input":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "mask_values"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "rules":
          type: "array"
          items: {"$ref": "#/components/schemas/MaskRule"}
          title: "Rules"
          minItems: 1
      title: "MaskValuesTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "rules"
      description: "MaskValuesTransformation model."
    "MaskValuesTransformation-Output":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "mask_values"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "rules":
          type: "array"
          items: {"$ref": "#/components/schemas/MaskRule"}
          title: "Rules"
          minItems: 1
      title: "MaskValuesTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "rules"
      description: "MaskValuesTransformation model."
    "MergeAction":
      type: "string"
      title: "MergeAction"
      enum:
        - "INSERT"
        - "UPDATE SET"
        - "DELETE"
      description: "Merge action."
    "MergeComparisonOperator":
      type: "string"
      title: "MergeComparisonOperator"
      enum:
        - "="
        - "<=>"
        - "<>"
        - "<"
        - "<="
        - ">"
        - ">="
      description: "Merge comparison operator."
    "MergeConditionAction-Input":
      type: "object"
      properties:
        "conditions":
          type: "array"
          items: {"$ref": "#/components/schemas/MergeOperatorExpressionConditions"}
          title: "Conditions"
        "action": {"$ref": "#/components/schemas/MergeAction"}
        "expression":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Expression"
      title: "MergeConditionAction"
      required:
        - "conditions"
        - "action"
      description: "Merge condition action."
    "MergeConditionAction-Output":
      type: "object"
      properties:
        "conditions":
          type: "array"
          items: {"$ref": "#/components/schemas/MergeOperatorExpressionConditions"}
          title: "Conditions"
        "action": {"$ref": "#/components/schemas/MergeAction"}
        "expression":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Expression"
      title: "MergeConditionAction"
      required:
        - "conditions"
        - "action"
      description: "Merge condition action."
    "MergeConfig-Input":
      type: "object"
      properties:
        "mode":
          type: "string"
          title: "Mode"
          const: "merge"
        "keys":
          type: "array"
          items: {"$ref": "#/components/schemas/MergeOperatorExpressionKeys"}
          title: "Keys"
        "matched_conditions":
          type: "array"
          items: {"$ref": "#/components/schemas/MergeConditionAction-Input"}
          title: "Matched Conditions"
        "not_matched_conditions":
          type: "array"
          items: {"$ref": "#/components/schemas/MergeConditionAction-Input"}
          title: "Not Matched Conditions"
      title: "MergeConfig"
      required:
        - "mode"
        - "keys"
        - "matched_conditions"
        - "not_matched_conditions"
      description: "Merge configuration."
    "MergeConfig-Output":
      type: "object"
      properties:
        "mode":
          type: "string"
          title: "Mode"
          const: "merge"
        "keys":
          type: "array"
          items: {"$ref": "#/components/schemas/MergeOperatorExpressionKeys"}
          title: "Keys"
        "matched_conditions":
          type: "array"
          items: {"$ref": "#/components/schemas/MergeConditionAction-Output"}
          title: "Matched Conditions"
        "not_matched_conditions":
          type: "array"
          items: {"$ref": "#/components/schemas/MergeConditionAction-Output"}
          title: "Not Matched Conditions"
      title: "MergeConfig"
      required:
        - "mode"
        - "keys"
        - "matched_conditions"
        - "not_matched_conditions"
      description: "Merge configuration."
    "MergeOperatorExpressionConditions":
      type: "object"
      properties:
        "left_type": {"$ref": "#/components/schemas/LeftType"}
        "left_side":
          type: "string"
          title: "Left Side"
        "operator":
          anyOf:
            - {"$ref": "#/components/schemas/MergeComparisonOperator"}
            - type: "null"
        "right_side":
          anyOf:
            - type: "string"
            - {"$ref": "#/components/schemas/MergePredicate"}
          title: "Right Side"
        "right_type": {"$ref": "#/components/schemas/RightType"}
      title: "MergeOperatorExpressionConditions"
      required:
        - "left_type"
        - "left_side"
        - "right_side"
        - "right_type"
      description: "Merge operator expression for matched and non-matched conditions."
    "MergeOperatorExpressionKeys":
      type: "object"
      properties:
        "left_type": {"$ref": "#/components/schemas/LeftType"}
        "left_side":
          type: "string"
          title: "Left Side"
        "operator":
          anyOf:
            - {"$ref": "#/components/schemas/MergeComparisonOperator"}
            - type: "null"
        "right_side":
          type: "string"
          title: "Right Side"
        "right_type": {"$ref": "#/components/schemas/RightType"}
      title: "MergeOperatorExpressionKeys"
      required:
        - "left_type"
        - "left_side"
        - "right_side"
        - "right_type"
      description: "Merge operator expression for keys."
    "MergePredicate":
      type: "string"
      title: "MergePredicate"
      enum:
        - "IS NULL"
        - "IS TRUE"
        - "IS FALSE"
        - "IS NOT NULL"
        - "IS NOT TRUE"
        - "IS NOT FALSE"
      description: "Merge predicate."
    "Mesh":
      type: "object"
      properties:
        "id":
          type: "integer"
          title: "Id"
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "organization_id":
          type: "integer"
          title: "Organization Id"
        "urn":
          type: "string"
          title: "Urn"
        "name":
          type: "string"
          title: "Name"
        "sanitized_name":
          type: "string"
          title: "Sanitized Name"
        "is_system":
          type: "boolean"
          title: "Is System"
          default: false
        "label":
          type: "string"
          title: "Label"
        "description":
          type: "string"
          title: "Description"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "state": {"$ref": "#/components/schemas/backend__data__model__EntityState"}
        "entity_info_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Entity Info Id"
        "purpose":
          type: "string"
          title: "Purpose"
        "assignees":
          type: "array"
          items: {"$ref": "#/components/schemas/Assignee"}
          title: "Assignees"
        "security_policy":
          type: "array"
          items:
            type: "string"
          title: "Security Policy"
        "is_pinned":
          type: "boolean"
          title: "Is Pinned"
          default: false
      title: "Mesh"
      required:
        - "id"
        - "identifier"
        - "organization_id"
        - "urn"
        - "name"
        - "sanitized_name"
        - "label"
        - "description"
        - "created_at"
        - "state"
        - "purpose"
        - "assignees"
        - "security_policy"
      description: "Mesh model."
    "MeshList":
      type: "object"
      properties:
        "entities":
          type: "array"
          items: {"$ref": "#/components/schemas/MeshWithOwner"}
          title: "Entities"
      title: "MeshList"
      required:
        - "entities"
      description: "Mesh list."
    "MeshResponse":
      type: "object"
      properties:
        "entity":
          anyOf:
            - {"$ref": "#/components/schemas/Mesh"}
            - {"$ref": "#/components/schemas/MeshWithOwner"}
          title: "Entity"
        "entity_info":
          anyOf:
            - {"$ref": "#/components/schemas/EntityInfo"}
            - type: "null"
        "links": {"$ref": "#/components/schemas/EntityLinks"}
      title: "MeshResponse"
      required:
        - "entity"
        - "links"
      description: "Entity response."
    "MeshWithOwner":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "name":
          type: "string"
          title: "Name"
        "is_system":
          type: "boolean"
          title: "Is System"
          default: false
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "state": {"$ref": "#/components/schemas/backend__data__schema__common__EntityState"}
        "owner":
          anyOf:
            - type: "string"
              maxLength: 255
            - type: "null"
          title: "Owner"
        "purpose":
          type: "string"
          title: "Purpose"
        "assignees":
          type: "array"
          items: {"$ref": "#/components/schemas/Assignee"}
          title: "Assignees"
        "security_policy":
          type: "array"
          items:
            type: "string"
          title: "Security Policy"
        "is_pinned":
          type: "boolean"
          title: "Is Pinned"
          default: false
      title: "MeshWithOwner"
      required:
        - "identifier"
        - "urn"
        - "name"
        - "description"
        - "label"
        - "created_at"
        - "state"
        - "purpose"
        - "assignees"
        - "security_policy"
      description: "Mesh with owner"
    "NullIfChange":
      type: "object"
      properties:
        "column":
          type: "string"
          title: "Column"
          pattern: "^[A-Za-z0-9_#]*$"
        "expression":
          type: "string"
          title: "Expression"
      title: "NullIfChange"
      required:
        - "column"
        - "expression"
      description: "NullIfChange model."
    "NullIfExpressionTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "null_if_expression"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "changes":
          type: "array"
          items: {"$ref": "#/components/schemas/NullIfChange"}
          title: "Changes"
          minItems: 1
      title: "NullIfExpressionTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "changes"
      description: "Null if expression transformation."
    "OptionalSparkConfig":
      type: "object"
      properties:
        "docker_tag":
          type: "string"
          title: "Docker Tag"
          pattern: "^\\d+\\.\\d+\\.\\d+$"
          default: "0.1.1"
        "executor_core_request":
          type: "string"
          title: "Executor Core Request"
          pattern: "^\\d+(?:\\.\\d+$|[mM](?:i)?$)"
          default: "100m"
        "executor_core_limit":
          type: "string"
          title: "Executor Core Limit"
          pattern: "^\\d+(?:\\.\\d+$|[mM](?:i)?$)"
          default: "1000m"
        "executor_instances":
          type: "integer"
          title: "Executor Instances"
          minimum: 1
          default: 1
        "min_executor_instances":
          type: "integer"
          title: "Min Executor Instances"
          minimum: 1
          default: 1
        "max_executor_instances":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Max Executor Instances"
        "executor_memory":
          type: "string"
          title: "Executor Memory"
          pattern: "^\\d+(?:\\.\\d+$|[mM](?:i)?$)"
          default: "512m"
        "driver_core_request":
          type: "string"
          title: "Driver Core Request"
          pattern: "^\\d+(?:\\.\\d+$|[mM](?:i)?$)"
          default: "0.1"
        "driver_core_limit":
          type: "string"
          title: "Driver Core Limit"
          pattern: "^\\d+(?:\\.\\d+$|[mM](?:i)?$)"
          default: "800m"
        "driver_memory":
          type: "string"
          title: "Driver Memory"
          pattern: "^\\d+(?:\\.\\d+$|[mM](?:i)?$)"
          default: "512m"
      title: "OptionalSparkConfig"
      description: "OptionalSparkConfig model."
    "OrchestratorWorkflow":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "data_product_identifier":
          type: "string"
          title: "Data Product Identifier"
          format: "uuid"
        "name":
          type: "string"
          title: "Name"
        "run_type":
          type: "string"
          title: "Run Type"
        "config":
          anyOf:
            - type: "object"
              additionalProperties: true
            - type: "null"
          title: "Config"
        "status":
          type: "string"
          title: "Status"
        "created_by":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Created By"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
        "started_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Started At"
        "completed_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Completed At"
        "error_message":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Error Message"
      title: "OrchestratorWorkflow"
      required:
        - "identifier"
        - "data_product_identifier"
        - "name"
        - "run_type"
        - "config"
        - "status"
        - "created_by"
        - "created_at"
        - "updated_at"
        - "started_at"
        - "completed_at"
        - "error_message"
    "OrchestratorWorkflows":
      type: "object"
      properties:
        "orchestrator_workflows":
          type: "array"
          items: {"$ref": "#/components/schemas/OrchestratorWorkflow"}
          title: "Orchestrator Workflows"
      title: "OrchestratorWorkflows"
      required:
        - "orchestrator_workflows"
    "Organization":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "name":
          type: "string"
          title: "Name"
        "display_name":
          type: "string"
          title: "Display Name"
        "description":
          type: "string"
          title: "Description"
        "owner":
          type: "string"
          title: "Owner"
        "is_system":
          type: "boolean"
          title: "Is System"
      title: "Organization"
      required:
        - "identifier"
        - "urn"
        - "name"
        - "display_name"
        - "description"
        - "owner"
        - "is_system"
    "OrganizationList":
      type: "object"
      properties:
        "organizations":
          type: "array"
          items: {"$ref": "#/components/schemas/Organization"}
          title: "Organizations"
      title: "OrganizationList"
      required:
        - "organizations"
    "OverwriteConfig":
      type: "object"
      properties:
        "mode":
          type: "string"
          title: "Mode"
          const: "overwrite"
      title: "OverwriteConfig"
      required:
        - "mode"
      description: "Overwrite configuration."
    "OverwritePartitionsConfig":
      type: "object"
      properties:
        "mode":
          type: "string"
          title: "Mode"
          const: "overwrite_partitions"
      title: "OverwritePartitionsConfig"
      required:
        - "mode"
      description: "Overwrite partitions configuration."
    "ParameterTuningSearchType":
      type: "string"
      title: "ParameterTuningSearchType"
      enum:
        - "random"
        - "grid"
      description: "Parameter tuning search type."
    "PermissionPair":
      type: "object"
      properties:
        "action":
          type: "string"
          title: "Action"
        "resource":
          type: "string"
          title: "Resource"
      title: "PermissionPair"
      required:
        - "action"
        - "resource"
      description: "Permission pair."
    "PersistTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "persist"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "storage_level": {"$ref": "#/components/schemas/StorageLevel"}
      title: "PersistTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "storage_level"
      description: "Persist transformation that saves data to storage."
    "Person":
      type: "object"
      properties:
        "email":
          type: "string"
          title: "Email"
          format: "email"
        "full_name":
          type: "string"
          title: "Full Name"
      title: "Person"
      required:
        - "email"
        - "full_name"
      description: "Person entity."
    "PivotTransformation-Input":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "pivot"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "group_columns":
          type: "array"
          items:
            type: "string"
            pattern: "^[A-Za-z0-9_#]*$"
          title: "Group Columns"
          minItems: 1
        "aggregations":
          type: "object"
          patternProperties:
            "^[A-Za-z0-9_#]*$": {"$ref": "#/components/schemas/Aggregator"}
          title: "Aggregations"
        "pivot_column":
          type: "string"
          title: "Pivot Column"
          pattern: "^[A-Za-z0-9_#]*$"
        "pivot_values":
          type: "array"
          items:
            anyOf:
              - type: "integer"
              - type: "number"
              - type: "boolean"
              - type: "string"
          title: "Pivot Values"
        "pivot_values_changes":
          anyOf:
            - type: "array"
              items: {"$ref": "#/components/schemas/ReplaceTerm"}
            - type: "null"
          title: "Pivot Values Changes"
        "pivot_values_lowercase":
          type: "boolean"
          title: "Pivot Values Lowercase"
          default: false
      title: "PivotTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "group_columns"
        - "aggregations"
        - "pivot_column"
        - "pivot_values"
      description: "Pivot transformation."
    "PivotTransformation-Output":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "pivot"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "group_columns":
          type: "array"
          items:
            type: "string"
            pattern: "^[A-Za-z0-9_#]*$"
          title: "Group Columns"
          minItems: 1
        "aggregations":
          type: "object"
          patternProperties:
            "^[A-Za-z0-9_#]*$": {"$ref": "#/components/schemas/Aggregator"}
          title: "Aggregations"
        "pivot_column":
          type: "string"
          title: "Pivot Column"
          pattern: "^[A-Za-z0-9_#]*$"
        "pivot_values":
          type: "array"
          items:
            anyOf:
              - type: "integer"
              - type: "number"
              - type: "boolean"
              - type: "string"
          title: "Pivot Values"
        "pivot_values_changes":
          anyOf:
            - type: "array"
              items: {"$ref": "#/components/schemas/ReplaceTerm"}
            - type: "null"
          title: "Pivot Values Changes"
        "pivot_values_lowercase":
          type: "boolean"
          title: "Pivot Values Lowercase"
          default: false
      title: "PivotTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "group_columns"
        - "aggregations"
        - "pivot_column"
        - "pivot_values"
      description: "Pivot transformation."
    "Policies":
      type: "object"
      properties:
        "policies":
          type: "array"
          items: {"$ref": "#/components/schemas/Policy"}
          title: "Policies"
      title: "Policies"
      required:
        - "policies"
    "Policy":
      type: "object"
      properties:
        "version":
          type: "string"
          title: "Version"
          default: "2022-10-01"
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "name":
          type: "string"
          title: "Name"
        "statements":
          type: "array"
          items: {"$ref": "#/components/schemas/Statement"}
          title: "Statements"
          minItems: 1
      title: "Policy"
      required:
        - "identifier"
        - "name"
        - "statements"
    "PreviewState":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
        "schema":
          anyOf:
            - type: "array"
              items: {"$ref": "#/components/schemas/FieldDefinitionTemplate"}
            - type: "null"
          title: "Schema"
        "error":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Error"
        "row_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Row Count"
      title: "PreviewState"
      required:
        - "transform"
      description: "PreviewState model."
    "Principals":
      type: "object"
      properties:
        "principals":
          type: "array"
          items:
            type: "string"
          title: "Principals"
      title: "Principals"
      required:
        - "principals"
    "Profiling":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
        "entity":
          type: "string"
          title: "Entity"
        "row_count":
          type: "integer"
          title: "Row Count"
        "column_count":
          type: "integer"
          title: "Column Count"
        "profile_sample":
          type: "number"
          title: "Profile Sample"
        "column_stats":
          type: "string"
          title: "Column Stats"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
      title: "Profiling"
      required:
        - "id"
        - "entity"
        - "row_count"
        - "column_count"
        - "profile_sample"
        - "column_stats"
        - "created_at"
      description: "Profiling."
    "ProfilingResults":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/Profiling"}
          title: "Results"
      title: "ProfilingResults"
      required:
        - "results"
      description: "Profiling results."
    "QueryDataProduct":
      type: "object"
      properties:
        "query":
          type: "string"
          title: "Query"
      title: "QueryDataProduct"
      required:
        - "query"
      description: "Query data product request."
    "QueryParams":
      type: "object"
      properties:
        "data_object_type":
          type: "string"
          title: "Data Object Type"
          const: "query"
        "query":
          type: "string"
          title: "Query"
      title: "QueryParams"
      required:
        - "data_object_type"
        - "query"
      description: "Query params."
    "RefreshToken":
      type: "object"
      properties:
        "refresh_token":
          type: "string"
          title: "Refresh Token"
      title: "RefreshToken"
      required:
        - "refresh_token"
    "RegressionPredictionTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "regression_prediction"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "target_col":
          type: "string"
          title: "Target Col"
          pattern: "^[A-Za-z0-9_#]*$"
        "timestamp_col":
          type: "string"
          title: "Timestamp Col"
          pattern: "^[A-Za-z0-9_#]*$"
        "model_bucket":
          type: "string"
          title: "Model Bucket"
          pattern: "^[A-Za-z0-9_#]*$"
        "project_name":
          type: "string"
          title: "Project Name"
          pattern: "^[A-Za-z0-9_.\\/-]*$"
        "version":
          anyOf:
            - type: "string"
              pattern: "^v[0-9]+(\\.[0-9]+){0,2}$"
            - type: "null"
          title: "Version"
        "forecast_horizon":
          type: "integer"
          title: "Forecast Horizon"
        "forecast_granularity": {"$ref": "#/components/schemas/ForecastGranularity"}
        "history_periods":
          type: "integer"
          title: "History Periods"
        "forecast_method": {"$ref": "#/components/schemas/ForecastMethod"}
        "enable_mlflow":
          type: "boolean"
          title: "Enable Mlflow"
          default: false
      title: "RegressionPredictionTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "target_col"
        - "timestamp_col"
        - "model_bucket"
        - "project_name"
        - "forecast_horizon"
        - "forecast_granularity"
        - "history_periods"
        - "forecast_method"
      description: "Regression prediction transformation."
    "RegressionPredictionTransformationLSTM":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "regression_prediction_lstm"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "timestamp_col":
          type: "string"
          title: "Timestamp Col"
          pattern: "^[A-Za-z0-9_#]*$"
        "model_bucket":
          type: "string"
          title: "Model Bucket"
          pattern: "^[A-Za-z0-9_#]*$"
        "project_name":
          type: "string"
          title: "Project Name"
          pattern: "^[A-Za-z0-9_.\\/-]*$"
        "version":
          anyOf:
            - type: "string"
              pattern: "^v[0-9]+(\\.[0-9]+){0,2}$"
            - type: "null"
          title: "Version"
        "forecast_horizon":
          type: "integer"
          title: "Forecast Horizon"
          default: 30
        "sequence_length":
          type: "integer"
          title: "Sequence Length"
          default: 90
        "enable_mlflow":
          type: "boolean"
          title: "Enable Mlflow"
          default: false
      title: "RegressionPredictionTransformationLSTM"
      required:
        - "transform"
        - "input"
        - "output"
        - "timestamp_col"
        - "model_bucket"
        - "project_name"
      description: "LSTM regression prediction transformation for day-by-day forecasting."
    "RegressionTrainingTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "regression_training"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "timestamp_col":
          type: "string"
          title: "Timestamp Col"
          pattern: "^[A-Za-z0-9_#]*$"
        "target_col":
          type: "string"
          title: "Target Col"
          pattern: "^[A-Za-z0-9_#]*$"
        "feature_cols":
          anyOf:
            - type: "array"
              items:
                type: "string"
                pattern: "^[A-Za-z0-9_#]*$"
            - type: "null"
          title: "Feature Cols"
        "drop_cols":
          anyOf:
            - type: "array"
              items:
                type: "string"
                pattern: "^[A-Za-z0-9_#]*$"
            - type: "null"
          title: "Drop Cols"
        "random_seed":
          type: "integer"
          title: "Random Seed"
        "time_features":
          type: "array"
          items:
            type: "string"
            pattern: "^[A-Za-z0-9_#]*$"
          title: "Time Features"
          minItems: 1
        "train_ratio":
          type: "number"
          title: "Train Ratio"
        "feature_selection_threshold":
          type: "number"
          title: "Feature Selection Threshold"
        "max_rows":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Max Rows"
        "enable_parameter_tuning":
          type: "boolean"
          title: "Enable Parameter Tuning"
        "forecast_horizon":
          type: "integer"
          title: "Forecast Horizon"
        "forecast_granularity": {"$ref": "#/components/schemas/ForecastGranularity"}
        "search_type": {"$ref": "#/components/schemas/ParameterTuningSearchType"}
        "n_configs":
          type: "integer"
          title: "N Configs"
        "n_parallel_jobs":
          type: "integer"
          title: "N Parallel Jobs"
        "initial_train_size":
          type: "number"
          title: "Initial Train Size"
        "step_size":
          type: "number"
          title: "Step Size"
        "numLeaves":
          type: "array"
          items:
            type: "integer"
          title: "Numleaves"
          minItems: 1
        "maxDepth":
          type: "array"
          items:
            type: "integer"
          title: "Maxdepth"
          minItems: 1
        "learningRate":
          type: "array"
          items:
            type: "number"
          title: "Learningrate"
          minItems: 1
        "numIterations":
          type: "array"
          items:
            type: "integer"
          title: "Numiterations"
          minItems: 1
        "featureFraction":
          type: "array"
          items:
            type: "number"
          title: "Featurefraction"
          minItems: 1
        "baggingFraction":
          type: "array"
          items:
            type: "number"
          title: "Baggingfraction"
          minItems: 1
        "baggingFreq":
          type: "array"
          items:
            type: "integer"
          title: "Baggingfreq"
          minItems: 1
        "lambdaL1":
          type: "array"
          items:
            type: "number"
          title: "Lambdal1"
          minItems: 1
        "lambdaL2":
          type: "array"
          items:
            type: "number"
          title: "Lambdal2"
          minItems: 1
        "model_bucket":
          type: "string"
          title: "Model Bucket"
          pattern: "^[A-Za-z0-9_#]*$"
        "project_name":
          type: "string"
          title: "Project Name"
          pattern: "^[A-Za-z0-9_.\\/-]*$"
        "enable_mlflow":
          type: "boolean"
          title: "Enable Mlflow"
          default: false
      title: "RegressionTrainingTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "timestamp_col"
        - "target_col"
        - "random_seed"
        - "time_features"
        - "train_ratio"
        - "feature_selection_threshold"
        - "enable_parameter_tuning"
        - "forecast_horizon"
        - "forecast_granularity"
        - "search_type"
        - "n_configs"
        - "n_parallel_jobs"
        - "initial_train_size"
        - "step_size"
        - "numLeaves"
        - "maxDepth"
        - "learningRate"
        - "numIterations"
        - "featureFraction"
        - "baggingFraction"
        - "baggingFreq"
        - "lambdaL1"
        - "lambdaL2"
        - "model_bucket"
        - "project_name"
      description: "Regression prediction transformation."
    "RegressionTrainingTransformationLSTM":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "regression_training_lstm"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "timestamp_col":
          type: "string"
          title: "Timestamp Col"
          pattern: "^[A-Za-z0-9_#]*$"
        "features_to_predict":
          anyOf:
            - type: "array"
              items:
                type: "string"
                pattern: "^[A-Za-z0-9_#]*$"
            - type: "null"
          title: "Features To Predict"
        "drop_cols":
          anyOf:
            - type: "array"
              items:
                type: "string"
                pattern: "^[A-Za-z0-9_#]*$"
            - type: "null"
          title: "Drop Cols"
        "feature_groups":
          anyOf:
            - type: "object"
              additionalProperties:
                type: "array"
                items:
                  type: "string"
                  pattern: "^[A-Za-z0-9_#]*$"
            - type: "null"
          title: "Feature Groups"
        "random_seed":
          type: "integer"
          title: "Random Seed"
          default: 42
        "train_ratio":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Train Ratio"
          default: 0.8
        "scale_features":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Scale Features"
          default: true
        "validation_split":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Validation Split"
          default: 0.2
        "sequence_length":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Sequence Length"
          default: 90
        "epochs":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Epochs"
          default: 100
        "patience":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Patience"
          default: 15
        "batch_size":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Batch Size"
          default: 32
        "models_config":
          anyOf:
            - type: "object"
              additionalProperties:
                type: "object"
                additionalProperties: true
            - type: "null"
          title: "Models Config"
        "model_bucket":
          type: "string"
          title: "Model Bucket"
          pattern: "^[A-Za-z0-9_#]*$"
        "project_name":
          type: "string"
          title: "Project Name"
          pattern: "^[A-Za-z0-9_.\\/-]*$"
        "enable_mlflow":
          type: "boolean"
          title: "Enable Mlflow"
          default: true
      title: "RegressionTrainingTransformationLSTM"
      required:
        - "transform"
        - "input"
        - "output"
        - "timestamp_col"
        - "model_bucket"
        - "project_name"
      description: "LSTM regression training transformation."
    "RemoveSchedule":
      type: "object"
      properties:
        "state":
          type: "string"
          title: "State"
          const: "remove_schedule"
      title: "RemoveSchedule"
      required:
        - "state"
      description: "Remove schedule."
    "RenameColumnTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "rename_column"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "changes":
          type: "object"
          title: "Changes"
          additionalProperties:
            type: "string"
            pattern: "^[A-Za-z0-9_#]*$"
      title: "RenameColumnTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "changes"
      description: "Rename column transformation."
    "RepartitionTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "repartition"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "partition_columns":
          type: "array"
          items:
            type: "string"
            pattern: "^[A-Za-z0-9_#]*$"
          title: "Partition Columns"
        "partition_num":
          type: "integer"
          title: "Partition Num"
          minimum: 1
          default: 1
      title: "RepartitionTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "partition_columns"
      description: "Repartition transformation."
    "ReplaceChainTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "replace_chain"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "changes":
          type: "object"
          patternProperties:
            "^[A-Za-z0-9_#]*$":
              type: "array"
              items: {"$ref": "#/components/schemas/ReplaceTerm"}
              minItems: 1
          title: "Changes"
      title: "ReplaceChainTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "changes"
      description: "ReplaceChainTransformation model."
    "ReplaceColumn":
      type: "object"
      properties:
        "column":
          type: "string"
          title: "Column"
          pattern: "^[A-Za-z0-9_#]*$"
        "find":
          type: "string"
          title: "Find"
        "replace":
          type: "string"
          title: "Replace"
      title: "ReplaceColumn"
      required:
        - "column"
        - "find"
        - "replace"
      description: "ReplaceColumn model."
    "ReplaceTerm":
      type: "object"
      properties:
        "find":
          type: "string"
          title: "Find"
        "replace":
          type: "string"
          title: "Replace"
      title: "ReplaceTerm"
      required:
        - "find"
        - "replace"
      description: "ReplaceTerm model."
    "ReplaceTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "replace"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "changes":
          type: "array"
          items: {"$ref": "#/components/schemas/ReplaceColumn"}
          title: "Changes"
          minItems: 1
      title: "ReplaceTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "changes"
      description: "Replace transformation."
    "Reschedule":
      type: "object"
      properties:
        "cron_expression":
          type: "string"
          title: "Cron Expression"
        "state":
          type: "string"
          title: "State"
          const: "reschedule"
      title: "Reschedule"
      required:
        - "cron_expression"
        - "state"
      description: "Reschedule."
    "ResultListResponse":
      type: "object"
      properties:
        "results":
          type: "array"
          items:
            type: "object"
            additionalProperties: true
          title: "Results"
      title: "ResultListResponse"
      required:
        - "results"
      description: "Result list response."
    "RightType":
      type: "string"
      title: "RightType"
      enum:
        - "source_column"
        - "target_column"
        - "string"
        - "number"
        - "expression"
        - "predicate"
      description: "Right type of the right field."
    "Role":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "name":
          type: "string"
          title: "Name"
          pattern: "^[a-zA-Z0-9_][a-zA-Z0-9_\\- ]{0,254}$"
        "description":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Description"
        "is_system":
          type: "boolean"
          title: "Is System"
      title: "Role"
      required:
        - "identifier"
        - "name"
        - "is_system"
    "RoleFullInfo":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "name":
          type: "string"
          title: "Name"
          pattern: "^[a-zA-Z0-9_][a-zA-Z0-9_\\- ]{0,254}$"
        "description":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Description"
        "is_system":
          type: "boolean"
          title: "Is System"
        "members":
          type: "array"
          items:
            type: "string"
            format: "uuid"
          title: "Members"
      title: "RoleFullInfo"
      required:
        - "identifier"
        - "name"
        - "is_system"
        - "members"
    "RolePolicy":
      type: "object"
      properties:
        "role":
          type: "string"
          title: "Role"
          format: "uuid"
        "policy": {"$ref": "#/components/schemas/Policy"}
        "is_system":
          type: "boolean"
          title: "Is System"
      title: "RolePolicy"
      required:
        - "role"
        - "policy"
        - "is_system"
    "RolesInfo":
      type: "object"
      properties:
        "roles":
          type: "array"
          items: {"$ref": "#/components/schemas/RoleFullInfo"}
          title: "Roles"
      title: "RolesInfo"
      required:
        - "roles"
    "RunHistory":
      type: "object"
      properties:
        "created":
          type: "string"
          title: "Created"
          format: "date-time"
        "updated":
          type: "string"
          title: "Updated"
          format: "date-time"
        "name":
          type: "string"
          title: "Name"
        "status":
          type: "string"
          title: "Status"
        "suffix":
          type: "string"
          title: "Suffix"
        "run":
          type: "string"
          title: "Run"
      title: "RunHistory"
      required:
        - "created"
        - "updated"
        - "name"
        - "status"
        - "suffix"
        - "run"
      description: "Run history."
    "RunSQLTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "run_sql"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "others":
          type: "array"
          items:
            type: "string"
            pattern: "^[a-z][a-z0-9_]*$"
          title: "Others"
        "sql":
          type: "string"
          title: "Sql"
      title: "RunSQLTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "others"
        - "sql"
      description: "Run SQL transformation."
    "RunStatus":
      type: "object"
      properties:
        "run_type":
          type: "string"
          title: "Run Type"
          const: "single"
        "container":
          anyOf:
            - type: "object"
              additionalProperties: true
            - type: "null"
          title: "Container"
        "status":
          type: "string"
          title: "Status"
        "attempts":
          type: "integer"
          title: "Attempts"
        "submission_attempts":
          type: "integer"
          title: "Submission Attempts"
        "start":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Start"
        "finish":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Finish"
        "error":
          anyOf:
            - type: "array"
              items:
                type: "string"
            - type: "null"
          title: "Error"
      title: "RunStatus"
      required:
        - "run_type"
        - "status"
        - "attempts"
        - "submission_attempts"
      description: "Run status."
    "S3DataSourceConnectionDetails":
      type: "object"
      properties:
        "connection_type":
          type: "string"
          title: "Connection Type"
          const: "s3"
        "url":
          anyOf:
            - type: "string"
            - {"$ref": "#/components/schemas/ConnectionSecret"}
          title: "Url"
        "access_key": {"$ref": "#/components/schemas/ConnectionSecret"}
        "access_secret": {"$ref": "#/components/schemas/ConnectionSecret"}
      title: "S3DataSourceConnectionDetails"
      required:
        - "connection_type"
        - "url"
        - "access_key"
        - "access_secret"
      description: "S3 data source connection details."
    "Schedule":
      type: "object"
      properties:
        "cron_expression":
          type: "string"
          title: "Cron Expression"
        "state":
          type: "string"
          title: "State"
          const: "schedule"
      title: "Schedule"
      required:
        - "cron_expression"
        - "state"
      description: "Schedule."
    "ScheduledStatus":
      type: "object"
      properties:
        "run_type":
          type: "string"
          title: "Run Type"
          const: "schedule"
        "last_run":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Run"
        "last_run_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Run Name"
        "next_run":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Next Run"
        "past_successful_run_names":
          anyOf:
            - type: "array"
              items:
                type: "string"
            - type: "null"
          title: "Past Successful Run Names"
        "schedule_state":
          type: "string"
          title: "Schedule State"
      title: "ScheduledStatus"
      required:
        - "run_type"
        - "schedule_state"
      description: "Scheduled status."
    "Schema-Input":
      type: "object"
      properties:
        "fields":
          type: "array"
          items: {"$ref": "#/components/schemas/CreateFieldDefinition"}
          title: "Fields"
      title: "Schema"
      required:
        - "fields"
      description: "Data object schema."
    "Schema-Output":
      type: "object"
      properties:
        "fields":
          type: "array"
          items: {"$ref": "#/components/schemas/FieldDefinition"}
          title: "Fields"
        "iceberg_table_properties":
          anyOf:
            - type: "object"
              additionalProperties: true
            - type: "null"
          title: "Iceberg Table Properties"
      title: "Schema"
      required:
        - "fields"
      description: "Schema."
    "SchemaFieldMetadata":
      type: "object"
      properties:
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "primary":
          type: "boolean"
          title: "Primary"
          default: false
        "optional":
          type: "boolean"
          title: "Optional"
          default: false
        "classification_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Classification Name"
        "sensitivity_names":
          anyOf:
            - type: "array"
              items:
                type: "string"
            - type: "null"
          title: "Sensitivity Names"
        "tags":
          anyOf:
            - type: "array"
              items:
                type: "string"
            - type: "null"
          title: "Tags"
      title: "SchemaFieldMetadata"
    "Secret":
      type: "object"
      properties:
        "key":
          type: "string"
          title: "Key"
        "value":
          type: "string"
          title: "Value"
      title: "Secret"
      required:
        - "key"
        - "value"
      description: "Secret."
    "SecretKey":
      type: "object"
      properties:
        "access_key_id":
          type: "string"
          title: "Access Key Id"
        "secret_access_key":
          type: "string"
          title: "Secret Access Key"
        "is_system":
          type: "boolean"
          title: "Is System"
      title: "SecretKey"
      required:
        - "access_key_id"
        - "secret_access_key"
        - "is_system"
    "Secrets":
      type: "object"
      properties:
        "secrets":
          type: "array"
          items: {"$ref": "#/components/schemas/Secret"}
          title: "Secrets"
      title: "Secrets"
      required:
        - "secrets"
      description: "Secrets."
    "SelectColumnsTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "select_columns"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "columns":
          type: "array"
          items:
            type: "string"
            pattern: "^[A-Za-z0-9_#]*$"
          title: "Columns"
          minItems: 1
      title: "SelectColumnsTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "columns"
      description: "SelectColumnsTransformation model."
    "SelectExpressionTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "select_expression"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "expressions":
          type: "array"
          items:
            type: "string"
          title: "Expressions"
          minItems: 1
      title: "SelectExpressionTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "expressions"
      description: "Select expression transformation."
    "Sensitivity":
      type: "object"
      properties:
        "id":
          type: "integer"
          title: "Id"
        "name":
          type: "string"
          title: "Name"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "system_defined":
          type: "boolean"
          title: "System Defined"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "updated_at":
          type: "string"
          title: "Updated At"
          format: "date-time"
      title: "Sensitivity"
      required:
        - "id"
        - "name"
        - "system_defined"
        - "created_at"
        - "updated_at"
      description: "Sensitivity model."
    "SensitivityListResponse":
      type: "object"
      properties:
        "sensitivities":
          type: "array"
          items:
            type: "object"
            additionalProperties:
              type: "string"
          title: "Sensitivities"
      title: "SensitivityListResponse"
      required:
        - "sensitivities"
      description: "Response schema for list of sensitivities."
    "SortDirection-Output":
      type: "string"
      title: "SortDirection"
      enum:
        - "asc"
        - "desc"
      description: "Sort direction."
    "SortTransformation-Input":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "sort"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "sort_columns":
          type: "object"
          patternProperties:
            "^[A-Za-z0-9_#]*$": {"$ref": "#/components/schemas/backend__data__builder__transformations__sort__SortDirection"}
          title: "Sort Columns"
      title: "SortTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "sort_columns"
      description: "Sort transformation."
    "SortTransformation-Output":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "sort"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "sort_columns":
          type: "object"
          patternProperties:
            "^[A-Za-z0-9_#]*$": {"$ref": "#/components/schemas/SortDirection-Output"}
          title: "Sort Columns"
      title: "SortTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "sort_columns"
      description: "Sort transformation."
    "SparkDataType":
      type: "string"
      title: "SparkDataType"
      enum:
        - "string"
        - "integer"
        - "long"
        - "float"
        - "double"
        - "timestamp"
        - "date"
        - "boolean"
        - "decimal"
      description: "Spark data type."
    "Statement":
      type: "object"
      properties:
        "sid":
          type: "string"
          title: "Sid"
        "action":
          type: "array"
          items: {"$ref": "#/components/schemas/Action"}
          title: "Action"
          minItems: 1
        "resource":
          type: "array"
          items:
            type: "string"
            pattern: "^((?P<all_>\\*)|(?P<xrn>urn):(?P<namespace>[a-zA-Z0-9_\\-]{1,50}):(?P<identifier>[a-zA-Z0-9_\\-]{0,50}):(?P<service>[a-zA-Z0-9_\\-]{1,50})?:(?P<organization>[a-zA-Z0-9_\\-]{1,50})?:(?P<resource_type>[a-zA-Z0-9_\\-]{1,50})(([:](?P<sub_type>(user|role)))?([:](?P<resource_id>(\\*|[a-zA-Z0-9_\\-]{1,50})))?))$"
          title: "Resource"
          minItems: 1
        "condition":
          type: "array"
          items:
            type: "string"
          title: "Condition"
        "effect": {"$ref": "#/components/schemas/EffectEnum"}
      title: "Statement"
      required:
        - "sid"
        - "action"
        - "resource"
        - "effect"
    "StorageLevel":
      type: "string"
      title: "StorageLevel"
      enum:
        - "MEMORY_ONLY"
        - "MEMORY_AND_DISK"
        - "MEMORY_ONLY_SER"
        - "MEMORY_AND_DISK_SER"
        - "DISK_ONLY"
        - "MEMORY_ONLY_2"
        - "MEMORY_AND_DISK_2"
        - "DISK_ONLY_2"
        - "MEMORY_ONLY_SER_2"
        - "MEMORY_AND_DISK_SER_2"
        - "DISK_ONLY_SER_2"
        - "MEMORY_ONLY_2_SER"
        - "MEMORY_AND_DISK_2_SER"
        - "DISK_ONLY_2_SER"
        - "MEMORY_ONLY_SER_2_SER"
        - "MEMORY_AND_DISK_SER_2_SER"
        - "DISK_ONLY_SER_2_SER"
      description: "Storage level."
    "StoredDataProductSchema":
      type: "object"
      properties:
        "data_product_type":
          type: "string"
          title: "Data Product Type"
          const: "stored"
        "iceberg_table_properties":
          anyOf:
            - {"$ref": "#/components/schemas/IcebergTableProperties"}
            - type: "null"
        "fields":
          type: "array"
          items: {"$ref": "#/components/schemas/CreateFieldDefinition"}
          title: "Fields"
      title: "StoredDataProductSchema"
      required:
        - "data_product_type"
        - "fields"
      description: "Stored data product schema."
    "SyntheticDataSourceConnectionDetails":
      type: "object"
      properties:
        "connection_type":
          type: "string"
          title: "Connection Type"
          const: "synthetic"
      title: "SyntheticDataSourceConnectionDetails"
      required:
        - "connection_type"
      description: "Synthetic data source connection details."
    "SyntheticParams":
      type: "object"
      properties:
        "data_object_type":
          type: "string"
          title: "Data Object Type"
          const: "synthetic"
        "providers":
          type: "array"
          items:
            type: "string"
          title: "Providers"
        "item_count":
          type: "integer"
          title: "Item Count"
        "data":
          type: "object"
          title: "Data"
          additionalProperties:
            type: "string"
      title: "SyntheticParams"
      required:
        - "data_object_type"
        - "providers"
        - "item_count"
        - "data"
      description: "Synthetic params."
    "Table":
      type: "object"
      properties:
        "engine":
          type: "string"
          title: "Engine"
        "table_name":
          type: "string"
          title: "Table Name"
      title: "Table"
      required:
        - "engine"
        - "table_name"
      description: "Table."
    "TableParams":
      type: "object"
      properties:
        "data_object_type":
          type: "string"
          title: "Data Object Type"
          const: "table"
        "table":
          type: "string"
          title: "Table"
      title: "TableParams"
      required:
        - "data_object_type"
        - "table"
      description: "Table params."
    "Tag":
      type: "object"
      properties:
        "tag":
          type: "string"
          title: "Tag"
        "system_defined":
          type: "boolean"
          title: "System Defined"
      title: "Tag"
      required:
        - "tag"
        - "system_defined"
      description: "Tag."
    "TagList":
      type: "object"
      properties:
        "tags":
          type: "array"
          items: {"$ref": "#/components/schemas/Tag"}
          title: "Tags"
      title: "TagList"
      required:
        - "tags"
      description: "Tag list."
    "TimestampColumn-Input":
      type: "object"
      properties:
        "column":
          type: "string"
          title: "Column"
          pattern: "^[A-Za-z0-9_#]*$"
        "time_format":
          type: "string"
          title: "Time Format"
          default: "\"yyyy-MM-dd HH:mm:ss\""
      title: "TimestampColumn"
      required:
        - "column"
      description: "TimestampColumn model."
    "TimestampColumn-Output":
      type: "object"
      properties:
        "column":
          type: "string"
          title: "Column"
          pattern: "^[A-Za-z0-9_#]*$"
        "time_format":
          type: "string"
          title: "Time Format"
          default: "yyyy-MM-dd HH:mm:ss"
      title: "TimestampColumn"
      required:
        - "column"
      description: "TimestampColumn model."
    "TimestampToUnixtimeTransformation-Input":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "timestamp_to_unixtime"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "changes":
          type: "array"
          items: {"$ref": "#/components/schemas/TimestampColumn-Input"}
          title: "Changes"
          minItems: 1
      title: "TimestampToUnixtimeTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "changes"
      description: "Timestamp to unixtime transformation."
    "TimestampToUnixtimeTransformation-Output":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "timestamp_to_unixtime"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "changes":
          type: "array"
          items: {"$ref": "#/components/schemas/TimestampColumn-Output"}
          title: "Changes"
          minItems: 1
      title: "TimestampToUnixtimeTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "changes"
      description: "Timestamp to unixtime transformation."
    "ToJsonStructTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "to_json_struct"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "alias":
          type: "string"
          title: "Alias"
          pattern: "^[A-Za-z0-9_#]*$"
        "columns":
          type: "array"
          items:
            type: "string"
            pattern: "^[A-Za-z0-9_#]*$"
          title: "Columns"
          minItems: 1
        "ignore_null_fields":
          type: "boolean"
          title: "Ignore Null Fields"
          default: false
      title: "ToJsonStructTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "alias"
        - "columns"
      description: "To JSON struct transformation."
    "ToJsonTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "to_json"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "column":
          type: "string"
          title: "Column"
          pattern: "^[A-Za-z0-9_#]*$"
        "ignore_null_fields":
          type: "boolean"
          title: "Ignore Null Fields"
          default: false
      title: "ToJsonTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "column"
      description: "To JSON transformation."
    "ToStructTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "to_struct"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "alias":
          type: "string"
          title: "Alias"
          pattern: "^[A-Za-z0-9_#]*$"
        "columns":
          type: "array"
          items:
            type: "string"
            pattern: "^[A-Za-z0-9_#]*$"
          title: "Columns"
          minItems: 1
      title: "ToStructTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "alias"
        - "columns"
      description: "To struct transformation."
    "TokenDataResponse":
      type: "object"
      properties:
        "user_id":
          type: "string"
          title: "User Id"
      title: "TokenDataResponse"
      required:
        - "user_id"
    "TokenOpenID":
      type: "object"
      properties:
        "access_token":
          type: "string"
          title: "Access Token"
        "refresh_token":
          type: "string"
          title: "Refresh Token"
        "expires_in":
          type: "integer"
          title: "Expires In"
        "refresh_expires_in":
          type: "integer"
          title: "Refresh Expires In"
        "scope":
          type: "string"
          title: "Scope"
        "token_type":
          type: "string"
          title: "Token Type"
        "session_state":
          type: "string"
          title: "Session State"
      title: "TokenOpenID"
      required:
        - "access_token"
        - "refresh_token"
        - "expires_in"
        - "refresh_expires_in"
        - "scope"
        - "token_type"
        - "session_state"
    "UnionTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "union"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "other":
          type: "string"
          title: "Other"
          pattern: "^[a-z][a-z0-9_]*$"
        "allow_missing_columns":
          type: "boolean"
          title: "Allow Missing Columns"
          default: false
      title: "UnionTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "other"
      description: "Union transformation."
    "UnixTimestampColumn":
      type: "object"
      properties:
        "column":
          type: "string"
          title: "Column"
          pattern: "^[A-Za-z0-9_#]*$"
        "is_millis":
          type: "boolean"
          title: "Is Millis"
          default: false
      title: "UnixTimestampColumn"
      required:
        - "column"
      description: "UnixTimestampColumn model."
    "UnixtimeToTimestampTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "unixtime_to_timestamp"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "changes":
          type: "array"
          items: {"$ref": "#/components/schemas/UnixTimestampColumn"}
          title: "Changes"
          minItems: 1
      title: "UnixtimeToTimestampTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "changes"
      description: "Unixtime to Timestamp transformation."
    "UnpivotTransformation":
      type: "object"
      properties:
        "transform":
          type: "string"
          title: "Transform"
          const: "unpivot"
        "input":
          type: "string"
          title: "Input"
          pattern: "^[a-z][a-z0-9_]*$"
        "output":
          type: "string"
          title: "Output"
          pattern: "^[a-z][a-z0-9_]*$"
        "unpivot_columns":
          type: "array"
          items:
            type: "string"
            pattern: "^[A-Za-z0-9_#]*$"
          title: "Unpivot Columns"
          minItems: 1
        "name_column":
          type: "string"
          title: "Name Column"
          pattern: "^[A-Za-z0-9_#]*$"
        "values_column":
          anyOf:
            - type: "string"
              pattern: "^[A-Za-z0-9_#]*$"
            - type: "null"
          title: "Values Column"
      title: "UnpivotTransformation"
      required:
        - "transform"
        - "input"
        - "output"
        - "unpivot_columns"
        - "name_column"
      description: "Unpivot transformation."
    "UpdateApplicationRequest":
      type: "object"
      properties:
        "entity": {"$ref": "#/components/schemas/backend__data__schema__application__CreateEntity"}
      title: "UpdateApplicationRequest"
      required:
        - "entity"
      description: "Update application request."
    "UpdateClassificationRequest":
      type: "object"
      properties:
        "new_name":
          type: "string"
          title: "New Name"
          maxLength: 50
          minLength: 3
          pattern: "^[a-z][a-z0-9_-]*$"
          description: "New classification name (lowercase letters, numbers, hyphens, underscores only)"
        "description":
          anyOf:
            - type: "string"
              maxLength: 500
            - type: "null"
          title: "Description"
          description: "New classification description"
      title: "UpdateClassificationRequest"
      required:
        - "new_name"
      description: "Update classification request schema."
    "UpdateClassificationResult":
      type: "object"
      properties:
        "resolve":
          type: "array"
          items:
            type: "string"
            format: "uuid"
          title: "Resolve"
          minItems: 1
      title: "UpdateClassificationResult"
      required:
        - "resolve"
      description: "Update classification result."
    "UpdateComputeState":
      type: "object"
      properties:
        "state":
          oneOf:
            - {"$ref": "#/components/schemas/KillJob"}
            - {"$ref": "#/components/schemas/Schedule"}
            - {"$ref": "#/components/schemas/Reschedule"}
            - {"$ref": "#/components/schemas/RemoveSchedule"}
          discriminator:
            propertyName: "state"
            mapping:
              "kill_job": "#/components/schemas/KillJob"
              "remove_schedule": "#/components/schemas/RemoveSchedule"
              "reschedule": "#/components/schemas/Reschedule"
              "schedule": "#/components/schemas/Schedule"
          title: "State"
      title: "UpdateComputeState"
      required:
        - "state"
      description: "Update compute state."
    "UpdateDataObjectConfiguration":
      type: "object"
      properties:
        "configuration":
          oneOf:
            - {"$ref": "#/components/schemas/TableParams"}
            - {"$ref": "#/components/schemas/QueryParams"}
            - {"$ref": "#/components/schemas/CSVParams"}
            - {"$ref": "#/components/schemas/SyntheticParams"}
            - {"$ref": "#/components/schemas/DataProductParams"}
            - {"$ref": "#/components/schemas/ConnectorParquetParams"}
          discriminator:
            propertyName: "data_object_type"
            mapping:
              "csv": "#/components/schemas/CSVParams"
              "data_product": "#/components/schemas/DataProductParams"
              "parquet": "#/components/schemas/ConnectorParquetParams"
              "query": "#/components/schemas/QueryParams"
              "synthetic": "#/components/schemas/SyntheticParams"
              "table": "#/components/schemas/TableParams"
          title: "Configuration"
      title: "UpdateDataObjectConfiguration"
      required:
        - "configuration"
      description: "Update data object configuration."
    "UpdateDataProductSchema":
      type: "object"
      properties:
        "details":
          oneOf:
            - {"$ref": "#/components/schemas/StoredDataProductSchema"}
          discriminator:
            propertyName: "data_product_type"
            mapping:
              "stored": "#/components/schemas/StoredDataProductSchema"
          title: "Details"
      title: "UpdateDataProductSchema"
      required:
        - "details"
      description: "Update data product schema."
    "UpdateDataSourceConnection":
      type: "object"
      properties:
        "connection":
          oneOf:
            - {"$ref": "#/components/schemas/DatabaseDataSourceConnectionDetails"}
            - {"$ref": "#/components/schemas/S3DataSourceConnectionDetails"}
            - {"$ref": "#/components/schemas/SyntheticDataSourceConnectionDetails"}
          discriminator:
            propertyName: "connection_type"
            mapping:
              "database": "#/components/schemas/DatabaseDataSourceConnectionDetails"
              "s3": "#/components/schemas/S3DataSourceConnectionDetails"
              "synthetic": "#/components/schemas/SyntheticDataSourceConnectionDetails"
          title: "Connection"
      title: "UpdateDataSourceConnection"
      required:
        - "connection"
      description: "Update data source connection."
    "UpdateDataSystemRequest":
      type: "object"
      properties:
        "entity": {"$ref": "#/components/schemas/backend__data__schema__data_system__CreateEntity"}
      title: "UpdateDataSystemRequest"
      required:
        - "entity"
      description: "Update data system request."
    "UpdateEntityMetadataRequest":
      type: "object"
      properties:
        "fields":
          anyOf:
            - type: "object"
              additionalProperties: {"$ref": "#/components/schemas/FieldMetadata"}
            - type: "null"
          title: "Fields"
        "tags":
          anyOf:
            - type: "array"
              items:
                type: "string"
            - type: "null"
          title: "Tags"
        "classification_name":
          anyOf:
            - type: "string"
              pattern: "^[a-z][a-z0-9_-]*$"
            - type: "null"
          title: "Classification Name"
          description: "Classification name"
        "sensitivity_names":
          anyOf:
            - type: "array"
              items:
                type: "string"
                pattern: "^[a-z][a-z0-9_-]*$"
            - type: "null"
          title: "Sensitivity Names"
          description: "List of sensitivity names"
      title: "UpdateEntityMetadataRequest"
      description: "Update entity metadata request."
    "UpdateEntityRequest":
      type: "object"
      properties:
        "entity": {"$ref": "#/components/schemas/backend__data__schema__common__CreateEntity"}
      title: "UpdateEntityRequest"
      required:
        - "entity"
      description: "Update entity request."
    "UpdateMeshPinRequest":
      type: "object"
      properties:
        "is_pinned":
          type: "boolean"
          title: "Is Pinned"
      title: "UpdateMeshPinRequest"
      required:
        - "is_pinned"
      description: "Update mesh pin request."
    "UpdateOrchestratorWorkflow":
      type: "object"
      properties:
        "status":
          type: "string"
          title: "Status"
        "config":
          anyOf:
            - type: "object"
              additionalProperties: true
            - type: "null"
          title: "Config"
        "error_message":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Error Message"
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
        "completed_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Completed At"
      title: "UpdateOrchestratorWorkflow"
      required:
        - "status"
        - "config"
        - "error_message"
        - "updated_at"
        - "completed_at"
    "UpdateOrganization":
      type: "object"
      properties:
        "display_name":
          type: "string"
          title: "Display Name"
          maxLength: 255
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "owner":
          type: "string"
          title: "Owner"
          maxLength: 255
      title: "UpdateOrganization"
      required:
        - "display_name"
        - "description"
        - "owner"
    "UpdateSchema":
      type: "object"
      properties:
        "details": {"$ref": "#/components/schemas/Schema-Input"}
      title: "UpdateSchema"
      required:
        - "details"
      description: "Update data object schema."
    "UpdateSensitivityRequest":
      type: "object"
      properties:
        "new_name":
          type: "string"
          title: "New Name"
          maxLength: 50
          minLength: 3
          pattern: "^[a-z][a-z0-9_-]*$"
          description: "New sensitivity name (lowercase letters, numbers, hyphens, underscores only)"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
      title: "UpdateSensitivityRequest"
      required:
        - "new_name"
      description: "Request schema for updating a sensitivity."
    "User":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "first_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "First Name"
        "last_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Name"
        "email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email"
        "username":
          type: "string"
          title: "Username"
        "is_system":
          type: "boolean"
          title: "Is System"
        "enabled":
          type: "boolean"
          title: "Enabled"
        "is_admin":
          type: "boolean"
          title: "Is Admin"
          default: false
      title: "User"
      required:
        - "identifier"
        - "urn"
        - "first_name"
        - "last_name"
        - "email"
        - "username"
        - "is_system"
        - "enabled"
    "UserCredentials":
      type: "object"
      properties:
        "user":
          type: "string"
          title: "User"
        "password":
          type: "string"
          title: "Password"
        "remember_me":
          type: "boolean"
          title: "Remember Me"
          default: false
      title: "UserCredentials"
      required:
        - "user"
        - "password"
    "UserPolicies":
      type: "object"
      properties:
        "user":
          type: "string"
          title: "User"
          format: "uuid"
        "policies":
          type: "array"
          items: {"$ref": "#/components/schemas/Policy"}
          title: "Policies"
      title: "UserPolicies"
      required:
        - "user"
        - "policies"
    "UserPolicy":
      type: "object"
      properties:
        "user":
          type: "string"
          title: "User"
          format: "uuid"
        "policy": {"$ref": "#/components/schemas/Policy"}
        "is_system":
          type: "boolean"
          title: "Is System"
      title: "UserPolicy"
      required:
        - "user"
        - "policy"
        - "is_system"
    "UserWithConditions":
      type: "object"
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
          format: "uuid"
        "urn":
          type: "string"
          title: "Urn"
        "first_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "First Name"
        "last_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Name"
        "email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email"
        "username":
          type: "string"
          title: "Username"
        "is_system":
          type: "boolean"
          title: "Is System"
        "enabled":
          type: "boolean"
          title: "Enabled"
        "is_admin":
          type: "boolean"
          title: "Is Admin"
          default: false
        "allow_conditions":
          anyOf:
            - type: "array"
              items:
                type: "array"
                items:
                  type: "string"
            - type: "null"
          title: "Allow Conditions"
        "deny_conditions":
          anyOf:
            - type: "array"
              items:
                type: "array"
                items:
                  type: "string"
            - type: "null"
          title: "Deny Conditions"
      title: "UserWithConditions"
      required:
        - "identifier"
        - "urn"
        - "first_name"
        - "last_name"
        - "email"
        - "username"
        - "is_system"
        - "enabled"
        - "allow_conditions"
        - "deny_conditions"
    "Users":
      type: "object"
      properties:
        "users":
          type: "array"
          items: {"$ref": "#/components/schemas/User"}
          title: "Users"
      title: "Users"
      required:
        - "users"
    "Validation":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
        "expectations_id":
          type: "string"
          title: "Expectations Id"
        "entity":
          type: "string"
          title: "Entity"
        "success":
          type: "boolean"
          title: "Success"
        "success_percent":
          type: "number"
          title: "Success Percent"
        "table_score":
          type: "integer"
          title: "Table Score"
        "column_score":
          type: "string"
          title: "Column Score"
        "success_expectations":
          type: "integer"
          title: "Success Expectations"
        "failed_expectations":
          type: "integer"
          title: "Failed Expectations"
        "total_expectations":
          type: "integer"
          title: "Total Expectations"
        "result":
          type: "string"
          title: "Result"
        "table_stats":
          type: "string"
          title: "Table Stats"
        "column_stats":
          type: "string"
          title: "Column Stats"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
      title: "Validation"
      required:
        - "id"
        - "expectations_id"
        - "entity"
        - "success"
        - "success_percent"
        - "table_score"
        - "column_score"
        - "success_expectations"
        - "failed_expectations"
        - "total_expectations"
        - "result"
        - "table_stats"
        - "column_stats"
        - "created_at"
      description: "Validation."
    "ValidationError":
      type: "object"
      properties:
        "loc":
          type: "array"
          items:
            anyOf:
              - type: "string"
              - type: "integer"
          title: "Location"
        "msg":
          type: "string"
          title: "Message"
        "type":
          type: "string"
          title: "Error Type"
      title: "ValidationError"
      required:
        - "loc"
        - "msg"
        - "type"
    "ValidationResults":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/Validation"}
          title: "Results"
      title: "ValidationResults"
      required:
        - "results"
      description: "Validation results."
    "backend__data__builder__transformations__sort__SortDirection":
      type: "string"
      title: "SortDirection"
      enum:
        - "asc"
        - "desc"
      description: "Sort direction."
    "backend__data__constant__SortDirection":
      type: "string"
      title: "SortDirection"
      enum:
        - "asc"
        - "desc"
    "backend__data__model__EntityState":
      type: "object"
      properties:
        "code":
          type: "string"
          title: "Code"
        "reason":
          type: "string"
          title: "Reason"
        "healthy":
          type: "boolean"
          title: "Healthy"
      title: "EntityState"
      required:
        - "code"
        - "reason"
        - "healthy"
      description: "Entity state model."
    "backend__data__schema__application__CreateEntity":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
          pattern: "^[a-zA-Z_][a-zA-Z0-9_\\- ]{2,249}$"
        "entity_type": {"$ref": "#/components/schemas/EntityType"}
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "purpose":
          type: "string"
          title: "Purpose"
        "accountable_person": {"$ref": "#/components/schemas/Person"}
        "business_impact":
          type: "string"
          title: "Business Impact"
      title: "CreateEntity"
      required:
        - "name"
        - "entity_type"
        - "label"
        - "description"
        - "purpose"
        - "accountable_person"
        - "business_impact"
      description: "Create application entity."
    "backend__data__schema__common__CreateEntity":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
          pattern: "^[a-zA-Z_][a-zA-Z0-9_\\- ]{2,249}$"
        "entity_type": {"$ref": "#/components/schemas/EntityType"}
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
      title: "CreateEntity"
      required:
        - "name"
        - "entity_type"
        - "label"
        - "description"
      description: "Create entity."
    "backend__data__schema__common__EntityState":
      type: "object"
      properties:
        "code":
          type: "string"
          title: "Code"
        "reason":
          type: "string"
          title: "Reason"
        "healthy":
          type: "boolean"
          title: "Healthy"
      title: "EntityState"
      required:
        - "code"
        - "reason"
        - "healthy"
      description: "Entity state."
    "backend__data__schema__common__OK":
      type: "object"
      title: "OK"
      description: "OK response."
    "backend__data__schema__data_system__CreateEntity":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
          pattern: "^[a-zA-Z_][a-zA-Z0-9_\\- ]{2,249}$"
        "entity_type": {"$ref": "#/components/schemas/EntityType"}
        "label":
          type: "string"
          title: "Label"
          pattern: "^[a-zA-Z0-9]{1,3}$"
        "description":
          type: "string"
          title: "Description"
          maxLength: 1000
        "owner_person": {"$ref": "#/components/schemas/Person"}
      title: "CreateEntity"
      required:
        - "name"
        - "entity_type"
        - "label"
        - "description"
        - "owner_person"
      description: "Create data system entity."
    "backend__iam__schema__OK":
      type: "object"
      title: "OK"
  securitySchemes:
    "bearer":
      type: "http"
      description: "Enter your JWT token (Auth0 or internal)"
      scheme: "bearer"
      bearerFormat: "JWT"
